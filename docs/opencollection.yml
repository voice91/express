openapi: 3.0.0
info:
  title: LenderApp
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: local
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: user
  - name: user > auth
  - name: user > User
  - name: user > involvedUser
  - name: user > deal
  - name: user > dealNotes
  - name: user > lenderProgram
  - name: user > lendingInstitution
  - name: user > lenderPlacement
  - name: user > terms
  - name: user > lenderContact
  - name: user > emailTemplate
  - name: user > activityLog
  - name: user > task
  - name: user > dealDocument
  - name: advisor
  - name: advisor > auth
  - name: advisor > User
  - name: advisor > involvedUser
  - name: advisor > deal
  - name: advisor > dealNotes
  - name: advisor > lenderProgram
  - name: advisor > lendingInstitution
  - name: advisor > lenderPlacement
  - name: advisor > terms
  - name: advisor > lenderContact
  - name: advisor > emailTemplate
  - name: advisor > activityLog
  - name: advisor > task
  - name: advisor > dealDocument
  - name: lender
  - name: lender > auth
  - name: lender > User
  - name: lender > involvedUser
  - name: lender > deal
  - name: lender > dealNotes
  - name: lender > lenderProgram
  - name: lender > lendingInstitution
  - name: lender > lenderPlacement
  - name: lender > terms
  - name: lender > lenderContact
  - name: lender > emailTemplate
  - name: lender > activityLog
  - name: lender > task
  - name: lender > dealDocument
  - name: Health
paths:
  /v1/user/auth/register:
    post:
      tags:
        - user > auth
      summary: User Register API
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"name\": \"brandsWeLove\",\n\t\"email\":
                \"brandswelove@yopmail.com\",\n\t\"password\":
                \"Password@123\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"status\": \"Success\",\r\n    \"data\": {\r\n        \"success\": true,\r\n        \"message\": \"Email has been sent to your registered email. Please check your email and verify it\",\r\n        \"user\": {\r\n            \"name\": \"brandsWeLove\",\r\n            \"email\": \"brandswelove@yopmail.com\",\r\n            \"codes\": [],\r\n            \"id\": \"6324202158e1442e57d44f4a\"\r\n        },\r\n        \"tokens\": {\r\n            \"access\": {\r\n                \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MzI0MjAyMTU4ZTE0NDJlNTdkNDRmNGEiLCJpYXQiOjE2NjMzMTE5MDUsImV4cCI6MTY2MzMxMzcwNX0.K0hse8aWTfOSe9pCrFocFQzzHTZAW-Xhmoy_1tQHnfo\",\r\n                \"expires\": \"2022-09-16T07:35:05.736Z\"\r\n            },\r\n            \"refresh\": {\r\n                \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MzI0MjAyMTU4ZTE0NDJlNTdkNDRmNGEiLCJpYXQiOjE2NjMzMTE5MDUsImV4cCI6MTY2NTkwMzkwNX0.Axr9VnaT1HF_F3k0NmN4QyM0C6YYwMuBR71tpc6YpWI\",\r\n                \"expires\": \"2022-10-16T07:05:05.736Z\"\r\n            }\r\n        }\r\n    }\r\n}"
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 400,
                    "message": "Email already taken",
                    "stack": "Error: Email already taken\n    at _callee5$ (/Users/macos/projects/demo/services/user.service.js:18:11)\n    at tryCatch (/Users/macos/projects/demo/services/user.service.js:26:2404)\n    at Generator._invoke (/Users/macos/projects/demo/services/user.service.js:26:1964)\n    at Generator.next (/Users/macos/projects/demo/services/user.service.js:26:3255)\n    at asyncGeneratorStep (/Users/macos/projects/demo/services/user.service.js:28:103)\n    at _next (/Users/macos/projects/demo/services/user.service.js:30:194)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/user/auth/login:
    post:
      tags:
        - user > auth
      summary: User Login API
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"email\": \"brandswelove@yopmail.com\",\n\t\"password\":
                \"Password@123\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "user": {
                        "closetPolicy": {
                            "dryCleaning": "dry_cleaning_myself",
                            "rentalRequests": "rental_approve_not",
                            "shipping": "national_shipping"
                        },
                        "picture": "https://chia-app-dev.s3.amazonaws.com/users/60ceba70a5303d040bb8fead/61014ed6f7d99f00094b77b2/EE761E82-06B5-4C4A-B650-D61B1B4F8648.jpg",
                        "phoneVerified": false,
                        "emailVerified": true,
                        "paymentVerified": false,
                        "trusted": false,
                        "speedyShipper": false,
                        "quickResponder": false,
                        "nationalShipping": false,
                        "offersAccepted": false,
                        "role": "admin",
                        "active": true,
                        "vacationMode": false,
                        "sellerAverageRating": 4,
                        "sellerRatingCount": 1,
                        "buyerAverageRating": 5,
                        "buyerRatingCount": 1,
                        "name": "Hardik",
                        "email": "brandswelove@yopmail.com",
                        "addresses": [
                            {
                                "type": "shipping",
                                "_id": "60e03ccb38a3e0000992f1c8",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "145",
                                "line2": "Laskana",
                                "postalCode": "395006",
                                "fullName": "11",
                                "phoneNumber": "972757"
                            },
                            {
                                "type": "shipping",
                                "_id": "60e041e1673571000812ecc0",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "12",
                                "line2": "kapodra",
                                "postalCode": "395006"
                            },
                            {
                                "type": "billing",
                                "_id": "60e3f7843f9e510008f11084",
                                "city": "Surat",
                                "state": "Gujarat",
                                "country": "Albania",
                                "line1": "139, matrushakti",
                                "line2": "Surat",
                                "postalCode": "395006",
                                "fullName": "Bhavesh b",
                                "phoneNumber": "9727572204"
                            },
                            {
                                "type": "billing",
                                "_id": "60e435bcde21190008202880",
                                "city": "Surta",
                                "state": "Gujarart",
                                "country": "Afghanistan",
                                "line1": "2",
                                "line2": "Gsvdsg",
                                "postalCode": "395005",
                                "fullName": "Asd",
                                "phoneNumber": "8956321457882"
                            },
                            {
                                "type": "billing",
                                "_id": "60e4363fde21190008202889",
                                "city": "Suart",
                                "state": "Gujarat",
                                "country": "Afghanistan",
                                "line1": "95",
                                "line2": "Raval Faliyu",
                                "postalCode": "395006",
                                "fullName": "Sahil Raval",
                                "phoneNumber": "8956231478"
                            },
                            {
                                "type": "shipping",
                                "_id": "60e436aadd17280008f41ffb",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "12",
                                "line2": "kapodra",
                                "postalCode": "395006"
                            },
                            {
                                "type": "shipping",
                                "_id": "60e68770ab2a6e000919057d",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "12",
                                "line2": "kapodra",
                                "postalCode": "395006"
                            },
                            {
                                "type": "shipping",
                                "_id": "60e692516b897800082c688e",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "12",
                                "line2": "kapodra",
                                "postalCode": "395006"
                            },
                            {
                                "type": "shipping",
                                "_id": "60ed1ed303c4420008a15027",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "12",
                                "line2": "kapodra",
                                "postalCode": "395006"
                            },
                            {
                                "type": "return",
                                "_id": "60f502742603050008695e8b",
                                "city": "Delhi",
                                "state": "UP",
                                "country": "India",
                                "line1": "123",
                                "line2": "562 north delhi",
                                "postalCode": "395001",
                                "fullName": "Test user",
                                "phoneNumber": "9727571144"
                            },
                            {
                                "type": "return",
                                "_id": "60f94455d297880008dcd270",
                                "city": "Surat",
                                "state": "Gujarat",
                                "country": "Albania",
                                "line1": "Tested",
                                "line2": "125",
                                "postalCode": "395006",
                                "fullName": "Testing user",
                                "phoneNumber": "121212121"
                            },
                            {
                                "type": "shipping",
                                "_id": "610266cde5c45a0008d14baa",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "12",
                                "line2": "kapodra",
                                "postalCode": "395006"
                            }
                        ],
                        "bio": "Hello, I am Hardik Beladiya",
                        "lastName": "Beladiya",
                        "phoneNumber": "8140447270",
                        "interest": {
                            "styles": [
                                {
                                    "active": true,
                                    "name": "Luxury",
                                    "description": "Luxury is theb Style in which User can Luxury",
                                    "iconUrl": "https://cdn.shopify.com/s/files/1/0006/0420/9215/files/fashion_styles_casual_1000.jpg",
                                    "id": "60d1b7a6c3b1f3132df11176"
                                },
                                {
                                    "active": true,
                                    "name": "StreetWear",
                                    "description": "StreetWear is theb Style in which User can StreetWear",
                                    "iconUrl": "https://cdn.shopify.com/s/files/1/0006/0420/9215/files/fashion_styles_casual_1000.jpg",
                                    "id": "60d1b7b8c3b1f3132df11177"
                                },
                                {
                                    "active": true,
                                    "name": "SportWear",
                                    "description": "SportWear is theb Style in which User can SportWear",
                                    "iconUrl": "https://cdn.shopify.com/s/files/1/0006/0420/9215/files/fashion_styles_casual_1000.jpg",
                                    "id": "60d1b7c6c3b1f3132df11178"
                                },
                                {
                                    "active": true,
                                    "name": "Independent Brands",
                                    "description": "Independent Brands is theb Style in which User can Independent Brands",
                                    "iconUrl": "https://cdn.shopify.com/s/files/1/0006/0420/9215/files/fashion_styles_casual_1000.jpg",
                                    "id": "60d1b7d7c3b1f3132df11179"
                                },
                                {
                                    "active": true,
                                    "name": "Trend",
                                    "description": "Trend is theb Style in which User can Trend",
                                    "iconUrl": "https://cdn.shopify.com/s/files/1/0006/0420/9215/files/fashion_styles_casual_1000.jpg",
                                    "id": "60d1b7e9c3b1f3132df1117a"
                                }
                            ],
                            "designers": [
                                {
                                    "active": true,
                                    "name": "Gucci",
                                    "description": "Gucci si Famous Brand",
                                    "id": "60d1bba3c4088013a607e246"
                                },
                                {
                                    "active": true,
                                    "name": "Prada",
                                    "description": "Prada si Famous Brand",
                                    "id": "60d70139907f852ca211d5db"
                                },
                                {
                                    "active": true,
                                    "name": "Prada",
                                    "description": "Prada si Famous Brand",
                                    "id": "60fe9c6e69bf380008a5ec68"
                                }
                            ],
                            "sizes": [
                                {
                                    "type": "clothes",
                                    "standard": [
                                        "00",
                                        "XXS"
                                    ],
                                    "active": true,
                                    "name": "small",
                                    "id": "60d188bec5ef3e0f7bca1454"
                                },
                                {
                                    "type": "denim",
                                    "standard": [
                                        "23"
                                    ],
                                    "active": true,
                                    "name": "small",
                                    "id": "60d6fc652bcbec230be4f681"
                                },
                                {
                                    "type": "shoes",
                                    "standard": [
                                        "US 4",
                                        "UK 2",
                                        "EU 35"
                                    ],
                                    "active": true,
                                    "name": "small",
                                    "id": "60d6fc8c2bcbec230be4f685"
                                }
                            ],
                            "_id": "610253eccea3760009e0cc79"
                        },
                        "followingCount": 12,
                        "followerCount": 7,
                        "transactions": 11,
                        "id": "60ceba70a5303d040bb8fead"
                    },
                    "tokens": {
                        "access": {
                            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MGNlYmE3MGE1MzAzZDA0MGJiOGZlYWQiLCJpYXQiOjE2Mjg0ODM2MjcsImV4cCI6MTYyODY2MzYyN30.3J28mllL-Uh338oCOHCydnuadPn0vIfdDyPnyB5_6ZQ",
                            "expires": "2021-08-11T06:33:47.393Z"
                        },
                        "refresh": {
                            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MGNlYmE3MGE1MzAzZDA0MGJiOGZlYWQiLCJpYXQiOjE2Mjg0ODM2MjcsImV4cCI6MTYzMTA3NTYyN30.-xQYtkvdOPXJ_rIaPfINIjZrSUpBKsbxApR-89X3jys",
                            "expires": "2021-09-08T04:33:47.394Z"
                        }
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              examples:
                example-0:
                  summary: User Login Failed
                  value: |-
                    {
                        "code": 400,
                        "message": "Incorrect email or password",
                        "stack": "Error: Incorrect email or password\n    at Object.loginUserWithEmailAndPassword (/var/task/services/auth.service.js:17:11)\n    at async /var/task/controllers/auth.controller.js:21:14"
                    }
                example-1:
                  summary: User Login API fail
                  value: |-
                    {
                        "code": 400,
                        "message": "Incorrect email or password",
                        "stack": "Error: Incorrect email or password\n    at Object.loginUserWithEmailAndPassword (/var/task/services/auth.service.js:17:11)\n    at async /var/task/controllers/auth.controller.js:21:14"
                    }
  /v1/user/auth/forgot-password:
    post:
      tags:
        - user > auth
      summary: ForgetPassword API
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n\t\"email\": \"brandswelove@yopmail.com\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "success": true,
                        "message": "Code has been sent"
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 400,
                    "message": "no user found with this email",
                    "stack": "Error: no user found with this email\n    at _callee2$ (/Users/macos/projects/postmantTest/services/auth.service.js:34:11)\n    at tryCatch (/Users/macos/projects/postmantTest/services/auth.service.js:22:2404)\n    at Generator._invoke (/Users/macos/projects/postmantTest/services/auth.service.js:22:1964)\n    at Generator.next (/Users/macos/projects/postmantTest/services/auth.service.js:22:3255)\n    at asyncGeneratorStep (/Users/macos/projects/postmantTest/services/auth.service.js:24:103)\n    at _next (/Users/macos/projects/postmantTest/services/auth.service.js:26:194)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/user/auth/verify-reset-otp:
    post:
      tags:
        - user > auth
      summary: Forget password otp verify
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: brandswelove@yopmail.com
                otp: 5689
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "success": true
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 400,
                    "message": "otp is Invalid",
                    "stack": "Error: otp is Invalid\
                    at _callee6$ (/Users/macos/projects/postmantTest/services/token.service.js:120:11)\
                    at tryCatch (/Users/macos/projects/postmantTest/services/token.service.js:28:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/services/token.service.js:28:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/services/token.service.js:28:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/services/token.service.js:30:103)\
                    at _next (/Users/macos/projects/postmantTest/services/token.service.js:32:194)\
                    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/user/auth/send-verify-otp:
    post:
      tags:
        - user > auth
      summary: Send VerifyEmail OTP
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n\t\"email\": \"brandswelove@yopmail.com\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {\n    \"status\": \"Success\",\n    \"data\": {\n       
                \"success\": true,\n        \"message\": \"Email has been sent
                to your registered email. Please check your email and verify
                it\"\n    }\n}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 400,
                    "message": "no user found with this id!",
                    "stack": "Error: no user found with this id!\
                    at _callee9$ (/Users/macos/projects/postmantTest/controllers/auth.controller.js:73:11)\
                    at tryCatch (/Users/macos/projects/postmantTest/controllers/auth.controller.js:30:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/controllers/auth.controller.js:30:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/controllers/auth.controller.js:30:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/controllers/auth.controller.js:32:103)\
                    at _next (/Users/macos/projects/postmantTest/controllers/auth.controller.js:34:194)\
                    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/user/auth/verify-otp:
    post:
      tags:
        - user > auth
      summary: VerifyEmail OTP
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"email\": \"brandswelove@yopmail.com\",\n\t\"otp\":
                6790\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "success": true
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 400,
                    "message": "otp is Invalid",
                    "stack": "Error: otp is Invalid\
                    at _callee4$ (/Users/macos/projects/postmantTest/services/token.service.js:87:11)\
                    at tryCatch (/Users/macos/projects/postmantTest/services/token.service.js:28:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/services/token.service.js:28:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/services/token.service.js:28:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/services/token.service.js:30:103)\
                    at _next (/Users/macos/projects/postmantTest/services/token.service.js:32:194)\
                    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/user/auth/me:
    get:
      tags:
        - user > auth
      summary: Get Current LoggedIn User
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "user": {
                            "name": "brandsWeLove",
                            "email": "brandswelove@yopmail.com",
                            "codes": [
                                {
                                    "_id": "632445f374b9534093707e5a",
                                    "code": "2397",
                                    "expirationDate": "2022-09-16T09:56:27.827Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "632446f0b39a9240eaf3a34c",
                                    "code": "2645",
                                    "expirationDate": "2022-09-16T10:00:40.588Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "632446f1b39a9240eaf3a34f",
                                    "code": "1454",
                                    "expirationDate": "2022-09-16T10:00:41.785Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "632447e9b39a9240eaf3a358",
                                    "code": "3490",
                                    "expirationDate": "2022-09-16T10:04:49.108Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "6324481ab39a9240eaf3a361",
                                    "code": "5057",
                                    "expirationDate": "2022-09-16T10:05:38.968Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "63244938b39a9240eaf3a364",
                                    "code": "2239",
                                    "expirationDate": "2022-09-16T10:10:24.424Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "63244965a5de9f41aa207ceb",
                                    "code": "6872",
                                    "expirationDate": "2022-09-16T10:11:09.686Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "63244968a5de9f41aa207cee",
                                    "code": "7935",
                                    "expirationDate": "2022-09-16T10:11:12.028Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "63244afe3df3e0420eb7d615",
                                    "code": "6102",
                                    "expirationDate": "2022-09-16T10:17:58.013Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "63244b863df3e0420eb7d61a",
                                    "code": "8780",
                                    "expirationDate": "2022-09-16T10:20:14.263Z",
                                    "used": false,
                                    "codeType": "login"
                                }
                            ],
                            "id": "6324400426177b3af85933b0"
                        }
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 401,
                    "message": "Please authenticate",
                    "stack": "Error: Please authenticate\
                    at _callee$ (/Users/macos/projects/postmantTest/middlewares/auth.js:6:19)\
                    at tryCatch (/Users/macos/projects/postmantTest/middlewares/auth.js:13:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/middlewares/auth.js:13:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/middlewares/auth.js:13:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/middlewares/auth.js:15:103)\
                    at _next (/Users/macos/projects/postmantTest/middlewares/auth.js:17:194)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:364\
                    at new Promise (<anonymous>)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:97\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:4:24\
                    at allFailed (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:107:18)\
                    at attempt (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:180:28)\
                    at JwtStrategy.strategy.fail (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:302:9)\
                    at /Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:106:33\
                    at /Users/macos/projects/postmantTest/node_modules/jsonwebtoken/verify.js:152:16\
                    at getSecret (/Users/macos/projects/postmantTest/node_modules/jsonwebtoken/verify.js:90:14)\
                    at Object.module.exports [as verify] (/Users/macos/projects/postmantTest/node_modules/jsonwebtoken/verify.js:94:10)\
                    at Function.module.exports [as JwtVerifier] (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/verify_jwt.js:4:16)\
                    at /Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:104:25\
                    at JwtStrategy._secretOrKeyProvider (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:40:13)\
                    at JwtStrategy.authenticate (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:99:10)\
                    at attempt (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:366:16)\
                    at authenticate (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:367:7)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:18:5\
                    at new Promise (<anonymous>)\
                    at _callee2$ (/Users/macos/projects/postmantTest/middlewares/auth.js:17:10)\
                    at tryCatch (/Users/macos/projects/postmantTest/middlewares/auth.js:13:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/middlewares/auth.js:13:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/middlewares/auth.js:13:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/middlewares/auth.js:15:103)\
                    at _next (/Users/macos/projects/postmantTest/middlewares/auth.js:17:194)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:364\
                    at new Promise (<anonymous>)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:97\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:16:14\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/route.js:137:13)\
                    at Route.dispatch (/Users/macos/projects/postmantTest/node_modules/express/lib/router/route.js:112:3)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:281:22\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)\
                    at router (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:47:12)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at trim_prefix (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:317:13)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:284:7\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)"
                }
    put:
      tags:
        - user > auth
      summary: Update Profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Hardik
                lastName: Beladiya
                password: Password@123
                bio: Hello, I am Hardik Beladiya
                phoneNumber: '8140447270'
                vacationMode: true
                closetPolicy:
                  dryCleaning: dry_cleaning_all
                  rentalRequests: rental_approve_all
                  shipping: same_day_delivery
                picture: >-
                  https://chia-app-dev.s3.amazonaws.com/users/60ceba70a5303d040bb8fead/60f9501f0f1d48348ff5e433/helloworld23.jpg
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "user": {
                        "name": "Hardik",
                        "email": "test@yopmail.com",
                        "codes": [
                            {
                                "_id": "6327fc2939412f13e64aeb01",
                                "code": "6184",
                                "expirationDate": "2022-09-19T05:30:41.045Z",
                                "used": false,
                                "codeType": "resetPassword"
                            },
                            {
                                "_id": "6327fc595e57e1140efbef85",
                                "code": "5846",
                                "expirationDate": "2022-09-19T05:31:29.163Z",
                                "used": false,
                                "codeType": "resetPassword"
                            },
                            {
                                "_id": "6327fc935e57e1140efbef8a",
                                "code": "2418",
                                "expirationDate": "2022-09-19T05:32:27.612Z",
                                "used": false,
                                "codeType": "login"
                            },
                            {
                                "_id": "6327fc9b5e57e1140efbef8d",
                                "code": "1428",
                                "expirationDate": "2022-09-19T05:32:35.939Z",
                                "used": false,
                                "codeType": "login"
                            }
                        ],
                        "id": "6327fb66af25dc13b9547219"
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 401,
                    "message": "Please authenticate",
                    "stack": "Error: Please authenticate\
                    at _callee$ (/Users/macos/projects/postmantTest/middlewares/auth.js:6:19)\
                    at tryCatch (/Users/macos/projects/postmantTest/middlewares/auth.js:13:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/middlewares/auth.js:13:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/middlewares/auth.js:13:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/middlewares/auth.js:15:103)\
                    at _next (/Users/macos/projects/postmantTest/middlewares/auth.js:17:194)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:364\
                    at new Promise (<anonymous>)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:97\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:4:24\
                    at allFailed (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:107:18)\
                    at attempt (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:180:28)\
                    at JwtStrategy.strategy.fail (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:302:9)\
                    at /Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:106:33\
                    at /Users/macos/projects/postmantTest/node_modules/jsonwebtoken/verify.js:152:16\
                    at getSecret (/Users/macos/projects/postmantTest/node_modules/jsonwebtoken/verify.js:90:14)\
                    at Object.module.exports [as verify] (/Users/macos/projects/postmantTest/node_modules/jsonwebtoken/verify.js:94:10)\
                    at Function.module.exports [as JwtVerifier] (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/verify_jwt.js:4:16)\
                    at /Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:104:25\
                    at JwtStrategy._secretOrKeyProvider (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:40:13)\
                    at JwtStrategy.authenticate (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:99:10)\
                    at attempt (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:366:16)\
                    at authenticate (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:367:7)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:18:5\
                    at new Promise (<anonymous>)\
                    at _callee2$ (/Users/macos/projects/postmantTest/middlewares/auth.js:17:10)\
                    at tryCatch (/Users/macos/projects/postmantTest/middlewares/auth.js:13:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/middlewares/auth.js:13:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/middlewares/auth.js:13:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/middlewares/auth.js:15:103)\
                    at _next (/Users/macos/projects/postmantTest/middlewares/auth.js:17:194)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:364\
                    at new Promise (<anonymous>)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:97\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:16:14\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/route.js:137:13)\
                    at Route.dispatch (/Users/macos/projects/postmantTest/node_modules/express/lib/router/route.js:112:3)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:281:22\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)\
                    at router (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:47:12)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at trim_prefix (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:317:13)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:284:7\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)"
                }
  /v1/user/auth/reset-password:
    post:
      tags:
        - user > auth
      summary: change password with otp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: brandswelove@yopmail.com
                password: password@123
                otp: 2345
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "success": true,
                        "message": "Password has been reset successfully"
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 400,
                    "message": "otp is Invalid",
                    "stack": "Error: otp is Invalid\
                    at _callee5$ (/Users/macos/projects/postmantTest/services/token.service.js:104:11)\
                    at tryCatch (/Users/macos/projects/postmantTest/services/token.service.js:28:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/services/token.service.js:28:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/services/token.service.js:28:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/services/token.service.js:30:103)\
                    at _next (/Users/macos/projects/postmantTest/services/token.service.js:32:194)\
                    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/user/auth/logout:
    post:
      tags:
        - user > auth
      summary: logout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                refreshToken: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MGNlYmE3MGE1MzAzZDA0MGJiOGZlYWQiLCJpYXQiOjE2MjQ3MTAyNzQsImV4cCI6MTYyNzMwMjI3NH0.AQwznHISR6gRlyCSCjKONY0EMvCZfRD_5FdGSxYFVeM
                deviceToken: '123'
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "success": true
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 401,
                    "message": "Please authenticate",
                    "stack": "Error: Please authenticate\
                    at _callee$ (/Users/macos/projects/postmantTest/middlewares/auth.js:6:19)\
                    at tryCatch (/Users/macos/projects/postmantTest/middlewares/auth.js:13:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/middlewares/auth.js:13:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/middlewares/auth.js:13:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/middlewares/auth.js:15:103)\
                    at _next (/Users/macos/projects/postmantTest/middlewares/auth.js:17:194)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:364\
                    at new Promise (<anonymous>)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:97\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:4:24\
                    at allFailed (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:107:18)\
                    at attempt (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:180:28)\
                    at JwtStrategy.strategy.fail (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:302:9)\
                    at JwtStrategy.authenticate (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:96:21)\
                    at attempt (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:366:16)\
                    at authenticate (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:367:7)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:19:5\
                    at new Promise (<anonymous>)\
                    at _callee2$ (/Users/macos/projects/postmantTest/middlewares/auth.js:17:10)\
                    at tryCatch (/Users/macos/projects/postmantTest/middlewares/auth.js:13:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/middlewares/auth.js:13:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/middlewares/auth.js:13:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/middlewares/auth.js:15:103)\
                    at _next (/Users/macos/projects/postmantTest/middlewares/auth.js:17:194)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:364\
                    at new Promise (<anonymous>)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:97\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:16:14\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/route.js:137:13)\
                    at Route.dispatch (/Users/macos/projects/postmantTest/node_modules/express/lib/router/route.js:112:3)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:281:22\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)\
                    at router (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:47:12)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at trim_prefix (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:317:13)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:284:7\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)\
                    at router (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:47:12)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at trim_prefix (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:317:13)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:284:7\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)"
                }
  /v1/user/auth/refresh-tokens:
    post:
      tags:
        - user > auth
      summary: refresh token api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                refreshToken: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MGNlYmE3MGE1MzAzZDA0MGJiOGZlYWQiLCJpYXQiOjE2MjY4NDA5MzksImV4cCI6MTYyOTQzMjkzOX0.lGJKNTRcHquf1LIErNgGZnJ284ojXjLh6ovYzZFjBl8
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "access": {
                            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MzI0NjNkYzM0ZWUwYjRlZTNiNzliOWIiLCJpYXQiOjE2NjMzMzA2NDIsImV4cCI6MTY2MzMzMjQ0Mn0.1vPjrpTE5i_WrA_eqVcNHZebVz-j79CGzc14hW1xzpU",
                            "expires": "2022-09-16T12:47:22.421Z"
                        },
                        "refresh": {
                            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MzI0NjNkYzM0ZWUwYjRlZTNiNzliOWIiLCJpYXQiOjE2NjMzMzA2NDIsImV4cCI6MTY2NTkyMjY0Mn0.ZBTMp4UFl10gVrJFV3Y_Yov3BLrUsMjVcoouBdl_Fe8",
                            "expires": "2022-10-16T12:17:22.423Z"
                        }
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 401,
                    "message": "Please authenticate",
                    "stack": "Error: Please authenticate\
                    at _callee3$ (/Users/macos/projects/postmantTest/services/auth.service.js:65:11)\
                    at tryCatch (/Users/macos/projects/postmantTest/services/auth.service.js:22:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/services/auth.service.js:22:1964)\
                    at Generator.throw (/Users/macos/projects/postmantTest/services/auth.service.js:22:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/services/auth.service.js:24:103)\
                    at _throw (/Users/macos/projects/postmantTest/services/auth.service.js:26:291)\
                    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/user/auth/register-device-token:
    post:
      tags:
        - user > auth
      summary: register-device-token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deviceToken: abcd123
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "name": "brandsWeLove",
                        "email": "test@yopmail.com",
                        "codes": [],
                        "deviceTokens": [
                            {
                                "_id": "632841ca8a7d165589aaf9b0",
                                "deviceToken": "abcd123"
                            },
                            {
                                "_id": "632845e38a7d165589aaf9b7",
                                "deviceToken": "abcd1234"
                            }
                        ],
                        "id": "632841b649310a5524fed88e"
                    }
                }
        '400':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 401,
                    "message": "Please authenticate",
                    "stack": "Error: Please authenticate\n    at _callee$ (/Users/macos/projects/notificationTest/middlewares/auth.js:6:19)\n    at tryCatch (/Users/macos/projects/notificationTest/middlewares/auth.js:13:2404)\n    at Generator._invoke (/Users/macos/projects/notificationTest/middlewares/auth.js:13:1964)\n    at Generator.next (/Users/macos/projects/notificationTest/middlewares/auth.js:13:3255)\n    at asyncGeneratorStep (/Users/macos/projects/notificationTest/middlewares/auth.js:15:103)\n    at _next (/Users/macos/projects/notificationTest/middlewares/auth.js:17:194)\n    at /Users/macos/projects/notificationTest/middlewares/auth.js:17:364\n    at new Promise (<anonymous>)\n    at /Users/macos/projects/notificationTest/middlewares/auth.js:17:97\n    at /Users/macos/projects/notificationTest/middlewares/auth.js:4:24\n    at allFailed (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:107:18)\n    at attempt (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:180:28)\n    at JwtStrategy.strategy.fail (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:302:9)\n    at JwtStrategy.authenticate (/Users/macos/projects/notificationTest/node_modules/passport-jwt/lib/strategy.js:96:21)\n    at attempt (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:366:16)\n    at authenticate (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:367:7)"
                }
  /v1/user/auth/update-device-token:
    post:
      tags:
        - user > auth
      summary: update-device-token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deviceToken: abcd123
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "name": "brandsWeLove",
                        "email": "test@yopmail.com",
                        "codes": [],
                        "deviceTokens": [
                            {
                                "_id": "632841ca8a7d165589aaf9b0",
                                "deviceToken": "abcd123"
                            }
                        ],
                        "id": "632841b649310a5524fed88e"
                    }
                }
        '400':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 401,
                    "message": "Please authenticate",
                    "stack": "Error: Please authenticate\n    at _callee$ (/Users/macos/projects/notificationTest/middlewares/auth.js:6:19)\n    at tryCatch (/Users/macos/projects/notificationTest/middlewares/auth.js:13:2404)\n    at Generator._invoke (/Users/macos/projects/notificationTest/middlewares/auth.js:13:1964)\n    at Generator.next (/Users/macos/projects/notificationTest/middlewares/auth.js:13:3255)\n    at asyncGeneratorStep (/Users/macos/projects/notificationTest/middlewares/auth.js:15:103)\n    at _next (/Users/macos/projects/notificationTest/middlewares/auth.js:17:194)\n    at /Users/macos/projects/notificationTest/middlewares/auth.js:17:364\n    at new Promise (<anonymous>)\n    at /Users/macos/projects/notificationTest/middlewares/auth.js:17:97\n    at /Users/macos/projects/notificationTest/middlewares/auth.js:4:24\n    at allFailed (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:107:18)\n    at attempt (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:180:28)\n    at JwtStrategy.strategy.fail (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:302:9)\n    at JwtStrategy.authenticate (/Users/macos/projects/notificationTest/node_modules/passport-jwt/lib/strategy.js:96:21)\n    at attempt (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:366:16)\n    at authenticate (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:367:7)"
                }
  /v1/user/auth/google:
    post:
      tags:
        - user > auth
      summary: Google Login API
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"access_token\":
                \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjFiZjhhODRkM2VjZDc3ZTlmMmFkNWYwNmZmZDI2MDcwMWRkMDZkOTAiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiIxMDQxNjI0OTc4MjIwLW9yN28zYTBsMm9nMmFwajgwbmJmYTJwbDE0amgxcW9yLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwiYXVkIjoiMTA0MTYyNDk3ODIyMC1zbGhpcGdmMDQ5ZmNjNDd0dG11MmY3dHFhYWNlbDN0ZC5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbSIsInN1YiI6IjExNDk5MTY4ODU3ODMwMzA1OTkwMyIsImVtYWlsIjoic2FoaWxyMDIxNkBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwibmFtZSI6IlNhaGlsIFJhdmFsIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hL0FBVFhBSnlwZ0tieXJTRzJCcS1ZdVotbkFDY21aenVSVVpSUTZvemtNNmlKPXM5Ni1jIiwiZ2l2ZW5fbmFtZSI6IlNhaGlsIiwiZmFtaWx5X25hbWUiOiJSYXZhbCIsImxvY2FsZSI6ImVuLUdCIiwiaWF0IjoxNjI2MzM5NjgwLCJleHAiOjE2MjYzNDMyODB9.THio-PVSgh777CwdtPDANGfZcZYOkDMKXvNkBxjLVIdf1JjRwbO6OanNUMC5xelMbupuElLWdxGnnWwtjfnAuZBn3Q0P6ab-NVSC-IV2b9pQypCj_hDfGypghCuHfPXEhF7hMpDjTEdbHtIEQ-ZGje--fPAddgXznx9aLtyB5uqSxyqRsZvWfWR5DN5bRfA1kph07pXQuIGVzRgfRC_GWaeZrGDu_LQZ70DgHCusSt2v41bEPBtafJT3rf7ArDRI5RUMWIWnSYG475nLhuQFUgzLD_L3zcuLHDJ_BIcQ5reo7_u-NJ0CwVyNIb6UAkUauo1KZMp-tEntJ7kVlXod_g\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/user/user/{userId}:
    get:
      tags:
        - user > User
      summary: getUserById
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"name":"lorem","role":"lorem","codes":["63bd04b2342fde7a69846a5a"],"password":"lorem","googleProvider":"63bd04b2342fde7a69846a5a","deviceTokens":"","firstName":"lorem","lastName":"lorem","phoneNumber":"lorem","company":"lorem","lastSignIn":"YYYY-MM-DD","id":"6419ab348f08bb22b97103b4"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - user > User
      summary: updateUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: lorem
                role: lorem
                codes:
                  - 63bd04b2342fde7a69846a5a
                password: lorem
                googleProvider: 63bd04b2342fde7a69846a5a
                deviceTokens: ''
                firstName: lorem
                lastName: lorem
                phoneNumber: lorem
                company: lorem
                lastSignIn: YYYY-MM-DD
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"name":"lorem","role":"lorem","codes":["63bd04b2342fde7a69846a5a"],"password":"lorem","googleProvider":"63bd04b2342fde7a69846a5a","deviceTokens":"","firstName":"lorem","lastName":"lorem","phoneNumber":"lorem","company":"lorem","lastSignIn":"YYYY-MM-DD","id":"6419ab348f08bb22b97103b5"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - user > User
      summary: deleteUserById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/user/paginated:
    get:
      tags:
        - user > User
      summary: getUserPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"name":"lorem","role":"lorem","codes":["63bd04b2342fde7a69846a5a"],"password":"lorem","googleProvider":"63bd04b2342fde7a69846a5a","deviceTokens":"","firstName":"lorem","lastName":"lorem","phoneNumber":"lorem","company":"lorem","lastSignIn":"YYYY-MM-DD","id":"6419ab348f08bb22b97103b6"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/user/:
    get:
      tags:
        - user > User
      summary: getUser
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"name":"lorem","role":"lorem","codes":["63bd04b2342fde7a69846a5a"],"password":"lorem","googleProvider":"63bd04b2342fde7a69846a5a","deviceTokens":"","firstName":"lorem","lastName":"lorem","phoneNumber":"lorem","company":"lorem","lastSignIn":"YYYY-MM-DD","id":"6419ab348f08bb22b97103b7"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - user > User
      summary: createUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: lorem
                role: lorem
                codes:
                  - 63bd04b2342fde7a69846a5a
                password: lorem
                googleProvider: 63bd04b2342fde7a69846a5a
                deviceTokens: ''
                firstName: lorem
                lastName: lorem
                phoneNumber: lorem
                company: lorem
                lastSignIn: YYYY-MM-DD
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"name":"lorem","role":"lorem","codes":["63bd04b2342fde7a69846a5a"],"password":"lorem","googleProvider":"63bd04b2342fde7a69846a5a","deviceTokens":"","firstName":"lorem","lastName":"lorem","phoneNumber":"lorem","company":"lorem","lastSignIn":"YYYY-MM-DD","id":"6419ab348f08bb22b97103b8"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/involvedUser/:
    get:
      tags:
        - user > involvedUser
      summary: getInvolvedUser
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenders":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"borrowers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"advisors":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103b9"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - user > involvedUser
      summary: createInvolvedUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lenders:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                borrowers:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                advisors:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenders":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"borrowers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"advisors":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103bb"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/involvedUser/{involvedUserId}:
    put:
      tags:
        - user > involvedUser
      summary: updateInvolvedUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lenders:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                borrowers:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                advisors:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
      parameters:
        - name: involvedUserId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenders":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"borrowers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"advisors":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103ba"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - user > involvedUser
      summary: deleteInvolvedUserById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: involvedUserId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/deal/{dealId}:
    put:
      tags:
        - user > deal
      summary: updateDeal
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                dealName: lorem
                stage: lorem
                address: lorem
                city: lorem
                state: lorem
                zipcode: 100
                mapLocation:
                  type: Point
                  coordinates:
                    - 100
                    - 200
                involvedUsers: 63bd04b2342fde7a69846a5a
                involvedUsersLender:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                involvedUsersBorrower:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                involvedUsersAdvisor:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                assetType: lorem
                loanAmount: 100
                loanPurpose: lorem
                loanType: lorem
                tasks:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                dealNotes:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                lenderPlacement:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                documents:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
      parameters:
        - name: dealId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"dealName":"lorem","stage":"lorem","address":"lorem","city":"lorem","state":"lorem","zipcode":100,"mapLocation":{"type":"Point","coordinates":[100,200]},"involvedUsers":"63bd04b2342fde7a69846a5a","involvedUsersLender":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersBorrower":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersAdvisor":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"assetType":"lorem","loanAmount":100,"loanPurpose":"lorem","loanType":"lorem","tasks":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"dealNotes":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"lenderPlacement":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"documents":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103bc"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - user > deal
      summary: deleteDealById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: dealId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - user > deal
      summary: getDealById
      parameters:
        - name: dealId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"dealName":"lorem","stage":"lorem","address":"lorem","city":"lorem","state":"lorem","zipcode":100,"mapLocation":{"type":"Point","coordinates":[100,200]},"involvedUsers":"63bd04b2342fde7a69846a5a","involvedUsersLender":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersBorrower":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersAdvisor":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"assetType":"lorem","loanAmount":100,"loanPurpose":"lorem","loanType":"lorem","tasks":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"dealNotes":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"lenderPlacement":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"documents":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103c0"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/deal/paginated:
    get:
      tags:
        - user > deal
      summary: getDealPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"dealName":"lorem","stage":"lorem","address":"lorem","city":"lorem","state":"lorem","zipcode":100,"mapLocation":{"type":"Point","coordinates":[100,200]},"involvedUsers":"63bd04b2342fde7a69846a5a","involvedUsersLender":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersBorrower":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersAdvisor":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"assetType":"lorem","loanAmount":100,"loanPurpose":"lorem","loanType":"lorem","tasks":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"dealNotes":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"lenderPlacement":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"documents":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103bd"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/deal/:
    post:
      tags:
        - user > deal
      summary: createDeal
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                dealName: lorem
                stage: lorem
                address: lorem
                city: lorem
                state: lorem
                zipcode: 100
                mapLocation:
                  type: Point
                  coordinates:
                    - 100
                    - 200
                involvedUsers: 63bd04b2342fde7a69846a5a
                involvedUsersLender:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                involvedUsersBorrower:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                involvedUsersAdvisor:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                assetType: lorem
                loanAmount: 100
                loanPurpose: lorem
                loanType: lorem
                tasks:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                dealNotes:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                lenderPlacement:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                documents:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"dealName":"lorem","stage":"lorem","address":"lorem","city":"lorem","state":"lorem","zipcode":100,"mapLocation":{"type":"Point","coordinates":[100,200]},"involvedUsers":"63bd04b2342fde7a69846a5a","involvedUsersLender":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersBorrower":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersAdvisor":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"assetType":"lorem","loanAmount":100,"loanPurpose":"lorem","loanType":"lorem","tasks":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"dealNotes":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"lenderPlacement":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"documents":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103be"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - user > deal
      summary: getDeal
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"dealName":"lorem","stage":"lorem","address":"lorem","city":"lorem","state":"lorem","zipcode":100,"mapLocation":{"type":"Point","coordinates":[100,200]},"involvedUsers":"63bd04b2342fde7a69846a5a","involvedUsersLender":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersBorrower":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersAdvisor":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"assetType":"lorem","loanAmount":100,"loanPurpose":"lorem","loanType":"lorem","tasks":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"dealNotes":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"lenderPlacement":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"documents":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103bf"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/dealNotes/{dealNotesId}:
    delete:
      tags:
        - user > dealNotes
      summary: deleteDealNotesById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: dealNotesId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - user > dealNotes
      summary: getDealNotesById
      parameters:
        - name: dealNotesId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","pinnedByUsers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"flagedByUser":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103c3"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - user > dealNotes
      summary: updateDealNotes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deal: 63bd04b2342fde7a69846a5a
                pinnedByUsers:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                flagedByUser:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
      parameters:
        - name: dealNotesId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","pinnedByUsers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"flagedByUser":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103c4"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/dealNotes/paginated:
    get:
      tags:
        - user > dealNotes
      summary: getDealNotesPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","pinnedByUsers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"flagedByUser":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103c1"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/dealNotes/:
    get:
      tags:
        - user > dealNotes
      summary: getDealNotes
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","pinnedByUsers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"flagedByUser":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103c2"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - user > dealNotes
      summary: createDealNotes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deal: 63bd04b2342fde7a69846a5a
                pinnedByUsers:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                flagedByUser:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","pinnedByUsers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"flagedByUser":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103c5"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/lenderProgram/:
    get:
      tags:
        - user > lenderProgram
      summary: getLenderProgram
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderProgramType":"lorem","statesArray":["lorem","ipsum"],"minLoanSize":100,"maxLoanSize":100,"id":"6419ab348f08bb22b97103c6"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - user > lenderProgram
      summary: createLenderProgram
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lenderProgramType: lorem
                statesArray:
                  - lorem
                  - ipsum
                minLoanSize: 100
                maxLoanSize: 100
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderProgramType":"lorem","statesArray":["lorem","ipsum"],"minLoanSize":100,"maxLoanSize":100,"id":"6419ab348f08bb22b97103c9"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/lenderProgram/paginated:
    get:
      tags:
        - user > lenderProgram
      summary: getLenderProgramPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderProgramType":"lorem","statesArray":["lorem","ipsum"],"minLoanSize":100,"maxLoanSize":100,"id":"6419ab348f08bb22b97103c7"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/lenderProgram/{lenderProgramId}:
    get:
      tags:
        - user > lenderProgram
      summary: getLenderProgramById
      parameters:
        - name: lenderProgramId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderProgramType":"lorem","statesArray":["lorem","ipsum"],"minLoanSize":100,"maxLoanSize":100,"id":"6419ab348f08bb22b97103c8"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - user > lenderProgram
      summary: updateLenderProgram
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lenderProgramType: lorem
                statesArray:
                  - lorem
                  - ipsum
                minLoanSize: 100
                maxLoanSize: 100
      parameters:
        - name: lenderProgramId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderProgramType":"lorem","statesArray":["lorem","ipsum"],"minLoanSize":100,"maxLoanSize":100,"id":"6419ab348f08bb22b97103ca"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - user > lenderProgram
      summary: deleteLenderProgramById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: lenderProgramId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/lendingInstitution/{lendingInstitutionId}:
    delete:
      tags:
        - user > lendingInstitution
      summary: deleteLendingInstitutionById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: lendingInstitutionId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - user > lendingInstitution
      summary: getLendingInstitutionById
      parameters:
        - name: lendingInstitutionId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderNameVisible":"lorem","lenderNameInternal":"lorem","lenderType":"lorem","lenderPrograms":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"contacts":"63bd04b2342fde7a69846a5a","id":"6419ab348f08bb22b97103cd"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - user > lendingInstitution
      summary: updateLendingInstitution
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lenderNameVisible: lorem
                lenderNameInternal: lorem
                lenderType: lorem
                lenderPrograms:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                contacts: 63bd04b2342fde7a69846a5a
      parameters:
        - name: lendingInstitutionId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderNameVisible":"lorem","lenderNameInternal":"lorem","lenderType":"lorem","lenderPrograms":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"contacts":"63bd04b2342fde7a69846a5a","id":"6419ab348f08bb22b97103cf"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/lendingInstitution/paginated:
    get:
      tags:
        - user > lendingInstitution
      summary: getLendingInstitutionPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderNameVisible":"lorem","lenderNameInternal":"lorem","lenderType":"lorem","lenderPrograms":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"contacts":"63bd04b2342fde7a69846a5a","id":"6419ab348f08bb22b97103cb"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/lendingInstitution/:
    get:
      tags:
        - user > lendingInstitution
      summary: getLendingInstitution
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderNameVisible":"lorem","lenderNameInternal":"lorem","lenderType":"lorem","lenderPrograms":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"contacts":"63bd04b2342fde7a69846a5a","id":"6419ab348f08bb22b97103cc"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - user > lendingInstitution
      summary: createLendingInstitution
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lenderNameVisible: lorem
                lenderNameInternal: lorem
                lenderType: lorem
                lenderPrograms:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                contacts: 63bd04b2342fde7a69846a5a
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderNameVisible":"lorem","lenderNameInternal":"lorem","lenderType":"lorem","lenderPrograms":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"contacts":"63bd04b2342fde7a69846a5a","id":"6419ab348f08bb22b97103ce"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/lenderPlacement/:
    get:
      tags:
        - user > lenderPlacement
      summary: getLenderPlacement
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lendingInstitution":"63bd04b2342fde7a69846a5a","lenderContact":"63bd04b2342fde7a69846a5a","notes":["lorem","ipsum"],"stage":"lorem","terms":"63bd04b2342fde7a69846a5a","termSheet":"lorem","id":"6419ab348f08bb22b97103d0"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - user > lenderPlacement
      summary: createLenderPlacement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lendingInstitution: 63bd04b2342fde7a69846a5a
                lenderContact: 63bd04b2342fde7a69846a5a
                notes:
                  - lorem
                  - ipsum
                stage: lorem
                terms: 63bd04b2342fde7a69846a5a
                termSheet: lorem
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lendingInstitution":"63bd04b2342fde7a69846a5a","lenderContact":"63bd04b2342fde7a69846a5a","notes":["lorem","ipsum"],"stage":"lorem","terms":"63bd04b2342fde7a69846a5a","termSheet":"lorem","id":"6419ab348f08bb22b97103d3"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/lenderPlacement/{lenderPlacementId}:
    get:
      tags:
        - user > lenderPlacement
      summary: getLenderPlacementById
      parameters:
        - name: lenderPlacementId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lendingInstitution":"63bd04b2342fde7a69846a5a","lenderContact":"63bd04b2342fde7a69846a5a","notes":["lorem","ipsum"],"stage":"lorem","terms":"63bd04b2342fde7a69846a5a","termSheet":"lorem","id":"6419ab348f08bb22b97103d1"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - user > lenderPlacement
      summary: deleteLenderPlacementById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: lenderPlacementId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - user > lenderPlacement
      summary: updateLenderPlacement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lendingInstitution: 63bd04b2342fde7a69846a5a
                lenderContact: 63bd04b2342fde7a69846a5a
                notes:
                  - lorem
                  - ipsum
                stage: lorem
                terms: 63bd04b2342fde7a69846a5a
                termSheet: lorem
      parameters:
        - name: lenderPlacementId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lendingInstitution":"63bd04b2342fde7a69846a5a","lenderContact":"63bd04b2342fde7a69846a5a","notes":["lorem","ipsum"],"stage":"lorem","terms":"63bd04b2342fde7a69846a5a","termSheet":"lorem","id":"6419ab348f08bb22b97103d4"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/lenderPlacement/paginated:
    get:
      tags:
        - user > lenderPlacement
      summary: getLenderPlacementPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lendingInstitution":"63bd04b2342fde7a69846a5a","lenderContact":"63bd04b2342fde7a69846a5a","notes":["lorem","ipsum"],"stage":"lorem","terms":"63bd04b2342fde7a69846a5a","termSheet":"lorem","id":"6419ab348f08bb22b97103d2"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/terms/:
    get:
      tags:
        - user > terms
      summary: getTerms
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"initialFunding":100,"futureFunding":100,"totalLoanAmount":100,"interestRateType":"lorem","interestRateIndexValue":"lorem","interestRateIndexDate":"YYYY-MM-DD","spread":100,"totalRate":"lorem","rateNotes":"lorem","initialTerm":"lorem","extensionOptionOne":"lorem","extensionFee":"lorem","interestRateIndex":"lorem","extensionOptionTwo":"lorem","LTC":"lorem","id":"6419ab348f08bb22b97103d5"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - user > terms
      summary: createTerms
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                initialFunding: 100
                futureFunding: 100
                totalLoanAmount: 100
                interestRateType: lorem
                interestRateIndexValue: lorem
                interestRateIndexDate: YYYY-MM-DD
                spread: 100
                totalRate: lorem
                rateNotes: lorem
                initialTerm: lorem
                extensionOptionOne: lorem
                extensionFee: lorem
                interestRateIndex: lorem
                extensionOptionTwo: lorem
                LTC: lorem
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"initialFunding":100,"futureFunding":100,"totalLoanAmount":100,"interestRateType":"lorem","interestRateIndexValue":"lorem","interestRateIndexDate":"YYYY-MM-DD","spread":100,"totalRate":"lorem","rateNotes":"lorem","initialTerm":"lorem","extensionOptionOne":"lorem","extensionFee":"lorem","interestRateIndex":"lorem","extensionOptionTwo":"lorem","LTC":"lorem","id":"6419ab348f08bb22b97103d6"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/terms/{termsId}:
    delete:
      tags:
        - user > terms
      summary: deleteTermsById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: termsId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - user > terms
      summary: updateTerms
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                initialFunding: 100
                futureFunding: 100
                totalLoanAmount: 100
                interestRateType: lorem
                interestRateIndexValue: lorem
                interestRateIndexDate: YYYY-MM-DD
                spread: 100
                totalRate: lorem
                rateNotes: lorem
                initialTerm: lorem
                extensionOptionOne: lorem
                extensionFee: lorem
                interestRateIndex: lorem
                extensionOptionTwo: lorem
                LTC: lorem
      parameters:
        - name: termsId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"initialFunding":100,"futureFunding":100,"totalLoanAmount":100,"interestRateType":"lorem","interestRateIndexValue":"lorem","interestRateIndexDate":"YYYY-MM-DD","spread":100,"totalRate":"lorem","rateNotes":"lorem","initialTerm":"lorem","extensionOptionOne":"lorem","extensionFee":"lorem","interestRateIndex":"lorem","extensionOptionTwo":"lorem","LTC":"lorem","id":"6419ab348f08bb22b97103d7"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/lenderContact/:
    get:
      tags:
        - user > lenderContact
      summary: getLenderContact
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"firstName":"lorem","lastName":"lorem","nickname":"lorem","phoneNumberDirect":"lorem","phoneNumberOffice":"lorem","phoneNumberCell":"lorem","title":"lorem","city":"lorem","note":"lorem","state":"lorem","id":"6419ab348f08bb22b97103d8"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - user > lenderContact
      summary: createLenderContact
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: lorem
                lastName: lorem
                nickname: lorem
                phoneNumberDirect: lorem
                phoneNumberOffice: lorem
                phoneNumberCell: lorem
                title: lorem
                city: lorem
                note: lorem
                state: lorem
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"firstName":"lorem","lastName":"lorem","nickname":"lorem","phoneNumberDirect":"lorem","phoneNumberOffice":"lorem","phoneNumberCell":"lorem","title":"lorem","city":"lorem","note":"lorem","state":"lorem","id":"6419ab348f08bb22b97103da"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/lenderContact/{lenderContactId}:
    delete:
      tags:
        - user > lenderContact
      summary: deleteLenderContactById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: lenderContactId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - user > lenderContact
      summary: getLenderContactById
      parameters:
        - name: lenderContactId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"firstName":"lorem","lastName":"lorem","nickname":"lorem","phoneNumberDirect":"lorem","phoneNumberOffice":"lorem","phoneNumberCell":"lorem","title":"lorem","city":"lorem","note":"lorem","state":"lorem","id":"6419ab348f08bb22b97103d9"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - user > lenderContact
      summary: updateLenderContact
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: lorem
                lastName: lorem
                nickname: lorem
                phoneNumberDirect: lorem
                phoneNumberOffice: lorem
                phoneNumberCell: lorem
                title: lorem
                city: lorem
                note: lorem
                state: lorem
      parameters:
        - name: lenderContactId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"firstName":"lorem","lastName":"lorem","nickname":"lorem","phoneNumberDirect":"lorem","phoneNumberOffice":"lorem","phoneNumberCell":"lorem","title":"lorem","city":"lorem","note":"lorem","state":"lorem","id":"6419ab348f08bb22b97103db"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/lenderContact/paginated:
    get:
      tags:
        - user > lenderContact
      summary: getLenderContactPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"firstName":"lorem","lastName":"lorem","nickname":"lorem","phoneNumberDirect":"lorem","phoneNumberOffice":"lorem","phoneNumberCell":"lorem","title":"lorem","city":"lorem","note":"lorem","state":"lorem","id":"6419ab348f08bb22b97103dc"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/emailTemplate/:
    get:
      tags:
        - user > emailTemplate
      summary: getEmailTemplate
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"subject":"lorem","ccList":["lorem","ipsum"],"textBox":"lorem","emailAttachments":"lorem","id":"6419ab348f08bb22b97103dd"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - user > emailTemplate
      summary: createEmailTemplate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                subject: lorem
                ccList:
                  - lorem
                  - ipsum
                textBox: lorem
                emailAttachments: lorem
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"subject":"lorem","ccList":["lorem","ipsum"],"textBox":"lorem","emailAttachments":"lorem","id":"6419ab348f08bb22b97103de"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/emailTemplate/paginated:
    get:
      tags:
        - user > emailTemplate
      summary: getEmailTemplatePaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"subject":"lorem","ccList":["lorem","ipsum"],"textBox":"lorem","emailAttachments":"lorem","id":"6419ab348f08bb22b97103df"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/emailTemplate/{emailTemplateId}:
    get:
      tags:
        - user > emailTemplate
      summary: getEmailTemplateById
      parameters:
        - name: emailTemplateId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"subject":"lorem","ccList":["lorem","ipsum"],"textBox":"lorem","emailAttachments":"lorem","id":"6419ab348f08bb22b97103e0"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - user > emailTemplate
      summary: deleteEmailTemplateById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: emailTemplateId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - user > emailTemplate
      summary: updateEmailTemplate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                subject: lorem
                ccList:
                  - lorem
                  - ipsum
                textBox: lorem
                emailAttachments: lorem
      parameters:
        - name: emailTemplateId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"subject":"lorem","ccList":["lorem","ipsum"],"textBox":"lorem","emailAttachments":"lorem","id":"6419ab348f08bb22b97103e1"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/activityLog/{activityLogId}:
    delete:
      tags:
        - user > activityLog
      summary: deleteActivityLogById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: activityLogId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - user > activityLog
      summary: getActivityLogById
      parameters:
        - name: activityLogId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","update":"lorem","id":"6419ab348f08bb22b97103e3"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - user > activityLog
      summary: updateActivityLog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deal: 63bd04b2342fde7a69846a5a
                update: lorem
      parameters:
        - name: activityLogId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","update":"lorem","id":"6419ab348f08bb22b97103e5"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/activityLog/paginated:
    get:
      tags:
        - user > activityLog
      summary: getActivityLogPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","update":"lorem","id":"6419ab348f08bb22b97103e2"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/activityLog/:
    get:
      tags:
        - user > activityLog
      summary: getActivityLog
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","update":"lorem","id":"6419ab348f08bb22b97103e4"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - user > activityLog
      summary: createActivityLog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deal: 63bd04b2342fde7a69846a5a
                update: lorem
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","update":"lorem","id":"6419ab348f08bb22b97103e6"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/task/{taskId}:
    delete:
      tags:
        - user > task
      summary: deleteTaskById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: taskId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - user > task
      summary: getTaskById
      parameters:
        - name: taskId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"taskQuestion":"lorem","askingParty":"63bd04b2342fde7a69846a5a","taskAnswer":"lorem","taskDocuments":["lorem","ipsum"],"id":"6419ab348f08bb22b97103e7"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - user > task
      summary: updateTask
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                taskQuestion: lorem
                askingParty: 63bd04b2342fde7a69846a5a
                taskAnswer: lorem
                taskDocuments:
                  - lorem
                  - ipsum
      parameters:
        - name: taskId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"taskQuestion":"lorem","askingParty":"63bd04b2342fde7a69846a5a","taskAnswer":"lorem","taskDocuments":["lorem","ipsum"],"id":"6419ab348f08bb22b97103eb"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/task/paginated:
    get:
      tags:
        - user > task
      summary: getTaskPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"taskQuestion":"lorem","askingParty":"63bd04b2342fde7a69846a5a","taskAnswer":"lorem","taskDocuments":["lorem","ipsum"],"id":"6419ab348f08bb22b97103e8"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/task/:
    post:
      tags:
        - user > task
      summary: createTask
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                taskQuestion: lorem
                askingParty: 63bd04b2342fde7a69846a5a
                taskAnswer: lorem
                taskDocuments:
                  - lorem
                  - ipsum
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"taskQuestion":"lorem","askingParty":"63bd04b2342fde7a69846a5a","taskAnswer":"lorem","taskDocuments":["lorem","ipsum"],"id":"6419ab348f08bb22b97103e9"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - user > task
      summary: getTask
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"taskQuestion":"lorem","askingParty":"63bd04b2342fde7a69846a5a","taskAnswer":"lorem","taskDocuments":["lorem","ipsum"],"id":"6419ab348f08bb22b97103ea"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/dealDocument/paginated:
    get:
      tags:
        - user > dealDocument
      summary: getDealDocumentPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"documentType":"lorem","file":"lorem","fileName":"lorem","id":"6419ab348f08bb22b97103ec"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/dealDocument/:
    get:
      tags:
        - user > dealDocument
      summary: getDealDocument
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"documentType":"lorem","file":"lorem","fileName":"lorem","id":"6419ab348f08bb22b97103ed"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - user > dealDocument
      summary: createDealDocument
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                documentType: lorem
                file: lorem
                fileName: lorem
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"documentType":"lorem","file":"lorem","fileName":"lorem","id":"6419ab348f08bb22b97103ef"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/user/dealDocument/{dealDocumentId}:
    get:
      tags:
        - user > dealDocument
      summary: getDealDocumentById
      parameters:
        - name: dealDocumentId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"documentType":"lorem","file":"lorem","fileName":"lorem","id":"6419ab348f08bb22b97103ee"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - user > dealDocument
      summary: updateDealDocument
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                documentType: lorem
                file: lorem
                fileName: lorem
      parameters:
        - name: dealDocumentId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"documentType":"lorem","file":"lorem","fileName":"lorem","id":"6419ab348f08bb22b97103f0"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - user > dealDocument
      summary: deleteDealDocumentById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: dealDocumentId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/auth/register:
    post:
      tags:
        - advisor > auth
      summary: User Register API
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"name\": \"brandsWeLove\",\n\t\"email\":
                \"brandswelove@yopmail.com\",\n\t\"password\":
                \"Password@123\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"status\": \"Success\",\r\n    \"data\": {\r\n        \"success\": true,\r\n        \"message\": \"Email has been sent to your registered email. Please check your email and verify it\",\r\n        \"user\": {\r\n            \"name\": \"brandsWeLove\",\r\n            \"email\": \"brandswelove@yopmail.com\",\r\n            \"codes\": [],\r\n            \"id\": \"6324202158e1442e57d44f4a\"\r\n        },\r\n        \"tokens\": {\r\n            \"access\": {\r\n                \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MzI0MjAyMTU4ZTE0NDJlNTdkNDRmNGEiLCJpYXQiOjE2NjMzMTE5MDUsImV4cCI6MTY2MzMxMzcwNX0.K0hse8aWTfOSe9pCrFocFQzzHTZAW-Xhmoy_1tQHnfo\",\r\n                \"expires\": \"2022-09-16T07:35:05.736Z\"\r\n            },\r\n            \"refresh\": {\r\n                \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MzI0MjAyMTU4ZTE0NDJlNTdkNDRmNGEiLCJpYXQiOjE2NjMzMTE5MDUsImV4cCI6MTY2NTkwMzkwNX0.Axr9VnaT1HF_F3k0NmN4QyM0C6YYwMuBR71tpc6YpWI\",\r\n                \"expires\": \"2022-10-16T07:05:05.736Z\"\r\n            }\r\n        }\r\n    }\r\n}"
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 400,
                    "message": "Email already taken",
                    "stack": "Error: Email already taken\n    at _callee5$ (/Users/macos/projects/demo/services/user.service.js:18:11)\n    at tryCatch (/Users/macos/projects/demo/services/user.service.js:26:2404)\n    at Generator._invoke (/Users/macos/projects/demo/services/user.service.js:26:1964)\n    at Generator.next (/Users/macos/projects/demo/services/user.service.js:26:3255)\n    at asyncGeneratorStep (/Users/macos/projects/demo/services/user.service.js:28:103)\n    at _next (/Users/macos/projects/demo/services/user.service.js:30:194)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/advisor/auth/login:
    post:
      tags:
        - advisor > auth
      summary: User Login API
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"email\": \"brandswelove@yopmail.com\",\n\t\"password\":
                \"Password@123\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "user": {
                        "closetPolicy": {
                            "dryCleaning": "dry_cleaning_myself",
                            "rentalRequests": "rental_approve_not",
                            "shipping": "national_shipping"
                        },
                        "picture": "https://chia-app-dev.s3.amazonaws.com/users/60ceba70a5303d040bb8fead/61014ed6f7d99f00094b77b2/EE761E82-06B5-4C4A-B650-D61B1B4F8648.jpg",
                        "phoneVerified": false,
                        "emailVerified": true,
                        "paymentVerified": false,
                        "trusted": false,
                        "speedyShipper": false,
                        "quickResponder": false,
                        "nationalShipping": false,
                        "offersAccepted": false,
                        "role": "admin",
                        "active": true,
                        "vacationMode": false,
                        "sellerAverageRating": 4,
                        "sellerRatingCount": 1,
                        "buyerAverageRating": 5,
                        "buyerRatingCount": 1,
                        "name": "Hardik",
                        "email": "brandswelove@yopmail.com",
                        "addresses": [
                            {
                                "type": "shipping",
                                "_id": "60e03ccb38a3e0000992f1c8",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "145",
                                "line2": "Laskana",
                                "postalCode": "395006",
                                "fullName": "11",
                                "phoneNumber": "972757"
                            },
                            {
                                "type": "shipping",
                                "_id": "60e041e1673571000812ecc0",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "12",
                                "line2": "kapodra",
                                "postalCode": "395006"
                            },
                            {
                                "type": "billing",
                                "_id": "60e3f7843f9e510008f11084",
                                "city": "Surat",
                                "state": "Gujarat",
                                "country": "Albania",
                                "line1": "139, matrushakti",
                                "line2": "Surat",
                                "postalCode": "395006",
                                "fullName": "Bhavesh b",
                                "phoneNumber": "9727572204"
                            },
                            {
                                "type": "billing",
                                "_id": "60e435bcde21190008202880",
                                "city": "Surta",
                                "state": "Gujarart",
                                "country": "Afghanistan",
                                "line1": "2",
                                "line2": "Gsvdsg",
                                "postalCode": "395005",
                                "fullName": "Asd",
                                "phoneNumber": "8956321457882"
                            },
                            {
                                "type": "billing",
                                "_id": "60e4363fde21190008202889",
                                "city": "Suart",
                                "state": "Gujarat",
                                "country": "Afghanistan",
                                "line1": "95",
                                "line2": "Raval Faliyu",
                                "postalCode": "395006",
                                "fullName": "Sahil Raval",
                                "phoneNumber": "8956231478"
                            },
                            {
                                "type": "shipping",
                                "_id": "60e436aadd17280008f41ffb",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "12",
                                "line2": "kapodra",
                                "postalCode": "395006"
                            },
                            {
                                "type": "shipping",
                                "_id": "60e68770ab2a6e000919057d",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "12",
                                "line2": "kapodra",
                                "postalCode": "395006"
                            },
                            {
                                "type": "shipping",
                                "_id": "60e692516b897800082c688e",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "12",
                                "line2": "kapodra",
                                "postalCode": "395006"
                            },
                            {
                                "type": "shipping",
                                "_id": "60ed1ed303c4420008a15027",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "12",
                                "line2": "kapodra",
                                "postalCode": "395006"
                            },
                            {
                                "type": "return",
                                "_id": "60f502742603050008695e8b",
                                "city": "Delhi",
                                "state": "UP",
                                "country": "India",
                                "line1": "123",
                                "line2": "562 north delhi",
                                "postalCode": "395001",
                                "fullName": "Test user",
                                "phoneNumber": "9727571144"
                            },
                            {
                                "type": "return",
                                "_id": "60f94455d297880008dcd270",
                                "city": "Surat",
                                "state": "Gujarat",
                                "country": "Albania",
                                "line1": "Tested",
                                "line2": "125",
                                "postalCode": "395006",
                                "fullName": "Testing user",
                                "phoneNumber": "121212121"
                            },
                            {
                                "type": "shipping",
                                "_id": "610266cde5c45a0008d14baa",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "12",
                                "line2": "kapodra",
                                "postalCode": "395006"
                            }
                        ],
                        "bio": "Hello, I am Hardik Beladiya",
                        "lastName": "Beladiya",
                        "phoneNumber": "8140447270",
                        "interest": {
                            "styles": [
                                {
                                    "active": true,
                                    "name": "Luxury",
                                    "description": "Luxury is theb Style in which User can Luxury",
                                    "iconUrl": "https://cdn.shopify.com/s/files/1/0006/0420/9215/files/fashion_styles_casual_1000.jpg",
                                    "id": "60d1b7a6c3b1f3132df11176"
                                },
                                {
                                    "active": true,
                                    "name": "StreetWear",
                                    "description": "StreetWear is theb Style in which User can StreetWear",
                                    "iconUrl": "https://cdn.shopify.com/s/files/1/0006/0420/9215/files/fashion_styles_casual_1000.jpg",
                                    "id": "60d1b7b8c3b1f3132df11177"
                                },
                                {
                                    "active": true,
                                    "name": "SportWear",
                                    "description": "SportWear is theb Style in which User can SportWear",
                                    "iconUrl": "https://cdn.shopify.com/s/files/1/0006/0420/9215/files/fashion_styles_casual_1000.jpg",
                                    "id": "60d1b7c6c3b1f3132df11178"
                                },
                                {
                                    "active": true,
                                    "name": "Independent Brands",
                                    "description": "Independent Brands is theb Style in which User can Independent Brands",
                                    "iconUrl": "https://cdn.shopify.com/s/files/1/0006/0420/9215/files/fashion_styles_casual_1000.jpg",
                                    "id": "60d1b7d7c3b1f3132df11179"
                                },
                                {
                                    "active": true,
                                    "name": "Trend",
                                    "description": "Trend is theb Style in which User can Trend",
                                    "iconUrl": "https://cdn.shopify.com/s/files/1/0006/0420/9215/files/fashion_styles_casual_1000.jpg",
                                    "id": "60d1b7e9c3b1f3132df1117a"
                                }
                            ],
                            "designers": [
                                {
                                    "active": true,
                                    "name": "Gucci",
                                    "description": "Gucci si Famous Brand",
                                    "id": "60d1bba3c4088013a607e246"
                                },
                                {
                                    "active": true,
                                    "name": "Prada",
                                    "description": "Prada si Famous Brand",
                                    "id": "60d70139907f852ca211d5db"
                                },
                                {
                                    "active": true,
                                    "name": "Prada",
                                    "description": "Prada si Famous Brand",
                                    "id": "60fe9c6e69bf380008a5ec68"
                                }
                            ],
                            "sizes": [
                                {
                                    "type": "clothes",
                                    "standard": [
                                        "00",
                                        "XXS"
                                    ],
                                    "active": true,
                                    "name": "small",
                                    "id": "60d188bec5ef3e0f7bca1454"
                                },
                                {
                                    "type": "denim",
                                    "standard": [
                                        "23"
                                    ],
                                    "active": true,
                                    "name": "small",
                                    "id": "60d6fc652bcbec230be4f681"
                                },
                                {
                                    "type": "shoes",
                                    "standard": [
                                        "US 4",
                                        "UK 2",
                                        "EU 35"
                                    ],
                                    "active": true,
                                    "name": "small",
                                    "id": "60d6fc8c2bcbec230be4f685"
                                }
                            ],
                            "_id": "610253eccea3760009e0cc79"
                        },
                        "followingCount": 12,
                        "followerCount": 7,
                        "transactions": 11,
                        "id": "60ceba70a5303d040bb8fead"
                    },
                    "tokens": {
                        "access": {
                            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MGNlYmE3MGE1MzAzZDA0MGJiOGZlYWQiLCJpYXQiOjE2Mjg0ODM2MjcsImV4cCI6MTYyODY2MzYyN30.3J28mllL-Uh338oCOHCydnuadPn0vIfdDyPnyB5_6ZQ",
                            "expires": "2021-08-11T06:33:47.393Z"
                        },
                        "refresh": {
                            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MGNlYmE3MGE1MzAzZDA0MGJiOGZlYWQiLCJpYXQiOjE2Mjg0ODM2MjcsImV4cCI6MTYzMTA3NTYyN30.-xQYtkvdOPXJ_rIaPfINIjZrSUpBKsbxApR-89X3jys",
                            "expires": "2021-09-08T04:33:47.394Z"
                        }
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              examples:
                example-0:
                  summary: User Login Failed
                  value: |-
                    {
                        "code": 400,
                        "message": "Incorrect email or password",
                        "stack": "Error: Incorrect email or password\n    at Object.loginUserWithEmailAndPassword (/var/task/services/auth.service.js:17:11)\n    at async /var/task/controllers/auth.controller.js:21:14"
                    }
                example-1:
                  summary: User Login API fail
                  value: |-
                    {
                        "code": 400,
                        "message": "Incorrect email or password",
                        "stack": "Error: Incorrect email or password\n    at Object.loginUserWithEmailAndPassword (/var/task/services/auth.service.js:17:11)\n    at async /var/task/controllers/auth.controller.js:21:14"
                    }
  /v1/advisor/auth/forgot-password:
    post:
      tags:
        - advisor > auth
      summary: ForgetPassword API
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n\t\"email\": \"brandswelove@yopmail.com\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "success": true,
                        "message": "Code has been sent"
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 400,
                    "message": "no user found with this email",
                    "stack": "Error: no user found with this email\n    at _callee2$ (/Users/macos/projects/postmantTest/services/auth.service.js:34:11)\n    at tryCatch (/Users/macos/projects/postmantTest/services/auth.service.js:22:2404)\n    at Generator._invoke (/Users/macos/projects/postmantTest/services/auth.service.js:22:1964)\n    at Generator.next (/Users/macos/projects/postmantTest/services/auth.service.js:22:3255)\n    at asyncGeneratorStep (/Users/macos/projects/postmantTest/services/auth.service.js:24:103)\n    at _next (/Users/macos/projects/postmantTest/services/auth.service.js:26:194)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/advisor/auth/verify-reset-otp:
    post:
      tags:
        - advisor > auth
      summary: Forget password otp verify
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: brandswelove@yopmail.com
                otp: 5689
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "success": true
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 400,
                    "message": "otp is Invalid",
                    "stack": "Error: otp is Invalid\
                    at _callee6$ (/Users/macos/projects/postmantTest/services/token.service.js:120:11)\
                    at tryCatch (/Users/macos/projects/postmantTest/services/token.service.js:28:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/services/token.service.js:28:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/services/token.service.js:28:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/services/token.service.js:30:103)\
                    at _next (/Users/macos/projects/postmantTest/services/token.service.js:32:194)\
                    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/advisor/auth/send-verify-otp:
    post:
      tags:
        - advisor > auth
      summary: Send VerifyEmail OTP
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n\t\"email\": \"brandswelove@yopmail.com\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {\n    \"status\": \"Success\",\n    \"data\": {\n       
                \"success\": true,\n        \"message\": \"Email has been sent
                to your registered email. Please check your email and verify
                it\"\n    }\n}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 400,
                    "message": "no user found with this id!",
                    "stack": "Error: no user found with this id!\
                    at _callee9$ (/Users/macos/projects/postmantTest/controllers/auth.controller.js:73:11)\
                    at tryCatch (/Users/macos/projects/postmantTest/controllers/auth.controller.js:30:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/controllers/auth.controller.js:30:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/controllers/auth.controller.js:30:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/controllers/auth.controller.js:32:103)\
                    at _next (/Users/macos/projects/postmantTest/controllers/auth.controller.js:34:194)\
                    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/advisor/auth/verify-otp:
    post:
      tags:
        - advisor > auth
      summary: VerifyEmail OTP
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"email\": \"brandswelove@yopmail.com\",\n\t\"otp\":
                6790\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "success": true
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 400,
                    "message": "otp is Invalid",
                    "stack": "Error: otp is Invalid\
                    at _callee4$ (/Users/macos/projects/postmantTest/services/token.service.js:87:11)\
                    at tryCatch (/Users/macos/projects/postmantTest/services/token.service.js:28:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/services/token.service.js:28:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/services/token.service.js:28:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/services/token.service.js:30:103)\
                    at _next (/Users/macos/projects/postmantTest/services/token.service.js:32:194)\
                    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/advisor/auth/me:
    get:
      tags:
        - advisor > auth
      summary: Get Current LoggedIn User
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "user": {
                            "name": "brandsWeLove",
                            "email": "brandswelove@yopmail.com",
                            "codes": [
                                {
                                    "_id": "632445f374b9534093707e5a",
                                    "code": "2397",
                                    "expirationDate": "2022-09-16T09:56:27.827Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "632446f0b39a9240eaf3a34c",
                                    "code": "2645",
                                    "expirationDate": "2022-09-16T10:00:40.588Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "632446f1b39a9240eaf3a34f",
                                    "code": "1454",
                                    "expirationDate": "2022-09-16T10:00:41.785Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "632447e9b39a9240eaf3a358",
                                    "code": "3490",
                                    "expirationDate": "2022-09-16T10:04:49.108Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "6324481ab39a9240eaf3a361",
                                    "code": "5057",
                                    "expirationDate": "2022-09-16T10:05:38.968Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "63244938b39a9240eaf3a364",
                                    "code": "2239",
                                    "expirationDate": "2022-09-16T10:10:24.424Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "63244965a5de9f41aa207ceb",
                                    "code": "6872",
                                    "expirationDate": "2022-09-16T10:11:09.686Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "63244968a5de9f41aa207cee",
                                    "code": "7935",
                                    "expirationDate": "2022-09-16T10:11:12.028Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "63244afe3df3e0420eb7d615",
                                    "code": "6102",
                                    "expirationDate": "2022-09-16T10:17:58.013Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "63244b863df3e0420eb7d61a",
                                    "code": "8780",
                                    "expirationDate": "2022-09-16T10:20:14.263Z",
                                    "used": false,
                                    "codeType": "login"
                                }
                            ],
                            "id": "6324400426177b3af85933b0"
                        }
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 401,
                    "message": "Please authenticate",
                    "stack": "Error: Please authenticate\
                    at _callee$ (/Users/macos/projects/postmantTest/middlewares/auth.js:6:19)\
                    at tryCatch (/Users/macos/projects/postmantTest/middlewares/auth.js:13:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/middlewares/auth.js:13:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/middlewares/auth.js:13:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/middlewares/auth.js:15:103)\
                    at _next (/Users/macos/projects/postmantTest/middlewares/auth.js:17:194)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:364\
                    at new Promise (<anonymous>)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:97\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:4:24\
                    at allFailed (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:107:18)\
                    at attempt (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:180:28)\
                    at JwtStrategy.strategy.fail (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:302:9)\
                    at /Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:106:33\
                    at /Users/macos/projects/postmantTest/node_modules/jsonwebtoken/verify.js:152:16\
                    at getSecret (/Users/macos/projects/postmantTest/node_modules/jsonwebtoken/verify.js:90:14)\
                    at Object.module.exports [as verify] (/Users/macos/projects/postmantTest/node_modules/jsonwebtoken/verify.js:94:10)\
                    at Function.module.exports [as JwtVerifier] (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/verify_jwt.js:4:16)\
                    at /Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:104:25\
                    at JwtStrategy._secretOrKeyProvider (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:40:13)\
                    at JwtStrategy.authenticate (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:99:10)\
                    at attempt (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:366:16)\
                    at authenticate (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:367:7)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:18:5\
                    at new Promise (<anonymous>)\
                    at _callee2$ (/Users/macos/projects/postmantTest/middlewares/auth.js:17:10)\
                    at tryCatch (/Users/macos/projects/postmantTest/middlewares/auth.js:13:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/middlewares/auth.js:13:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/middlewares/auth.js:13:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/middlewares/auth.js:15:103)\
                    at _next (/Users/macos/projects/postmantTest/middlewares/auth.js:17:194)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:364\
                    at new Promise (<anonymous>)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:97\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:16:14\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/route.js:137:13)\
                    at Route.dispatch (/Users/macos/projects/postmantTest/node_modules/express/lib/router/route.js:112:3)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:281:22\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)\
                    at router (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:47:12)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at trim_prefix (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:317:13)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:284:7\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)"
                }
    put:
      tags:
        - advisor > auth
      summary: Update Profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Hardik
                lastName: Beladiya
                password: Password@123
                bio: Hello, I am Hardik Beladiya
                phoneNumber: '8140447270'
                vacationMode: true
                closetPolicy:
                  dryCleaning: dry_cleaning_all
                  rentalRequests: rental_approve_all
                  shipping: same_day_delivery
                picture: >-
                  https://chia-app-dev.s3.amazonaws.com/users/60ceba70a5303d040bb8fead/60f9501f0f1d48348ff5e433/helloworld23.jpg
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "user": {
                        "name": "Hardik",
                        "email": "test@yopmail.com",
                        "codes": [
                            {
                                "_id": "6327fc2939412f13e64aeb01",
                                "code": "6184",
                                "expirationDate": "2022-09-19T05:30:41.045Z",
                                "used": false,
                                "codeType": "resetPassword"
                            },
                            {
                                "_id": "6327fc595e57e1140efbef85",
                                "code": "5846",
                                "expirationDate": "2022-09-19T05:31:29.163Z",
                                "used": false,
                                "codeType": "resetPassword"
                            },
                            {
                                "_id": "6327fc935e57e1140efbef8a",
                                "code": "2418",
                                "expirationDate": "2022-09-19T05:32:27.612Z",
                                "used": false,
                                "codeType": "login"
                            },
                            {
                                "_id": "6327fc9b5e57e1140efbef8d",
                                "code": "1428",
                                "expirationDate": "2022-09-19T05:32:35.939Z",
                                "used": false,
                                "codeType": "login"
                            }
                        ],
                        "id": "6327fb66af25dc13b9547219"
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 401,
                    "message": "Please authenticate",
                    "stack": "Error: Please authenticate\
                    at _callee$ (/Users/macos/projects/postmantTest/middlewares/auth.js:6:19)\
                    at tryCatch (/Users/macos/projects/postmantTest/middlewares/auth.js:13:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/middlewares/auth.js:13:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/middlewares/auth.js:13:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/middlewares/auth.js:15:103)\
                    at _next (/Users/macos/projects/postmantTest/middlewares/auth.js:17:194)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:364\
                    at new Promise (<anonymous>)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:97\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:4:24\
                    at allFailed (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:107:18)\
                    at attempt (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:180:28)\
                    at JwtStrategy.strategy.fail (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:302:9)\
                    at /Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:106:33\
                    at /Users/macos/projects/postmantTest/node_modules/jsonwebtoken/verify.js:152:16\
                    at getSecret (/Users/macos/projects/postmantTest/node_modules/jsonwebtoken/verify.js:90:14)\
                    at Object.module.exports [as verify] (/Users/macos/projects/postmantTest/node_modules/jsonwebtoken/verify.js:94:10)\
                    at Function.module.exports [as JwtVerifier] (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/verify_jwt.js:4:16)\
                    at /Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:104:25\
                    at JwtStrategy._secretOrKeyProvider (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:40:13)\
                    at JwtStrategy.authenticate (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:99:10)\
                    at attempt (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:366:16)\
                    at authenticate (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:367:7)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:18:5\
                    at new Promise (<anonymous>)\
                    at _callee2$ (/Users/macos/projects/postmantTest/middlewares/auth.js:17:10)\
                    at tryCatch (/Users/macos/projects/postmantTest/middlewares/auth.js:13:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/middlewares/auth.js:13:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/middlewares/auth.js:13:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/middlewares/auth.js:15:103)\
                    at _next (/Users/macos/projects/postmantTest/middlewares/auth.js:17:194)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:364\
                    at new Promise (<anonymous>)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:97\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:16:14\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/route.js:137:13)\
                    at Route.dispatch (/Users/macos/projects/postmantTest/node_modules/express/lib/router/route.js:112:3)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:281:22\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)\
                    at router (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:47:12)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at trim_prefix (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:317:13)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:284:7\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)"
                }
  /v1/advisor/auth/reset-password:
    post:
      tags:
        - advisor > auth
      summary: change password with otp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: brandswelove@yopmail.com
                password: password@123
                otp: 2345
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "success": true,
                        "message": "Password has been reset successfully"
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 400,
                    "message": "otp is Invalid",
                    "stack": "Error: otp is Invalid\
                    at _callee5$ (/Users/macos/projects/postmantTest/services/token.service.js:104:11)\
                    at tryCatch (/Users/macos/projects/postmantTest/services/token.service.js:28:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/services/token.service.js:28:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/services/token.service.js:28:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/services/token.service.js:30:103)\
                    at _next (/Users/macos/projects/postmantTest/services/token.service.js:32:194)\
                    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/advisor/auth/logout:
    post:
      tags:
        - advisor > auth
      summary: logout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                refreshToken: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MGNlYmE3MGE1MzAzZDA0MGJiOGZlYWQiLCJpYXQiOjE2MjQ3MTAyNzQsImV4cCI6MTYyNzMwMjI3NH0.AQwznHISR6gRlyCSCjKONY0EMvCZfRD_5FdGSxYFVeM
                deviceToken: '123'
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "success": true
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 401,
                    "message": "Please authenticate",
                    "stack": "Error: Please authenticate\
                    at _callee$ (/Users/macos/projects/postmantTest/middlewares/auth.js:6:19)\
                    at tryCatch (/Users/macos/projects/postmantTest/middlewares/auth.js:13:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/middlewares/auth.js:13:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/middlewares/auth.js:13:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/middlewares/auth.js:15:103)\
                    at _next (/Users/macos/projects/postmantTest/middlewares/auth.js:17:194)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:364\
                    at new Promise (<anonymous>)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:97\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:4:24\
                    at allFailed (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:107:18)\
                    at attempt (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:180:28)\
                    at JwtStrategy.strategy.fail (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:302:9)\
                    at JwtStrategy.authenticate (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:96:21)\
                    at attempt (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:366:16)\
                    at authenticate (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:367:7)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:19:5\
                    at new Promise (<anonymous>)\
                    at _callee2$ (/Users/macos/projects/postmantTest/middlewares/auth.js:17:10)\
                    at tryCatch (/Users/macos/projects/postmantTest/middlewares/auth.js:13:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/middlewares/auth.js:13:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/middlewares/auth.js:13:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/middlewares/auth.js:15:103)\
                    at _next (/Users/macos/projects/postmantTest/middlewares/auth.js:17:194)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:364\
                    at new Promise (<anonymous>)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:97\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:16:14\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/route.js:137:13)\
                    at Route.dispatch (/Users/macos/projects/postmantTest/node_modules/express/lib/router/route.js:112:3)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:281:22\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)\
                    at router (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:47:12)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at trim_prefix (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:317:13)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:284:7\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)\
                    at router (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:47:12)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at trim_prefix (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:317:13)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:284:7\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)"
                }
  /v1/advisor/auth/refresh-tokens:
    post:
      tags:
        - advisor > auth
      summary: refresh token api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                refreshToken: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MGNlYmE3MGE1MzAzZDA0MGJiOGZlYWQiLCJpYXQiOjE2MjY4NDA5MzksImV4cCI6MTYyOTQzMjkzOX0.lGJKNTRcHquf1LIErNgGZnJ284ojXjLh6ovYzZFjBl8
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "access": {
                            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MzI0NjNkYzM0ZWUwYjRlZTNiNzliOWIiLCJpYXQiOjE2NjMzMzA2NDIsImV4cCI6MTY2MzMzMjQ0Mn0.1vPjrpTE5i_WrA_eqVcNHZebVz-j79CGzc14hW1xzpU",
                            "expires": "2022-09-16T12:47:22.421Z"
                        },
                        "refresh": {
                            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MzI0NjNkYzM0ZWUwYjRlZTNiNzliOWIiLCJpYXQiOjE2NjMzMzA2NDIsImV4cCI6MTY2NTkyMjY0Mn0.ZBTMp4UFl10gVrJFV3Y_Yov3BLrUsMjVcoouBdl_Fe8",
                            "expires": "2022-10-16T12:17:22.423Z"
                        }
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 401,
                    "message": "Please authenticate",
                    "stack": "Error: Please authenticate\
                    at _callee3$ (/Users/macos/projects/postmantTest/services/auth.service.js:65:11)\
                    at tryCatch (/Users/macos/projects/postmantTest/services/auth.service.js:22:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/services/auth.service.js:22:1964)\
                    at Generator.throw (/Users/macos/projects/postmantTest/services/auth.service.js:22:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/services/auth.service.js:24:103)\
                    at _throw (/Users/macos/projects/postmantTest/services/auth.service.js:26:291)\
                    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/advisor/auth/register-device-token:
    post:
      tags:
        - advisor > auth
      summary: register-device-token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deviceToken: abcd123
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "name": "brandsWeLove",
                        "email": "test@yopmail.com",
                        "codes": [],
                        "deviceTokens": [
                            {
                                "_id": "632841ca8a7d165589aaf9b0",
                                "deviceToken": "abcd123"
                            },
                            {
                                "_id": "632845e38a7d165589aaf9b7",
                                "deviceToken": "abcd1234"
                            }
                        ],
                        "id": "632841b649310a5524fed88e"
                    }
                }
        '400':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 401,
                    "message": "Please authenticate",
                    "stack": "Error: Please authenticate\n    at _callee$ (/Users/macos/projects/notificationTest/middlewares/auth.js:6:19)\n    at tryCatch (/Users/macos/projects/notificationTest/middlewares/auth.js:13:2404)\n    at Generator._invoke (/Users/macos/projects/notificationTest/middlewares/auth.js:13:1964)\n    at Generator.next (/Users/macos/projects/notificationTest/middlewares/auth.js:13:3255)\n    at asyncGeneratorStep (/Users/macos/projects/notificationTest/middlewares/auth.js:15:103)\n    at _next (/Users/macos/projects/notificationTest/middlewares/auth.js:17:194)\n    at /Users/macos/projects/notificationTest/middlewares/auth.js:17:364\n    at new Promise (<anonymous>)\n    at /Users/macos/projects/notificationTest/middlewares/auth.js:17:97\n    at /Users/macos/projects/notificationTest/middlewares/auth.js:4:24\n    at allFailed (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:107:18)\n    at attempt (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:180:28)\n    at JwtStrategy.strategy.fail (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:302:9)\n    at JwtStrategy.authenticate (/Users/macos/projects/notificationTest/node_modules/passport-jwt/lib/strategy.js:96:21)\n    at attempt (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:366:16)\n    at authenticate (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:367:7)"
                }
  /v1/advisor/auth/update-device-token:
    post:
      tags:
        - advisor > auth
      summary: update-device-token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deviceToken: abcd123
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "name": "brandsWeLove",
                        "email": "test@yopmail.com",
                        "codes": [],
                        "deviceTokens": [
                            {
                                "_id": "632841ca8a7d165589aaf9b0",
                                "deviceToken": "abcd123"
                            }
                        ],
                        "id": "632841b649310a5524fed88e"
                    }
                }
        '400':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 401,
                    "message": "Please authenticate",
                    "stack": "Error: Please authenticate\n    at _callee$ (/Users/macos/projects/notificationTest/middlewares/auth.js:6:19)\n    at tryCatch (/Users/macos/projects/notificationTest/middlewares/auth.js:13:2404)\n    at Generator._invoke (/Users/macos/projects/notificationTest/middlewares/auth.js:13:1964)\n    at Generator.next (/Users/macos/projects/notificationTest/middlewares/auth.js:13:3255)\n    at asyncGeneratorStep (/Users/macos/projects/notificationTest/middlewares/auth.js:15:103)\n    at _next (/Users/macos/projects/notificationTest/middlewares/auth.js:17:194)\n    at /Users/macos/projects/notificationTest/middlewares/auth.js:17:364\n    at new Promise (<anonymous>)\n    at /Users/macos/projects/notificationTest/middlewares/auth.js:17:97\n    at /Users/macos/projects/notificationTest/middlewares/auth.js:4:24\n    at allFailed (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:107:18)\n    at attempt (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:180:28)\n    at JwtStrategy.strategy.fail (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:302:9)\n    at JwtStrategy.authenticate (/Users/macos/projects/notificationTest/node_modules/passport-jwt/lib/strategy.js:96:21)\n    at attempt (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:366:16)\n    at authenticate (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:367:7)"
                }
  /v1/advisor/auth/google:
    post:
      tags:
        - advisor > auth
      summary: Google Login API
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"access_token\":
                \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjFiZjhhODRkM2VjZDc3ZTlmMmFkNWYwNmZmZDI2MDcwMWRkMDZkOTAiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiIxMDQxNjI0OTc4MjIwLW9yN28zYTBsMm9nMmFwajgwbmJmYTJwbDE0amgxcW9yLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwiYXVkIjoiMTA0MTYyNDk3ODIyMC1zbGhpcGdmMDQ5ZmNjNDd0dG11MmY3dHFhYWNlbDN0ZC5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbSIsInN1YiI6IjExNDk5MTY4ODU3ODMwMzA1OTkwMyIsImVtYWlsIjoic2FoaWxyMDIxNkBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwibmFtZSI6IlNhaGlsIFJhdmFsIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hL0FBVFhBSnlwZ0tieXJTRzJCcS1ZdVotbkFDY21aenVSVVpSUTZvemtNNmlKPXM5Ni1jIiwiZ2l2ZW5fbmFtZSI6IlNhaGlsIiwiZmFtaWx5X25hbWUiOiJSYXZhbCIsImxvY2FsZSI6ImVuLUdCIiwiaWF0IjoxNjI2MzM5NjgwLCJleHAiOjE2MjYzNDMyODB9.THio-PVSgh777CwdtPDANGfZcZYOkDMKXvNkBxjLVIdf1JjRwbO6OanNUMC5xelMbupuElLWdxGnnWwtjfnAuZBn3Q0P6ab-NVSC-IV2b9pQypCj_hDfGypghCuHfPXEhF7hMpDjTEdbHtIEQ-ZGje--fPAddgXznx9aLtyB5uqSxyqRsZvWfWR5DN5bRfA1kph07pXQuIGVzRgfRC_GWaeZrGDu_LQZ70DgHCusSt2v41bEPBtafJT3rf7ArDRI5RUMWIWnSYG475nLhuQFUgzLD_L3zcuLHDJ_BIcQ5reo7_u-NJ0CwVyNIb6UAkUauo1KZMp-tEntJ7kVlXod_g\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/advisor/user/{userId}:
    get:
      tags:
        - advisor > User
      summary: getUserById
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"name":"lorem","role":"lorem","codes":["63bd04b2342fde7a69846a5a"],"password":"lorem","googleProvider":"63bd04b2342fde7a69846a5a","deviceTokens":"","firstName":"lorem","lastName":"lorem","phoneNumber":"lorem","company":"lorem","lastSignIn":"YYYY-MM-DD","id":"6419ab348f08bb22b97103b4"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - advisor > User
      summary: updateUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: lorem
                role: lorem
                codes:
                  - 63bd04b2342fde7a69846a5a
                password: lorem
                googleProvider: 63bd04b2342fde7a69846a5a
                deviceTokens: ''
                firstName: lorem
                lastName: lorem
                phoneNumber: lorem
                company: lorem
                lastSignIn: YYYY-MM-DD
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"name":"lorem","role":"lorem","codes":["63bd04b2342fde7a69846a5a"],"password":"lorem","googleProvider":"63bd04b2342fde7a69846a5a","deviceTokens":"","firstName":"lorem","lastName":"lorem","phoneNumber":"lorem","company":"lorem","lastSignIn":"YYYY-MM-DD","id":"6419ab348f08bb22b97103b5"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - advisor > User
      summary: deleteUserById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/user/paginated:
    get:
      tags:
        - advisor > User
      summary: getUserPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"name":"lorem","role":"lorem","codes":["63bd04b2342fde7a69846a5a"],"password":"lorem","googleProvider":"63bd04b2342fde7a69846a5a","deviceTokens":"","firstName":"lorem","lastName":"lorem","phoneNumber":"lorem","company":"lorem","lastSignIn":"YYYY-MM-DD","id":"6419ab348f08bb22b97103b6"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/user/:
    get:
      tags:
        - advisor > User
      summary: getUser
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"name":"lorem","role":"lorem","codes":["63bd04b2342fde7a69846a5a"],"password":"lorem","googleProvider":"63bd04b2342fde7a69846a5a","deviceTokens":"","firstName":"lorem","lastName":"lorem","phoneNumber":"lorem","company":"lorem","lastSignIn":"YYYY-MM-DD","id":"6419ab348f08bb22b97103b7"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - advisor > User
      summary: createUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: lorem
                role: lorem
                codes:
                  - 63bd04b2342fde7a69846a5a
                password: lorem
                googleProvider: 63bd04b2342fde7a69846a5a
                deviceTokens: ''
                firstName: lorem
                lastName: lorem
                phoneNumber: lorem
                company: lorem
                lastSignIn: YYYY-MM-DD
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"name":"lorem","role":"lorem","codes":["63bd04b2342fde7a69846a5a"],"password":"lorem","googleProvider":"63bd04b2342fde7a69846a5a","deviceTokens":"","firstName":"lorem","lastName":"lorem","phoneNumber":"lorem","company":"lorem","lastSignIn":"YYYY-MM-DD","id":"6419ab348f08bb22b97103b8"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/involvedUser/:
    get:
      tags:
        - advisor > involvedUser
      summary: getInvolvedUser
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenders":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"borrowers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"advisors":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103b9"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - advisor > involvedUser
      summary: createInvolvedUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lenders:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                borrowers:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                advisors:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenders":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"borrowers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"advisors":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103bb"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/involvedUser/{involvedUserId}:
    put:
      tags:
        - advisor > involvedUser
      summary: updateInvolvedUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lenders:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                borrowers:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                advisors:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
      parameters:
        - name: involvedUserId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenders":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"borrowers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"advisors":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103ba"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - advisor > involvedUser
      summary: deleteInvolvedUserById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: involvedUserId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/deal/{dealId}:
    put:
      tags:
        - advisor > deal
      summary: updateDeal
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                dealName: lorem
                stage: lorem
                address: lorem
                city: lorem
                state: lorem
                zipcode: 100
                mapLocation:
                  type: Point
                  coordinates:
                    - 100
                    - 200
                involvedUsers: 63bd04b2342fde7a69846a5a
                involvedUsersLender:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                involvedUsersBorrower:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                involvedUsersAdvisor:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                assetType: lorem
                loanAmount: 100
                loanPurpose: lorem
                loanType: lorem
                tasks:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                dealNotes:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                lenderPlacement:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                documents:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
      parameters:
        - name: dealId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"dealName":"lorem","stage":"lorem","address":"lorem","city":"lorem","state":"lorem","zipcode":100,"mapLocation":{"type":"Point","coordinates":[100,200]},"involvedUsers":"63bd04b2342fde7a69846a5a","involvedUsersLender":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersBorrower":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersAdvisor":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"assetType":"lorem","loanAmount":100,"loanPurpose":"lorem","loanType":"lorem","tasks":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"dealNotes":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"lenderPlacement":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"documents":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103bc"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - advisor > deal
      summary: deleteDealById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: dealId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - advisor > deal
      summary: getDealById
      parameters:
        - name: dealId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"dealName":"lorem","stage":"lorem","address":"lorem","city":"lorem","state":"lorem","zipcode":100,"mapLocation":{"type":"Point","coordinates":[100,200]},"involvedUsers":"63bd04b2342fde7a69846a5a","involvedUsersLender":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersBorrower":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersAdvisor":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"assetType":"lorem","loanAmount":100,"loanPurpose":"lorem","loanType":"lorem","tasks":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"dealNotes":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"lenderPlacement":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"documents":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103c0"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/deal/paginated:
    get:
      tags:
        - advisor > deal
      summary: getDealPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"dealName":"lorem","stage":"lorem","address":"lorem","city":"lorem","state":"lorem","zipcode":100,"mapLocation":{"type":"Point","coordinates":[100,200]},"involvedUsers":"63bd04b2342fde7a69846a5a","involvedUsersLender":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersBorrower":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersAdvisor":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"assetType":"lorem","loanAmount":100,"loanPurpose":"lorem","loanType":"lorem","tasks":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"dealNotes":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"lenderPlacement":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"documents":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103bd"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/deal/:
    post:
      tags:
        - advisor > deal
      summary: createDeal
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                dealName: lorem
                stage: lorem
                address: lorem
                city: lorem
                state: lorem
                zipcode: 100
                mapLocation:
                  type: Point
                  coordinates:
                    - 100
                    - 200
                involvedUsers: 63bd04b2342fde7a69846a5a
                involvedUsersLender:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                involvedUsersBorrower:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                involvedUsersAdvisor:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                assetType: lorem
                loanAmount: 100
                loanPurpose: lorem
                loanType: lorem
                tasks:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                dealNotes:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                lenderPlacement:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                documents:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"dealName":"lorem","stage":"lorem","address":"lorem","city":"lorem","state":"lorem","zipcode":100,"mapLocation":{"type":"Point","coordinates":[100,200]},"involvedUsers":"63bd04b2342fde7a69846a5a","involvedUsersLender":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersBorrower":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersAdvisor":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"assetType":"lorem","loanAmount":100,"loanPurpose":"lorem","loanType":"lorem","tasks":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"dealNotes":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"lenderPlacement":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"documents":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103be"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - advisor > deal
      summary: getDeal
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"dealName":"lorem","stage":"lorem","address":"lorem","city":"lorem","state":"lorem","zipcode":100,"mapLocation":{"type":"Point","coordinates":[100,200]},"involvedUsers":"63bd04b2342fde7a69846a5a","involvedUsersLender":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersBorrower":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersAdvisor":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"assetType":"lorem","loanAmount":100,"loanPurpose":"lorem","loanType":"lorem","tasks":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"dealNotes":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"lenderPlacement":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"documents":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103bf"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/dealNotes/{dealNotesId}:
    delete:
      tags:
        - advisor > dealNotes
      summary: deleteDealNotesById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: dealNotesId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - advisor > dealNotes
      summary: getDealNotesById
      parameters:
        - name: dealNotesId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","pinnedByUsers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"flagedByUser":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103c3"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - advisor > dealNotes
      summary: updateDealNotes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deal: 63bd04b2342fde7a69846a5a
                pinnedByUsers:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                flagedByUser:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
      parameters:
        - name: dealNotesId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","pinnedByUsers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"flagedByUser":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103c4"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/dealNotes/paginated:
    get:
      tags:
        - advisor > dealNotes
      summary: getDealNotesPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","pinnedByUsers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"flagedByUser":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103c1"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/dealNotes/:
    get:
      tags:
        - advisor > dealNotes
      summary: getDealNotes
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","pinnedByUsers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"flagedByUser":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103c2"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - advisor > dealNotes
      summary: createDealNotes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deal: 63bd04b2342fde7a69846a5a
                pinnedByUsers:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                flagedByUser:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","pinnedByUsers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"flagedByUser":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103c5"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/lenderProgram/:
    get:
      tags:
        - advisor > lenderProgram
      summary: getLenderProgram
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderProgramType":"lorem","statesArray":["lorem","ipsum"],"minLoanSize":100,"maxLoanSize":100,"id":"6419ab348f08bb22b97103c6"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - advisor > lenderProgram
      summary: createLenderProgram
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lenderProgramType: lorem
                statesArray:
                  - lorem
                  - ipsum
                minLoanSize: 100
                maxLoanSize: 100
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderProgramType":"lorem","statesArray":["lorem","ipsum"],"minLoanSize":100,"maxLoanSize":100,"id":"6419ab348f08bb22b97103c9"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/lenderProgram/paginated:
    get:
      tags:
        - advisor > lenderProgram
      summary: getLenderProgramPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderProgramType":"lorem","statesArray":["lorem","ipsum"],"minLoanSize":100,"maxLoanSize":100,"id":"6419ab348f08bb22b97103c7"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/lenderProgram/{lenderProgramId}:
    get:
      tags:
        - advisor > lenderProgram
      summary: getLenderProgramById
      parameters:
        - name: lenderProgramId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderProgramType":"lorem","statesArray":["lorem","ipsum"],"minLoanSize":100,"maxLoanSize":100,"id":"6419ab348f08bb22b97103c8"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - advisor > lenderProgram
      summary: updateLenderProgram
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lenderProgramType: lorem
                statesArray:
                  - lorem
                  - ipsum
                minLoanSize: 100
                maxLoanSize: 100
      parameters:
        - name: lenderProgramId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderProgramType":"lorem","statesArray":["lorem","ipsum"],"minLoanSize":100,"maxLoanSize":100,"id":"6419ab348f08bb22b97103ca"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - advisor > lenderProgram
      summary: deleteLenderProgramById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: lenderProgramId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/lendingInstitution/{lendingInstitutionId}:
    delete:
      tags:
        - advisor > lendingInstitution
      summary: deleteLendingInstitutionById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: lendingInstitutionId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - advisor > lendingInstitution
      summary: getLendingInstitutionById
      parameters:
        - name: lendingInstitutionId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderNameVisible":"lorem","lenderNameInternal":"lorem","lenderType":"lorem","lenderPrograms":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"contacts":"63bd04b2342fde7a69846a5a","id":"6419ab348f08bb22b97103cd"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - advisor > lendingInstitution
      summary: updateLendingInstitution
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lenderNameVisible: lorem
                lenderNameInternal: lorem
                lenderType: lorem
                lenderPrograms:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                contacts: 63bd04b2342fde7a69846a5a
      parameters:
        - name: lendingInstitutionId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderNameVisible":"lorem","lenderNameInternal":"lorem","lenderType":"lorem","lenderPrograms":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"contacts":"63bd04b2342fde7a69846a5a","id":"6419ab348f08bb22b97103cf"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/lendingInstitution/paginated:
    get:
      tags:
        - advisor > lendingInstitution
      summary: getLendingInstitutionPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderNameVisible":"lorem","lenderNameInternal":"lorem","lenderType":"lorem","lenderPrograms":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"contacts":"63bd04b2342fde7a69846a5a","id":"6419ab348f08bb22b97103cb"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/lendingInstitution/:
    get:
      tags:
        - advisor > lendingInstitution
      summary: getLendingInstitution
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderNameVisible":"lorem","lenderNameInternal":"lorem","lenderType":"lorem","lenderPrograms":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"contacts":"63bd04b2342fde7a69846a5a","id":"6419ab348f08bb22b97103cc"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - advisor > lendingInstitution
      summary: createLendingInstitution
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lenderNameVisible: lorem
                lenderNameInternal: lorem
                lenderType: lorem
                lenderPrograms:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                contacts: 63bd04b2342fde7a69846a5a
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderNameVisible":"lorem","lenderNameInternal":"lorem","lenderType":"lorem","lenderPrograms":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"contacts":"63bd04b2342fde7a69846a5a","id":"6419ab348f08bb22b97103ce"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/lenderPlacement/:
    get:
      tags:
        - advisor > lenderPlacement
      summary: getLenderPlacement
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lendingInstitution":"63bd04b2342fde7a69846a5a","lenderContact":"63bd04b2342fde7a69846a5a","notes":["lorem","ipsum"],"stage":"lorem","terms":"63bd04b2342fde7a69846a5a","termSheet":"lorem","id":"6419ab348f08bb22b97103d0"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - advisor > lenderPlacement
      summary: createLenderPlacement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lendingInstitution: 63bd04b2342fde7a69846a5a
                lenderContact: 63bd04b2342fde7a69846a5a
                notes:
                  - lorem
                  - ipsum
                stage: lorem
                terms: 63bd04b2342fde7a69846a5a
                termSheet: lorem
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lendingInstitution":"63bd04b2342fde7a69846a5a","lenderContact":"63bd04b2342fde7a69846a5a","notes":["lorem","ipsum"],"stage":"lorem","terms":"63bd04b2342fde7a69846a5a","termSheet":"lorem","id":"6419ab348f08bb22b97103d3"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/lenderPlacement/{lenderPlacementId}:
    get:
      tags:
        - advisor > lenderPlacement
      summary: getLenderPlacementById
      parameters:
        - name: lenderPlacementId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lendingInstitution":"63bd04b2342fde7a69846a5a","lenderContact":"63bd04b2342fde7a69846a5a","notes":["lorem","ipsum"],"stage":"lorem","terms":"63bd04b2342fde7a69846a5a","termSheet":"lorem","id":"6419ab348f08bb22b97103d1"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - advisor > lenderPlacement
      summary: deleteLenderPlacementById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: lenderPlacementId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - advisor > lenderPlacement
      summary: updateLenderPlacement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lendingInstitution: 63bd04b2342fde7a69846a5a
                lenderContact: 63bd04b2342fde7a69846a5a
                notes:
                  - lorem
                  - ipsum
                stage: lorem
                terms: 63bd04b2342fde7a69846a5a
                termSheet: lorem
      parameters:
        - name: lenderPlacementId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lendingInstitution":"63bd04b2342fde7a69846a5a","lenderContact":"63bd04b2342fde7a69846a5a","notes":["lorem","ipsum"],"stage":"lorem","terms":"63bd04b2342fde7a69846a5a","termSheet":"lorem","id":"6419ab348f08bb22b97103d4"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/lenderPlacement/paginated:
    get:
      tags:
        - advisor > lenderPlacement
      summary: getLenderPlacementPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lendingInstitution":"63bd04b2342fde7a69846a5a","lenderContact":"63bd04b2342fde7a69846a5a","notes":["lorem","ipsum"],"stage":"lorem","terms":"63bd04b2342fde7a69846a5a","termSheet":"lorem","id":"6419ab348f08bb22b97103d2"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/terms/:
    get:
      tags:
        - advisor > terms
      summary: getTerms
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"initialFunding":100,"futureFunding":100,"totalLoanAmount":100,"interestRateType":"lorem","interestRateIndexValue":"lorem","interestRateIndexDate":"YYYY-MM-DD","spread":100,"totalRate":"lorem","rateNotes":"lorem","initialTerm":"lorem","extensionOptionOne":"lorem","extensionFee":"lorem","interestRateIndex":"lorem","extensionOptionTwo":"lorem","LTC":"lorem","id":"6419ab348f08bb22b97103d5"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - advisor > terms
      summary: createTerms
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                initialFunding: 100
                futureFunding: 100
                totalLoanAmount: 100
                interestRateType: lorem
                interestRateIndexValue: lorem
                interestRateIndexDate: YYYY-MM-DD
                spread: 100
                totalRate: lorem
                rateNotes: lorem
                initialTerm: lorem
                extensionOptionOne: lorem
                extensionFee: lorem
                interestRateIndex: lorem
                extensionOptionTwo: lorem
                LTC: lorem
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"initialFunding":100,"futureFunding":100,"totalLoanAmount":100,"interestRateType":"lorem","interestRateIndexValue":"lorem","interestRateIndexDate":"YYYY-MM-DD","spread":100,"totalRate":"lorem","rateNotes":"lorem","initialTerm":"lorem","extensionOptionOne":"lorem","extensionFee":"lorem","interestRateIndex":"lorem","extensionOptionTwo":"lorem","LTC":"lorem","id":"6419ab348f08bb22b97103d6"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/terms/{termsId}:
    delete:
      tags:
        - advisor > terms
      summary: deleteTermsById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: termsId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - advisor > terms
      summary: updateTerms
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                initialFunding: 100
                futureFunding: 100
                totalLoanAmount: 100
                interestRateType: lorem
                interestRateIndexValue: lorem
                interestRateIndexDate: YYYY-MM-DD
                spread: 100
                totalRate: lorem
                rateNotes: lorem
                initialTerm: lorem
                extensionOptionOne: lorem
                extensionFee: lorem
                interestRateIndex: lorem
                extensionOptionTwo: lorem
                LTC: lorem
      parameters:
        - name: termsId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"initialFunding":100,"futureFunding":100,"totalLoanAmount":100,"interestRateType":"lorem","interestRateIndexValue":"lorem","interestRateIndexDate":"YYYY-MM-DD","spread":100,"totalRate":"lorem","rateNotes":"lorem","initialTerm":"lorem","extensionOptionOne":"lorem","extensionFee":"lorem","interestRateIndex":"lorem","extensionOptionTwo":"lorem","LTC":"lorem","id":"6419ab348f08bb22b97103d7"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/lenderContact/:
    get:
      tags:
        - advisor > lenderContact
      summary: getLenderContact
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"firstName":"lorem","lastName":"lorem","nickname":"lorem","phoneNumberDirect":"lorem","phoneNumberOffice":"lorem","phoneNumberCell":"lorem","title":"lorem","city":"lorem","note":"lorem","state":"lorem","id":"6419ab348f08bb22b97103d8"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - advisor > lenderContact
      summary: createLenderContact
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: lorem
                lastName: lorem
                nickname: lorem
                phoneNumberDirect: lorem
                phoneNumberOffice: lorem
                phoneNumberCell: lorem
                title: lorem
                city: lorem
                note: lorem
                state: lorem
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"firstName":"lorem","lastName":"lorem","nickname":"lorem","phoneNumberDirect":"lorem","phoneNumberOffice":"lorem","phoneNumberCell":"lorem","title":"lorem","city":"lorem","note":"lorem","state":"lorem","id":"6419ab348f08bb22b97103da"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/lenderContact/{lenderContactId}:
    delete:
      tags:
        - advisor > lenderContact
      summary: deleteLenderContactById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: lenderContactId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - advisor > lenderContact
      summary: getLenderContactById
      parameters:
        - name: lenderContactId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"firstName":"lorem","lastName":"lorem","nickname":"lorem","phoneNumberDirect":"lorem","phoneNumberOffice":"lorem","phoneNumberCell":"lorem","title":"lorem","city":"lorem","note":"lorem","state":"lorem","id":"6419ab348f08bb22b97103d9"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - advisor > lenderContact
      summary: updateLenderContact
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: lorem
                lastName: lorem
                nickname: lorem
                phoneNumberDirect: lorem
                phoneNumberOffice: lorem
                phoneNumberCell: lorem
                title: lorem
                city: lorem
                note: lorem
                state: lorem
      parameters:
        - name: lenderContactId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"firstName":"lorem","lastName":"lorem","nickname":"lorem","phoneNumberDirect":"lorem","phoneNumberOffice":"lorem","phoneNumberCell":"lorem","title":"lorem","city":"lorem","note":"lorem","state":"lorem","id":"6419ab348f08bb22b97103db"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/lenderContact/paginated:
    get:
      tags:
        - advisor > lenderContact
      summary: getLenderContactPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"firstName":"lorem","lastName":"lorem","nickname":"lorem","phoneNumberDirect":"lorem","phoneNumberOffice":"lorem","phoneNumberCell":"lorem","title":"lorem","city":"lorem","note":"lorem","state":"lorem","id":"6419ab348f08bb22b97103dc"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/emailTemplate/:
    get:
      tags:
        - advisor > emailTemplate
      summary: getEmailTemplate
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"subject":"lorem","ccList":["lorem","ipsum"],"textBox":"lorem","emailAttachments":"lorem","id":"6419ab348f08bb22b97103dd"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - advisor > emailTemplate
      summary: createEmailTemplate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                subject: lorem
                ccList:
                  - lorem
                  - ipsum
                textBox: lorem
                emailAttachments: lorem
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"subject":"lorem","ccList":["lorem","ipsum"],"textBox":"lorem","emailAttachments":"lorem","id":"6419ab348f08bb22b97103de"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/emailTemplate/paginated:
    get:
      tags:
        - advisor > emailTemplate
      summary: getEmailTemplatePaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"subject":"lorem","ccList":["lorem","ipsum"],"textBox":"lorem","emailAttachments":"lorem","id":"6419ab348f08bb22b97103df"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/emailTemplate/{emailTemplateId}:
    get:
      tags:
        - advisor > emailTemplate
      summary: getEmailTemplateById
      parameters:
        - name: emailTemplateId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"subject":"lorem","ccList":["lorem","ipsum"],"textBox":"lorem","emailAttachments":"lorem","id":"6419ab348f08bb22b97103e0"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - advisor > emailTemplate
      summary: deleteEmailTemplateById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: emailTemplateId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - advisor > emailTemplate
      summary: updateEmailTemplate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                subject: lorem
                ccList:
                  - lorem
                  - ipsum
                textBox: lorem
                emailAttachments: lorem
      parameters:
        - name: emailTemplateId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"subject":"lorem","ccList":["lorem","ipsum"],"textBox":"lorem","emailAttachments":"lorem","id":"6419ab348f08bb22b97103e1"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/activityLog/{activityLogId}:
    delete:
      tags:
        - advisor > activityLog
      summary: deleteActivityLogById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: activityLogId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - advisor > activityLog
      summary: getActivityLogById
      parameters:
        - name: activityLogId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","update":"lorem","id":"6419ab348f08bb22b97103e3"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - advisor > activityLog
      summary: updateActivityLog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deal: 63bd04b2342fde7a69846a5a
                update: lorem
      parameters:
        - name: activityLogId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","update":"lorem","id":"6419ab348f08bb22b97103e5"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/activityLog/paginated:
    get:
      tags:
        - advisor > activityLog
      summary: getActivityLogPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","update":"lorem","id":"6419ab348f08bb22b97103e2"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/activityLog/:
    get:
      tags:
        - advisor > activityLog
      summary: getActivityLog
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","update":"lorem","id":"6419ab348f08bb22b97103e4"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - advisor > activityLog
      summary: createActivityLog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deal: 63bd04b2342fde7a69846a5a
                update: lorem
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","update":"lorem","id":"6419ab348f08bb22b97103e6"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/task/{taskId}:
    delete:
      tags:
        - advisor > task
      summary: deleteTaskById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: taskId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - advisor > task
      summary: getTaskById
      parameters:
        - name: taskId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"taskQuestion":"lorem","askingParty":"63bd04b2342fde7a69846a5a","taskAnswer":"lorem","taskDocuments":["lorem","ipsum"],"id":"6419ab348f08bb22b97103e7"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - advisor > task
      summary: updateTask
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                taskQuestion: lorem
                askingParty: 63bd04b2342fde7a69846a5a
                taskAnswer: lorem
                taskDocuments:
                  - lorem
                  - ipsum
      parameters:
        - name: taskId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"taskQuestion":"lorem","askingParty":"63bd04b2342fde7a69846a5a","taskAnswer":"lorem","taskDocuments":["lorem","ipsum"],"id":"6419ab348f08bb22b97103eb"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/task/paginated:
    get:
      tags:
        - advisor > task
      summary: getTaskPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"taskQuestion":"lorem","askingParty":"63bd04b2342fde7a69846a5a","taskAnswer":"lorem","taskDocuments":["lorem","ipsum"],"id":"6419ab348f08bb22b97103e8"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/task/:
    post:
      tags:
        - advisor > task
      summary: createTask
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                taskQuestion: lorem
                askingParty: 63bd04b2342fde7a69846a5a
                taskAnswer: lorem
                taskDocuments:
                  - lorem
                  - ipsum
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"taskQuestion":"lorem","askingParty":"63bd04b2342fde7a69846a5a","taskAnswer":"lorem","taskDocuments":["lorem","ipsum"],"id":"6419ab348f08bb22b97103e9"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - advisor > task
      summary: getTask
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"taskQuestion":"lorem","askingParty":"63bd04b2342fde7a69846a5a","taskAnswer":"lorem","taskDocuments":["lorem","ipsum"],"id":"6419ab348f08bb22b97103ea"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/dealDocument/paginated:
    get:
      tags:
        - advisor > dealDocument
      summary: getDealDocumentPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"documentType":"lorem","file":"lorem","fileName":"lorem","id":"6419ab348f08bb22b97103ec"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/dealDocument/:
    get:
      tags:
        - advisor > dealDocument
      summary: getDealDocument
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"documentType":"lorem","file":"lorem","fileName":"lorem","id":"6419ab348f08bb22b97103ed"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - advisor > dealDocument
      summary: createDealDocument
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                documentType: lorem
                file: lorem
                fileName: lorem
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"documentType":"lorem","file":"lorem","fileName":"lorem","id":"6419ab348f08bb22b97103ef"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/advisor/dealDocument/{dealDocumentId}:
    get:
      tags:
        - advisor > dealDocument
      summary: getDealDocumentById
      parameters:
        - name: dealDocumentId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"documentType":"lorem","file":"lorem","fileName":"lorem","id":"6419ab348f08bb22b97103ee"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - advisor > dealDocument
      summary: updateDealDocument
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                documentType: lorem
                file: lorem
                fileName: lorem
      parameters:
        - name: dealDocumentId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"documentType":"lorem","file":"lorem","fileName":"lorem","id":"6419ab348f08bb22b97103f0"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - advisor > dealDocument
      summary: deleteDealDocumentById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: dealDocumentId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/auth/register:
    post:
      tags:
        - lender > auth
      summary: User Register API
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"name\": \"brandsWeLove\",\n\t\"email\":
                \"brandswelove@yopmail.com\",\n\t\"password\":
                \"Password@123\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: "{\r\n    \"status\": \"Success\",\r\n    \"data\": {\r\n        \"success\": true,\r\n        \"message\": \"Email has been sent to your registered email. Please check your email and verify it\",\r\n        \"user\": {\r\n            \"name\": \"brandsWeLove\",\r\n            \"email\": \"brandswelove@yopmail.com\",\r\n            \"codes\": [],\r\n            \"id\": \"6324202158e1442e57d44f4a\"\r\n        },\r\n        \"tokens\": {\r\n            \"access\": {\r\n                \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MzI0MjAyMTU4ZTE0NDJlNTdkNDRmNGEiLCJpYXQiOjE2NjMzMTE5MDUsImV4cCI6MTY2MzMxMzcwNX0.K0hse8aWTfOSe9pCrFocFQzzHTZAW-Xhmoy_1tQHnfo\",\r\n                \"expires\": \"2022-09-16T07:35:05.736Z\"\r\n            },\r\n            \"refresh\": {\r\n                \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MzI0MjAyMTU4ZTE0NDJlNTdkNDRmNGEiLCJpYXQiOjE2NjMzMTE5MDUsImV4cCI6MTY2NTkwMzkwNX0.Axr9VnaT1HF_F3k0NmN4QyM0C6YYwMuBR71tpc6YpWI\",\r\n                \"expires\": \"2022-10-16T07:05:05.736Z\"\r\n            }\r\n        }\r\n    }\r\n}"
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 400,
                    "message": "Email already taken",
                    "stack": "Error: Email already taken\n    at _callee5$ (/Users/macos/projects/demo/services/user.service.js:18:11)\n    at tryCatch (/Users/macos/projects/demo/services/user.service.js:26:2404)\n    at Generator._invoke (/Users/macos/projects/demo/services/user.service.js:26:1964)\n    at Generator.next (/Users/macos/projects/demo/services/user.service.js:26:3255)\n    at asyncGeneratorStep (/Users/macos/projects/demo/services/user.service.js:28:103)\n    at _next (/Users/macos/projects/demo/services/user.service.js:30:194)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/lender/auth/login:
    post:
      tags:
        - lender > auth
      summary: User Login API
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"email\": \"brandswelove@yopmail.com\",\n\t\"password\":
                \"Password@123\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "user": {
                        "closetPolicy": {
                            "dryCleaning": "dry_cleaning_myself",
                            "rentalRequests": "rental_approve_not",
                            "shipping": "national_shipping"
                        },
                        "picture": "https://chia-app-dev.s3.amazonaws.com/users/60ceba70a5303d040bb8fead/61014ed6f7d99f00094b77b2/EE761E82-06B5-4C4A-B650-D61B1B4F8648.jpg",
                        "phoneVerified": false,
                        "emailVerified": true,
                        "paymentVerified": false,
                        "trusted": false,
                        "speedyShipper": false,
                        "quickResponder": false,
                        "nationalShipping": false,
                        "offersAccepted": false,
                        "role": "admin",
                        "active": true,
                        "vacationMode": false,
                        "sellerAverageRating": 4,
                        "sellerRatingCount": 1,
                        "buyerAverageRating": 5,
                        "buyerRatingCount": 1,
                        "name": "Hardik",
                        "email": "brandswelove@yopmail.com",
                        "addresses": [
                            {
                                "type": "shipping",
                                "_id": "60e03ccb38a3e0000992f1c8",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "145",
                                "line2": "Laskana",
                                "postalCode": "395006",
                                "fullName": "11",
                                "phoneNumber": "972757"
                            },
                            {
                                "type": "shipping",
                                "_id": "60e041e1673571000812ecc0",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "12",
                                "line2": "kapodra",
                                "postalCode": "395006"
                            },
                            {
                                "type": "billing",
                                "_id": "60e3f7843f9e510008f11084",
                                "city": "Surat",
                                "state": "Gujarat",
                                "country": "Albania",
                                "line1": "139, matrushakti",
                                "line2": "Surat",
                                "postalCode": "395006",
                                "fullName": "Bhavesh b",
                                "phoneNumber": "9727572204"
                            },
                            {
                                "type": "billing",
                                "_id": "60e435bcde21190008202880",
                                "city": "Surta",
                                "state": "Gujarart",
                                "country": "Afghanistan",
                                "line1": "2",
                                "line2": "Gsvdsg",
                                "postalCode": "395005",
                                "fullName": "Asd",
                                "phoneNumber": "8956321457882"
                            },
                            {
                                "type": "billing",
                                "_id": "60e4363fde21190008202889",
                                "city": "Suart",
                                "state": "Gujarat",
                                "country": "Afghanistan",
                                "line1": "95",
                                "line2": "Raval Faliyu",
                                "postalCode": "395006",
                                "fullName": "Sahil Raval",
                                "phoneNumber": "8956231478"
                            },
                            {
                                "type": "shipping",
                                "_id": "60e436aadd17280008f41ffb",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "12",
                                "line2": "kapodra",
                                "postalCode": "395006"
                            },
                            {
                                "type": "shipping",
                                "_id": "60e68770ab2a6e000919057d",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "12",
                                "line2": "kapodra",
                                "postalCode": "395006"
                            },
                            {
                                "type": "shipping",
                                "_id": "60e692516b897800082c688e",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "12",
                                "line2": "kapodra",
                                "postalCode": "395006"
                            },
                            {
                                "type": "shipping",
                                "_id": "60ed1ed303c4420008a15027",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "12",
                                "line2": "kapodra",
                                "postalCode": "395006"
                            },
                            {
                                "type": "return",
                                "_id": "60f502742603050008695e8b",
                                "city": "Delhi",
                                "state": "UP",
                                "country": "India",
                                "line1": "123",
                                "line2": "562 north delhi",
                                "postalCode": "395001",
                                "fullName": "Test user",
                                "phoneNumber": "9727571144"
                            },
                            {
                                "type": "return",
                                "_id": "60f94455d297880008dcd270",
                                "city": "Surat",
                                "state": "Gujarat",
                                "country": "Albania",
                                "line1": "Tested",
                                "line2": "125",
                                "postalCode": "395006",
                                "fullName": "Testing user",
                                "phoneNumber": "121212121"
                            },
                            {
                                "type": "shipping",
                                "_id": "610266cde5c45a0008d14baa",
                                "city": "surat",
                                "state": "gujarat",
                                "country": "india",
                                "line1": "12",
                                "line2": "kapodra",
                                "postalCode": "395006"
                            }
                        ],
                        "bio": "Hello, I am Hardik Beladiya",
                        "lastName": "Beladiya",
                        "phoneNumber": "8140447270",
                        "interest": {
                            "styles": [
                                {
                                    "active": true,
                                    "name": "Luxury",
                                    "description": "Luxury is theb Style in which User can Luxury",
                                    "iconUrl": "https://cdn.shopify.com/s/files/1/0006/0420/9215/files/fashion_styles_casual_1000.jpg",
                                    "id": "60d1b7a6c3b1f3132df11176"
                                },
                                {
                                    "active": true,
                                    "name": "StreetWear",
                                    "description": "StreetWear is theb Style in which User can StreetWear",
                                    "iconUrl": "https://cdn.shopify.com/s/files/1/0006/0420/9215/files/fashion_styles_casual_1000.jpg",
                                    "id": "60d1b7b8c3b1f3132df11177"
                                },
                                {
                                    "active": true,
                                    "name": "SportWear",
                                    "description": "SportWear is theb Style in which User can SportWear",
                                    "iconUrl": "https://cdn.shopify.com/s/files/1/0006/0420/9215/files/fashion_styles_casual_1000.jpg",
                                    "id": "60d1b7c6c3b1f3132df11178"
                                },
                                {
                                    "active": true,
                                    "name": "Independent Brands",
                                    "description": "Independent Brands is theb Style in which User can Independent Brands",
                                    "iconUrl": "https://cdn.shopify.com/s/files/1/0006/0420/9215/files/fashion_styles_casual_1000.jpg",
                                    "id": "60d1b7d7c3b1f3132df11179"
                                },
                                {
                                    "active": true,
                                    "name": "Trend",
                                    "description": "Trend is theb Style in which User can Trend",
                                    "iconUrl": "https://cdn.shopify.com/s/files/1/0006/0420/9215/files/fashion_styles_casual_1000.jpg",
                                    "id": "60d1b7e9c3b1f3132df1117a"
                                }
                            ],
                            "designers": [
                                {
                                    "active": true,
                                    "name": "Gucci",
                                    "description": "Gucci si Famous Brand",
                                    "id": "60d1bba3c4088013a607e246"
                                },
                                {
                                    "active": true,
                                    "name": "Prada",
                                    "description": "Prada si Famous Brand",
                                    "id": "60d70139907f852ca211d5db"
                                },
                                {
                                    "active": true,
                                    "name": "Prada",
                                    "description": "Prada si Famous Brand",
                                    "id": "60fe9c6e69bf380008a5ec68"
                                }
                            ],
                            "sizes": [
                                {
                                    "type": "clothes",
                                    "standard": [
                                        "00",
                                        "XXS"
                                    ],
                                    "active": true,
                                    "name": "small",
                                    "id": "60d188bec5ef3e0f7bca1454"
                                },
                                {
                                    "type": "denim",
                                    "standard": [
                                        "23"
                                    ],
                                    "active": true,
                                    "name": "small",
                                    "id": "60d6fc652bcbec230be4f681"
                                },
                                {
                                    "type": "shoes",
                                    "standard": [
                                        "US 4",
                                        "UK 2",
                                        "EU 35"
                                    ],
                                    "active": true,
                                    "name": "small",
                                    "id": "60d6fc8c2bcbec230be4f685"
                                }
                            ],
                            "_id": "610253eccea3760009e0cc79"
                        },
                        "followingCount": 12,
                        "followerCount": 7,
                        "transactions": 11,
                        "id": "60ceba70a5303d040bb8fead"
                    },
                    "tokens": {
                        "access": {
                            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MGNlYmE3MGE1MzAzZDA0MGJiOGZlYWQiLCJpYXQiOjE2Mjg0ODM2MjcsImV4cCI6MTYyODY2MzYyN30.3J28mllL-Uh338oCOHCydnuadPn0vIfdDyPnyB5_6ZQ",
                            "expires": "2021-08-11T06:33:47.393Z"
                        },
                        "refresh": {
                            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MGNlYmE3MGE1MzAzZDA0MGJiOGZlYWQiLCJpYXQiOjE2Mjg0ODM2MjcsImV4cCI6MTYzMTA3NTYyN30.-xQYtkvdOPXJ_rIaPfINIjZrSUpBKsbxApR-89X3jys",
                            "expires": "2021-09-08T04:33:47.394Z"
                        }
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              examples:
                example-0:
                  summary: User Login Failed
                  value: |-
                    {
                        "code": 400,
                        "message": "Incorrect email or password",
                        "stack": "Error: Incorrect email or password\n    at Object.loginUserWithEmailAndPassword (/var/task/services/auth.service.js:17:11)\n    at async /var/task/controllers/auth.controller.js:21:14"
                    }
                example-1:
                  summary: User Login API fail
                  value: |-
                    {
                        "code": 400,
                        "message": "Incorrect email or password",
                        "stack": "Error: Incorrect email or password\n    at Object.loginUserWithEmailAndPassword (/var/task/services/auth.service.js:17:11)\n    at async /var/task/controllers/auth.controller.js:21:14"
                    }
  /v1/lender/auth/forgot-password:
    post:
      tags:
        - lender > auth
      summary: ForgetPassword API
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n\t\"email\": \"brandswelove@yopmail.com\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "success": true,
                        "message": "Code has been sent"
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 400,
                    "message": "no user found with this email",
                    "stack": "Error: no user found with this email\n    at _callee2$ (/Users/macos/projects/postmantTest/services/auth.service.js:34:11)\n    at tryCatch (/Users/macos/projects/postmantTest/services/auth.service.js:22:2404)\n    at Generator._invoke (/Users/macos/projects/postmantTest/services/auth.service.js:22:1964)\n    at Generator.next (/Users/macos/projects/postmantTest/services/auth.service.js:22:3255)\n    at asyncGeneratorStep (/Users/macos/projects/postmantTest/services/auth.service.js:24:103)\n    at _next (/Users/macos/projects/postmantTest/services/auth.service.js:26:194)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/lender/auth/verify-reset-otp:
    post:
      tags:
        - lender > auth
      summary: Forget password otp verify
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: brandswelove@yopmail.com
                otp: 5689
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "success": true
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 400,
                    "message": "otp is Invalid",
                    "stack": "Error: otp is Invalid\
                    at _callee6$ (/Users/macos/projects/postmantTest/services/token.service.js:120:11)\
                    at tryCatch (/Users/macos/projects/postmantTest/services/token.service.js:28:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/services/token.service.js:28:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/services/token.service.js:28:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/services/token.service.js:30:103)\
                    at _next (/Users/macos/projects/postmantTest/services/token.service.js:32:194)\
                    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/lender/auth/send-verify-otp:
    post:
      tags:
        - lender > auth
      summary: Send VerifyEmail OTP
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n\t\"email\": \"brandswelove@yopmail.com\"\n}"'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {\n    \"status\": \"Success\",\n    \"data\": {\n       
                \"success\": true,\n        \"message\": \"Email has been sent
                to your registered email. Please check your email and verify
                it\"\n    }\n}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 400,
                    "message": "no user found with this id!",
                    "stack": "Error: no user found with this id!\
                    at _callee9$ (/Users/macos/projects/postmantTest/controllers/auth.controller.js:73:11)\
                    at tryCatch (/Users/macos/projects/postmantTest/controllers/auth.controller.js:30:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/controllers/auth.controller.js:30:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/controllers/auth.controller.js:30:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/controllers/auth.controller.js:32:103)\
                    at _next (/Users/macos/projects/postmantTest/controllers/auth.controller.js:34:194)\
                    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/lender/auth/verify-otp:
    post:
      tags:
        - lender > auth
      summary: VerifyEmail OTP
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"email\": \"brandswelove@yopmail.com\",\n\t\"otp\":
                6790\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "success": true
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 400,
                    "message": "otp is Invalid",
                    "stack": "Error: otp is Invalid\
                    at _callee4$ (/Users/macos/projects/postmantTest/services/token.service.js:87:11)\
                    at tryCatch (/Users/macos/projects/postmantTest/services/token.service.js:28:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/services/token.service.js:28:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/services/token.service.js:28:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/services/token.service.js:30:103)\
                    at _next (/Users/macos/projects/postmantTest/services/token.service.js:32:194)\
                    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/lender/auth/me:
    get:
      tags:
        - lender > auth
      summary: Get Current LoggedIn User
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "user": {
                            "name": "brandsWeLove",
                            "email": "brandswelove@yopmail.com",
                            "codes": [
                                {
                                    "_id": "632445f374b9534093707e5a",
                                    "code": "2397",
                                    "expirationDate": "2022-09-16T09:56:27.827Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "632446f0b39a9240eaf3a34c",
                                    "code": "2645",
                                    "expirationDate": "2022-09-16T10:00:40.588Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "632446f1b39a9240eaf3a34f",
                                    "code": "1454",
                                    "expirationDate": "2022-09-16T10:00:41.785Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "632447e9b39a9240eaf3a358",
                                    "code": "3490",
                                    "expirationDate": "2022-09-16T10:04:49.108Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "6324481ab39a9240eaf3a361",
                                    "code": "5057",
                                    "expirationDate": "2022-09-16T10:05:38.968Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "63244938b39a9240eaf3a364",
                                    "code": "2239",
                                    "expirationDate": "2022-09-16T10:10:24.424Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "63244965a5de9f41aa207ceb",
                                    "code": "6872",
                                    "expirationDate": "2022-09-16T10:11:09.686Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "63244968a5de9f41aa207cee",
                                    "code": "7935",
                                    "expirationDate": "2022-09-16T10:11:12.028Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "63244afe3df3e0420eb7d615",
                                    "code": "6102",
                                    "expirationDate": "2022-09-16T10:17:58.013Z",
                                    "used": false,
                                    "codeType": "login"
                                },
                                {
                                    "_id": "63244b863df3e0420eb7d61a",
                                    "code": "8780",
                                    "expirationDate": "2022-09-16T10:20:14.263Z",
                                    "used": false,
                                    "codeType": "login"
                                }
                            ],
                            "id": "6324400426177b3af85933b0"
                        }
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 401,
                    "message": "Please authenticate",
                    "stack": "Error: Please authenticate\
                    at _callee$ (/Users/macos/projects/postmantTest/middlewares/auth.js:6:19)\
                    at tryCatch (/Users/macos/projects/postmantTest/middlewares/auth.js:13:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/middlewares/auth.js:13:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/middlewares/auth.js:13:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/middlewares/auth.js:15:103)\
                    at _next (/Users/macos/projects/postmantTest/middlewares/auth.js:17:194)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:364\
                    at new Promise (<anonymous>)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:97\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:4:24\
                    at allFailed (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:107:18)\
                    at attempt (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:180:28)\
                    at JwtStrategy.strategy.fail (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:302:9)\
                    at /Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:106:33\
                    at /Users/macos/projects/postmantTest/node_modules/jsonwebtoken/verify.js:152:16\
                    at getSecret (/Users/macos/projects/postmantTest/node_modules/jsonwebtoken/verify.js:90:14)\
                    at Object.module.exports [as verify] (/Users/macos/projects/postmantTest/node_modules/jsonwebtoken/verify.js:94:10)\
                    at Function.module.exports [as JwtVerifier] (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/verify_jwt.js:4:16)\
                    at /Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:104:25\
                    at JwtStrategy._secretOrKeyProvider (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:40:13)\
                    at JwtStrategy.authenticate (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:99:10)\
                    at attempt (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:366:16)\
                    at authenticate (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:367:7)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:18:5\
                    at new Promise (<anonymous>)\
                    at _callee2$ (/Users/macos/projects/postmantTest/middlewares/auth.js:17:10)\
                    at tryCatch (/Users/macos/projects/postmantTest/middlewares/auth.js:13:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/middlewares/auth.js:13:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/middlewares/auth.js:13:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/middlewares/auth.js:15:103)\
                    at _next (/Users/macos/projects/postmantTest/middlewares/auth.js:17:194)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:364\
                    at new Promise (<anonymous>)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:97\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:16:14\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/route.js:137:13)\
                    at Route.dispatch (/Users/macos/projects/postmantTest/node_modules/express/lib/router/route.js:112:3)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:281:22\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)\
                    at router (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:47:12)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at trim_prefix (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:317:13)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:284:7\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)"
                }
    put:
      tags:
        - lender > auth
      summary: Update Profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Hardik
                lastName: Beladiya
                password: Password@123
                bio: Hello, I am Hardik Beladiya
                phoneNumber: '8140447270'
                vacationMode: true
                closetPolicy:
                  dryCleaning: dry_cleaning_all
                  rentalRequests: rental_approve_all
                  shipping: same_day_delivery
                picture: >-
                  https://chia-app-dev.s3.amazonaws.com/users/60ceba70a5303d040bb8fead/60f9501f0f1d48348ff5e433/helloworld23.jpg
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "user": {
                        "name": "Hardik",
                        "email": "test@yopmail.com",
                        "codes": [
                            {
                                "_id": "6327fc2939412f13e64aeb01",
                                "code": "6184",
                                "expirationDate": "2022-09-19T05:30:41.045Z",
                                "used": false,
                                "codeType": "resetPassword"
                            },
                            {
                                "_id": "6327fc595e57e1140efbef85",
                                "code": "5846",
                                "expirationDate": "2022-09-19T05:31:29.163Z",
                                "used": false,
                                "codeType": "resetPassword"
                            },
                            {
                                "_id": "6327fc935e57e1140efbef8a",
                                "code": "2418",
                                "expirationDate": "2022-09-19T05:32:27.612Z",
                                "used": false,
                                "codeType": "login"
                            },
                            {
                                "_id": "6327fc9b5e57e1140efbef8d",
                                "code": "1428",
                                "expirationDate": "2022-09-19T05:32:35.939Z",
                                "used": false,
                                "codeType": "login"
                            }
                        ],
                        "id": "6327fb66af25dc13b9547219"
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 401,
                    "message": "Please authenticate",
                    "stack": "Error: Please authenticate\
                    at _callee$ (/Users/macos/projects/postmantTest/middlewares/auth.js:6:19)\
                    at tryCatch (/Users/macos/projects/postmantTest/middlewares/auth.js:13:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/middlewares/auth.js:13:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/middlewares/auth.js:13:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/middlewares/auth.js:15:103)\
                    at _next (/Users/macos/projects/postmantTest/middlewares/auth.js:17:194)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:364\
                    at new Promise (<anonymous>)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:97\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:4:24\
                    at allFailed (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:107:18)\
                    at attempt (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:180:28)\
                    at JwtStrategy.strategy.fail (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:302:9)\
                    at /Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:106:33\
                    at /Users/macos/projects/postmantTest/node_modules/jsonwebtoken/verify.js:152:16\
                    at getSecret (/Users/macos/projects/postmantTest/node_modules/jsonwebtoken/verify.js:90:14)\
                    at Object.module.exports [as verify] (/Users/macos/projects/postmantTest/node_modules/jsonwebtoken/verify.js:94:10)\
                    at Function.module.exports [as JwtVerifier] (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/verify_jwt.js:4:16)\
                    at /Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:104:25\
                    at JwtStrategy._secretOrKeyProvider (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:40:13)\
                    at JwtStrategy.authenticate (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:99:10)\
                    at attempt (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:366:16)\
                    at authenticate (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:367:7)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:18:5\
                    at new Promise (<anonymous>)\
                    at _callee2$ (/Users/macos/projects/postmantTest/middlewares/auth.js:17:10)\
                    at tryCatch (/Users/macos/projects/postmantTest/middlewares/auth.js:13:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/middlewares/auth.js:13:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/middlewares/auth.js:13:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/middlewares/auth.js:15:103)\
                    at _next (/Users/macos/projects/postmantTest/middlewares/auth.js:17:194)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:364\
                    at new Promise (<anonymous>)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:97\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:16:14\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/route.js:137:13)\
                    at Route.dispatch (/Users/macos/projects/postmantTest/node_modules/express/lib/router/route.js:112:3)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:281:22\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)\
                    at router (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:47:12)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at trim_prefix (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:317:13)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:284:7\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)"
                }
  /v1/lender/auth/reset-password:
    post:
      tags:
        - lender > auth
      summary: change password with otp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: brandswelove@yopmail.com
                password: password@123
                otp: 2345
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "success": true,
                        "message": "Password has been reset successfully"
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 400,
                    "message": "otp is Invalid",
                    "stack": "Error: otp is Invalid\
                    at _callee5$ (/Users/macos/projects/postmantTest/services/token.service.js:104:11)\
                    at tryCatch (/Users/macos/projects/postmantTest/services/token.service.js:28:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/services/token.service.js:28:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/services/token.service.js:28:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/services/token.service.js:30:103)\
                    at _next (/Users/macos/projects/postmantTest/services/token.service.js:32:194)\
                    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/lender/auth/logout:
    post:
      tags:
        - lender > auth
      summary: logout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                refreshToken: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MGNlYmE3MGE1MzAzZDA0MGJiOGZlYWQiLCJpYXQiOjE2MjQ3MTAyNzQsImV4cCI6MTYyNzMwMjI3NH0.AQwznHISR6gRlyCSCjKONY0EMvCZfRD_5FdGSxYFVeM
                deviceToken: '123'
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "success": true
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 401,
                    "message": "Please authenticate",
                    "stack": "Error: Please authenticate\
                    at _callee$ (/Users/macos/projects/postmantTest/middlewares/auth.js:6:19)\
                    at tryCatch (/Users/macos/projects/postmantTest/middlewares/auth.js:13:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/middlewares/auth.js:13:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/middlewares/auth.js:13:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/middlewares/auth.js:15:103)\
                    at _next (/Users/macos/projects/postmantTest/middlewares/auth.js:17:194)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:364\
                    at new Promise (<anonymous>)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:97\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:4:24\
                    at allFailed (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:107:18)\
                    at attempt (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:180:28)\
                    at JwtStrategy.strategy.fail (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:302:9)\
                    at JwtStrategy.authenticate (/Users/macos/projects/postmantTest/node_modules/passport-jwt/lib/strategy.js:96:21)\
                    at attempt (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:366:16)\
                    at authenticate (/Users/macos/projects/postmantTest/node_modules/passport/lib/middleware/authenticate.js:367:7)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:19:5\
                    at new Promise (<anonymous>)\
                    at _callee2$ (/Users/macos/projects/postmantTest/middlewares/auth.js:17:10)\
                    at tryCatch (/Users/macos/projects/postmantTest/middlewares/auth.js:13:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/middlewares/auth.js:13:1964)\
                    at Generator.next (/Users/macos/projects/postmantTest/middlewares/auth.js:13:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/middlewares/auth.js:15:103)\
                    at _next (/Users/macos/projects/postmantTest/middlewares/auth.js:17:194)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:364\
                    at new Promise (<anonymous>)\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:17:97\
                    at /Users/macos/projects/postmantTest/middlewares/auth.js:16:14\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/route.js:137:13)\
                    at Route.dispatch (/Users/macos/projects/postmantTest/node_modules/express/lib/router/route.js:112:3)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:281:22\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)\
                    at router (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:47:12)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at trim_prefix (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:317:13)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:284:7\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)\
                    at router (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:47:12)\
                    at Layer.handle [as handle_request] (/Users/macos/projects/postmantTest/node_modules/express/lib/router/layer.js:95:5)\
                    at trim_prefix (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:317:13)\
                    at /Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:284:7\
                    at Function.process_params (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:335:12)\
                    at next (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:275:10)\
                    at Function.handle (/Users/macos/projects/postmantTest/node_modules/express/lib/router/index.js:174:3)"
                }
  /v1/lender/auth/refresh-tokens:
    post:
      tags:
        - lender > auth
      summary: refresh token api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                refreshToken: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MGNlYmE3MGE1MzAzZDA0MGJiOGZlYWQiLCJpYXQiOjE2MjY4NDA5MzksImV4cCI6MTYyOTQzMjkzOX0.lGJKNTRcHquf1LIErNgGZnJ284ojXjLh6ovYzZFjBl8
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "access": {
                            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MzI0NjNkYzM0ZWUwYjRlZTNiNzliOWIiLCJpYXQiOjE2NjMzMzA2NDIsImV4cCI6MTY2MzMzMjQ0Mn0.1vPjrpTE5i_WrA_eqVcNHZebVz-j79CGzc14hW1xzpU",
                            "expires": "2022-09-16T12:47:22.421Z"
                        },
                        "refresh": {
                            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MzI0NjNkYzM0ZWUwYjRlZTNiNzliOWIiLCJpYXQiOjE2NjMzMzA2NDIsImV4cCI6MTY2NTkyMjY0Mn0.ZBTMp4UFl10gVrJFV3Y_Yov3BLrUsMjVcoouBdl_Fe8",
                            "expires": "2022-10-16T12:17:22.423Z"
                        }
                    }
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 401,
                    "message": "Please authenticate",
                    "stack": "Error: Please authenticate\
                    at _callee3$ (/Users/macos/projects/postmantTest/services/auth.service.js:65:11)\
                    at tryCatch (/Users/macos/projects/postmantTest/services/auth.service.js:22:2404)\
                    at Generator._invoke (/Users/macos/projects/postmantTest/services/auth.service.js:22:1964)\
                    at Generator.throw (/Users/macos/projects/postmantTest/services/auth.service.js:22:3255)\
                    at asyncGeneratorStep (/Users/macos/projects/postmantTest/services/auth.service.js:24:103)\
                    at _throw (/Users/macos/projects/postmantTest/services/auth.service.js:26:291)\
                    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                }
  /v1/lender/auth/register-device-token:
    post:
      tags:
        - lender > auth
      summary: register-device-token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deviceToken: abcd123
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "name": "brandsWeLove",
                        "email": "test@yopmail.com",
                        "codes": [],
                        "deviceTokens": [
                            {
                                "_id": "632841ca8a7d165589aaf9b0",
                                "deviceToken": "abcd123"
                            },
                            {
                                "_id": "632845e38a7d165589aaf9b7",
                                "deviceToken": "abcd1234"
                            }
                        ],
                        "id": "632841b649310a5524fed88e"
                    }
                }
        '400':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 401,
                    "message": "Please authenticate",
                    "stack": "Error: Please authenticate\n    at _callee$ (/Users/macos/projects/notificationTest/middlewares/auth.js:6:19)\n    at tryCatch (/Users/macos/projects/notificationTest/middlewares/auth.js:13:2404)\n    at Generator._invoke (/Users/macos/projects/notificationTest/middlewares/auth.js:13:1964)\n    at Generator.next (/Users/macos/projects/notificationTest/middlewares/auth.js:13:3255)\n    at asyncGeneratorStep (/Users/macos/projects/notificationTest/middlewares/auth.js:15:103)\n    at _next (/Users/macos/projects/notificationTest/middlewares/auth.js:17:194)\n    at /Users/macos/projects/notificationTest/middlewares/auth.js:17:364\n    at new Promise (<anonymous>)\n    at /Users/macos/projects/notificationTest/middlewares/auth.js:17:97\n    at /Users/macos/projects/notificationTest/middlewares/auth.js:4:24\n    at allFailed (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:107:18)\n    at attempt (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:180:28)\n    at JwtStrategy.strategy.fail (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:302:9)\n    at JwtStrategy.authenticate (/Users/macos/projects/notificationTest/node_modules/passport-jwt/lib/strategy.js:96:21)\n    at attempt (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:366:16)\n    at authenticate (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:367:7)"
                }
  /v1/lender/auth/update-device-token:
    post:
      tags:
        - lender > auth
      summary: update-device-token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deviceToken: abcd123
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '1727'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:33:47 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: ac556d85-b79c-4c76-af92-4939dd0b6b7f
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            content-encoding:
              schema:
                type: string
                example: gzip
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB2wGMXoAMFyVg=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"1525-KvJsYaaD3NGLDWTF/UjaXp9ITSo"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b02b-34b93ad02edc751736afdca9;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Miss from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: 45gl6x0hhqPxXNoDI71_2-6P882xa17K5DrhxvxH-cFwOkRdY-82Cg==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Success",
                    "data": {
                        "name": "brandsWeLove",
                        "email": "test@yopmail.com",
                        "codes": [],
                        "deviceTokens": [
                            {
                                "_id": "632841ca8a7d165589aaf9b0",
                                "deviceToken": "abcd123"
                            }
                        ],
                        "id": "632841b649310a5524fed88e"
                    }
                }
        '400':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '246'
            Connection:
              schema:
                type: string
                example: keep-alive
            Date:
              schema:
                type: string
                example: Mon, 09 Aug 2021 04:34:05 GMT
            x-amzn-RequestId:
              schema:
                type: string
                example: d3b715f8-fb69-48d8-beec-396b041570c1
            referrer-policy:
              schema:
                type: string
                example: no-referrer
            x-dns-prefetch-control:
              schema:
                type: string
                example: 'off'
            x-permitted-cross-domain-policies:
              schema:
                type: string
                example: none
            x-xss-protection:
              schema:
                type: integer
                example: '0'
            access-control-allow-origin:
              schema:
                type: string
                example: '*'
            expect-ct:
              schema:
                type: string
                example: max-age=0
            strict-transport-security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            x-frame-options:
              schema:
                type: string
                example: SAMEORIGIN
            x-amzn-Remapped-content-length:
              schema:
                type: integer
                example: '246'
            content-security-policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            x-download-options:
              schema:
                type: string
                example: noopen
            x-amz-apigw-id:
              schema:
                type: string
                example: DyB5mETaoAMFyyw=
            vary:
              schema:
                type: string
                example: Accept-Encoding
            x-content-type-options:
              schema:
                type: string
                example: nosniff
            etag:
              schema:
                type: string
                example: W/"f6-SZkDl6luoYcOoQxccj9OT4/eKKE"
            X-Amzn-Trace-Id:
              schema:
                type: string
                example: Root=1-6110b03d-7afdba2b6b75c1955314ad62;Sampled=0
            X-Cache:
              schema:
                type: string
                example: Error from cloudfront
            Via:
              schema:
                type: string
                example: >-
                  1.1 e01af42be70425366a2b20a3b825d2be.cloudfront.net
                  (CloudFront)
            X-Amz-Cf-Pop:
              schema:
                type: string
                example: BOM51-C1
            X-Amz-Cf-Id:
              schema:
                type: string
                example: dYNPQK9EpeQSJMvrCkUtb7E-iqU0QIURCOf49KPKuCZEEl9rlZxumw==
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                    "status": "Failure",
                    "code": 401,
                    "message": "Please authenticate",
                    "stack": "Error: Please authenticate\n    at _callee$ (/Users/macos/projects/notificationTest/middlewares/auth.js:6:19)\n    at tryCatch (/Users/macos/projects/notificationTest/middlewares/auth.js:13:2404)\n    at Generator._invoke (/Users/macos/projects/notificationTest/middlewares/auth.js:13:1964)\n    at Generator.next (/Users/macos/projects/notificationTest/middlewares/auth.js:13:3255)\n    at asyncGeneratorStep (/Users/macos/projects/notificationTest/middlewares/auth.js:15:103)\n    at _next (/Users/macos/projects/notificationTest/middlewares/auth.js:17:194)\n    at /Users/macos/projects/notificationTest/middlewares/auth.js:17:364\n    at new Promise (<anonymous>)\n    at /Users/macos/projects/notificationTest/middlewares/auth.js:17:97\n    at /Users/macos/projects/notificationTest/middlewares/auth.js:4:24\n    at allFailed (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:107:18)\n    at attempt (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:180:28)\n    at JwtStrategy.strategy.fail (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:302:9)\n    at JwtStrategy.authenticate (/Users/macos/projects/notificationTest/node_modules/passport-jwt/lib/strategy.js:96:21)\n    at attempt (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:366:16)\n    at authenticate (/Users/macos/projects/notificationTest/node_modules/passport/lib/middleware/authenticate.js:367:7)"
                }
  /v1/lender/auth/google:
    post:
      tags:
        - lender > auth
      summary: Google Login API
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n\t\"access_token\":
                \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjFiZjhhODRkM2VjZDc3ZTlmMmFkNWYwNmZmZDI2MDcwMWRkMDZkOTAiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiIxMDQxNjI0OTc4MjIwLW9yN28zYTBsMm9nMmFwajgwbmJmYTJwbDE0amgxcW9yLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwiYXVkIjoiMTA0MTYyNDk3ODIyMC1zbGhpcGdmMDQ5ZmNjNDd0dG11MmY3dHFhYWNlbDN0ZC5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbSIsInN1YiI6IjExNDk5MTY4ODU3ODMwMzA1OTkwMyIsImVtYWlsIjoic2FoaWxyMDIxNkBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwibmFtZSI6IlNhaGlsIFJhdmFsIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hL0FBVFhBSnlwZ0tieXJTRzJCcS1ZdVotbkFDY21aenVSVVpSUTZvemtNNmlKPXM5Ni1jIiwiZ2l2ZW5fbmFtZSI6IlNhaGlsIiwiZmFtaWx5X25hbWUiOiJSYXZhbCIsImxvY2FsZSI6ImVuLUdCIiwiaWF0IjoxNjI2MzM5NjgwLCJleHAiOjE2MjYzNDMyODB9.THio-PVSgh777CwdtPDANGfZcZYOkDMKXvNkBxjLVIdf1JjRwbO6OanNUMC5xelMbupuElLWdxGnnWwtjfnAuZBn3Q0P6ab-NVSC-IV2b9pQypCj_hDfGypghCuHfPXEhF7hMpDjTEdbHtIEQ-ZGje--fPAddgXznx9aLtyB5uqSxyqRsZvWfWR5DN5bRfA1kph07pXQuIGVzRgfRC_GWaeZrGDu_LQZ70DgHCusSt2v41bEPBtafJT3rf7ArDRI5RUMWIWnSYG475nLhuQFUgzLD_L3zcuLHDJ_BIcQ5reo7_u-NJ0CwVyNIb6UAkUauo1KZMp-tEntJ7kVlXod_g\"\n}"
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/lender/user/{userId}:
    get:
      tags:
        - lender > User
      summary: getUserById
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"name":"lorem","role":"lorem","codes":["63bd04b2342fde7a69846a5a"],"password":"lorem","googleProvider":"63bd04b2342fde7a69846a5a","deviceTokens":"","firstName":"lorem","lastName":"lorem","phoneNumber":"lorem","company":"lorem","lastSignIn":"YYYY-MM-DD","id":"6419ab348f08bb22b97103b4"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - lender > User
      summary: updateUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: lorem
                role: lorem
                codes:
                  - 63bd04b2342fde7a69846a5a
                password: lorem
                googleProvider: 63bd04b2342fde7a69846a5a
                deviceTokens: ''
                firstName: lorem
                lastName: lorem
                phoneNumber: lorem
                company: lorem
                lastSignIn: YYYY-MM-DD
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"name":"lorem","role":"lorem","codes":["63bd04b2342fde7a69846a5a"],"password":"lorem","googleProvider":"63bd04b2342fde7a69846a5a","deviceTokens":"","firstName":"lorem","lastName":"lorem","phoneNumber":"lorem","company":"lorem","lastSignIn":"YYYY-MM-DD","id":"6419ab348f08bb22b97103b5"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - lender > User
      summary: deleteUserById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: userId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/user/paginated:
    get:
      tags:
        - lender > User
      summary: getUserPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"name":"lorem","role":"lorem","codes":["63bd04b2342fde7a69846a5a"],"password":"lorem","googleProvider":"63bd04b2342fde7a69846a5a","deviceTokens":"","firstName":"lorem","lastName":"lorem","phoneNumber":"lorem","company":"lorem","lastSignIn":"YYYY-MM-DD","id":"6419ab348f08bb22b97103b6"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/user/:
    get:
      tags:
        - lender > User
      summary: getUser
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"name":"lorem","role":"lorem","codes":["63bd04b2342fde7a69846a5a"],"password":"lorem","googleProvider":"63bd04b2342fde7a69846a5a","deviceTokens":"","firstName":"lorem","lastName":"lorem","phoneNumber":"lorem","company":"lorem","lastSignIn":"YYYY-MM-DD","id":"6419ab348f08bb22b97103b7"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - lender > User
      summary: createUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: lorem
                role: lorem
                codes:
                  - 63bd04b2342fde7a69846a5a
                password: lorem
                googleProvider: 63bd04b2342fde7a69846a5a
                deviceTokens: ''
                firstName: lorem
                lastName: lorem
                phoneNumber: lorem
                company: lorem
                lastSignIn: YYYY-MM-DD
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"name":"lorem","role":"lorem","codes":["63bd04b2342fde7a69846a5a"],"password":"lorem","googleProvider":"63bd04b2342fde7a69846a5a","deviceTokens":"","firstName":"lorem","lastName":"lorem","phoneNumber":"lorem","company":"lorem","lastSignIn":"YYYY-MM-DD","id":"6419ab348f08bb22b97103b8"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/involvedUser/:
    get:
      tags:
        - lender > involvedUser
      summary: getInvolvedUser
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenders":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"borrowers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"advisors":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103b9"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - lender > involvedUser
      summary: createInvolvedUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lenders:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                borrowers:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                advisors:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenders":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"borrowers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"advisors":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103bb"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/involvedUser/{involvedUserId}:
    put:
      tags:
        - lender > involvedUser
      summary: updateInvolvedUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lenders:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                borrowers:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                advisors:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
      parameters:
        - name: involvedUserId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenders":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"borrowers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"advisors":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103ba"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - lender > involvedUser
      summary: deleteInvolvedUserById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: involvedUserId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/deal/{dealId}:
    put:
      tags:
        - lender > deal
      summary: updateDeal
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                dealName: lorem
                stage: lorem
                address: lorem
                city: lorem
                state: lorem
                zipcode: 100
                mapLocation:
                  type: Point
                  coordinates:
                    - 100
                    - 200
                involvedUsers: 63bd04b2342fde7a69846a5a
                involvedUsersLender:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                involvedUsersBorrower:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                involvedUsersAdvisor:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                assetType: lorem
                loanAmount: 100
                loanPurpose: lorem
                loanType: lorem
                tasks:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                dealNotes:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                lenderPlacement:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                documents:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
      parameters:
        - name: dealId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"dealName":"lorem","stage":"lorem","address":"lorem","city":"lorem","state":"lorem","zipcode":100,"mapLocation":{"type":"Point","coordinates":[100,200]},"involvedUsers":"63bd04b2342fde7a69846a5a","involvedUsersLender":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersBorrower":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersAdvisor":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"assetType":"lorem","loanAmount":100,"loanPurpose":"lorem","loanType":"lorem","tasks":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"dealNotes":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"lenderPlacement":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"documents":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103bc"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - lender > deal
      summary: deleteDealById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: dealId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - lender > deal
      summary: getDealById
      parameters:
        - name: dealId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"dealName":"lorem","stage":"lorem","address":"lorem","city":"lorem","state":"lorem","zipcode":100,"mapLocation":{"type":"Point","coordinates":[100,200]},"involvedUsers":"63bd04b2342fde7a69846a5a","involvedUsersLender":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersBorrower":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersAdvisor":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"assetType":"lorem","loanAmount":100,"loanPurpose":"lorem","loanType":"lorem","tasks":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"dealNotes":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"lenderPlacement":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"documents":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103c0"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/deal/paginated:
    get:
      tags:
        - lender > deal
      summary: getDealPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"dealName":"lorem","stage":"lorem","address":"lorem","city":"lorem","state":"lorem","zipcode":100,"mapLocation":{"type":"Point","coordinates":[100,200]},"involvedUsers":"63bd04b2342fde7a69846a5a","involvedUsersLender":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersBorrower":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersAdvisor":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"assetType":"lorem","loanAmount":100,"loanPurpose":"lorem","loanType":"lorem","tasks":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"dealNotes":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"lenderPlacement":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"documents":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103bd"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/deal/:
    post:
      tags:
        - lender > deal
      summary: createDeal
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                dealName: lorem
                stage: lorem
                address: lorem
                city: lorem
                state: lorem
                zipcode: 100
                mapLocation:
                  type: Point
                  coordinates:
                    - 100
                    - 200
                involvedUsers: 63bd04b2342fde7a69846a5a
                involvedUsersLender:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                involvedUsersBorrower:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                involvedUsersAdvisor:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                assetType: lorem
                loanAmount: 100
                loanPurpose: lorem
                loanType: lorem
                tasks:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                dealNotes:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                lenderPlacement:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                documents:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"dealName":"lorem","stage":"lorem","address":"lorem","city":"lorem","state":"lorem","zipcode":100,"mapLocation":{"type":"Point","coordinates":[100,200]},"involvedUsers":"63bd04b2342fde7a69846a5a","involvedUsersLender":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersBorrower":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersAdvisor":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"assetType":"lorem","loanAmount":100,"loanPurpose":"lorem","loanType":"lorem","tasks":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"dealNotes":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"lenderPlacement":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"documents":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103be"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - lender > deal
      summary: getDeal
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"dealName":"lorem","stage":"lorem","address":"lorem","city":"lorem","state":"lorem","zipcode":100,"mapLocation":{"type":"Point","coordinates":[100,200]},"involvedUsers":"63bd04b2342fde7a69846a5a","involvedUsersLender":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersBorrower":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"involvedUsersAdvisor":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"assetType":"lorem","loanAmount":100,"loanPurpose":"lorem","loanType":"lorem","tasks":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"dealNotes":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"lenderPlacement":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"documents":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103bf"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/dealNotes/{dealNotesId}:
    delete:
      tags:
        - lender > dealNotes
      summary: deleteDealNotesById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: dealNotesId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - lender > dealNotes
      summary: getDealNotesById
      parameters:
        - name: dealNotesId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","pinnedByUsers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"flagedByUser":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103c3"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - lender > dealNotes
      summary: updateDealNotes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deal: 63bd04b2342fde7a69846a5a
                pinnedByUsers:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                flagedByUser:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
      parameters:
        - name: dealNotesId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","pinnedByUsers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"flagedByUser":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103c4"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/dealNotes/paginated:
    get:
      tags:
        - lender > dealNotes
      summary: getDealNotesPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","pinnedByUsers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"flagedByUser":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103c1"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/dealNotes/:
    get:
      tags:
        - lender > dealNotes
      summary: getDealNotes
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","pinnedByUsers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"flagedByUser":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103c2"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - lender > dealNotes
      summary: createDealNotes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deal: 63bd04b2342fde7a69846a5a
                pinnedByUsers:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                flagedByUser:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","pinnedByUsers":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"flagedByUser":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"id":"6419ab348f08bb22b97103c5"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/lenderProgram/:
    get:
      tags:
        - lender > lenderProgram
      summary: getLenderProgram
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderProgramType":"lorem","statesArray":["lorem","ipsum"],"minLoanSize":100,"maxLoanSize":100,"id":"6419ab348f08bb22b97103c6"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - lender > lenderProgram
      summary: createLenderProgram
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lenderProgramType: lorem
                statesArray:
                  - lorem
                  - ipsum
                minLoanSize: 100
                maxLoanSize: 100
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderProgramType":"lorem","statesArray":["lorem","ipsum"],"minLoanSize":100,"maxLoanSize":100,"id":"6419ab348f08bb22b97103c9"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/lenderProgram/paginated:
    get:
      tags:
        - lender > lenderProgram
      summary: getLenderProgramPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderProgramType":"lorem","statesArray":["lorem","ipsum"],"minLoanSize":100,"maxLoanSize":100,"id":"6419ab348f08bb22b97103c7"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/lenderProgram/{lenderProgramId}:
    get:
      tags:
        - lender > lenderProgram
      summary: getLenderProgramById
      parameters:
        - name: lenderProgramId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderProgramType":"lorem","statesArray":["lorem","ipsum"],"minLoanSize":100,"maxLoanSize":100,"id":"6419ab348f08bb22b97103c8"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - lender > lenderProgram
      summary: updateLenderProgram
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lenderProgramType: lorem
                statesArray:
                  - lorem
                  - ipsum
                minLoanSize: 100
                maxLoanSize: 100
      parameters:
        - name: lenderProgramId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderProgramType":"lorem","statesArray":["lorem","ipsum"],"minLoanSize":100,"maxLoanSize":100,"id":"6419ab348f08bb22b97103ca"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - lender > lenderProgram
      summary: deleteLenderProgramById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: lenderProgramId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/lendingInstitution/{lendingInstitutionId}:
    delete:
      tags:
        - lender > lendingInstitution
      summary: deleteLendingInstitutionById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: lendingInstitutionId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - lender > lendingInstitution
      summary: getLendingInstitutionById
      parameters:
        - name: lendingInstitutionId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderNameVisible":"lorem","lenderNameInternal":"lorem","lenderType":"lorem","lenderPrograms":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"contacts":"63bd04b2342fde7a69846a5a","id":"6419ab348f08bb22b97103cd"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - lender > lendingInstitution
      summary: updateLendingInstitution
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lenderNameVisible: lorem
                lenderNameInternal: lorem
                lenderType: lorem
                lenderPrograms:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                contacts: 63bd04b2342fde7a69846a5a
      parameters:
        - name: lendingInstitutionId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderNameVisible":"lorem","lenderNameInternal":"lorem","lenderType":"lorem","lenderPrograms":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"contacts":"63bd04b2342fde7a69846a5a","id":"6419ab348f08bb22b97103cf"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/lendingInstitution/paginated:
    get:
      tags:
        - lender > lendingInstitution
      summary: getLendingInstitutionPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderNameVisible":"lorem","lenderNameInternal":"lorem","lenderType":"lorem","lenderPrograms":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"contacts":"63bd04b2342fde7a69846a5a","id":"6419ab348f08bb22b97103cb"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/lendingInstitution/:
    get:
      tags:
        - lender > lendingInstitution
      summary: getLendingInstitution
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderNameVisible":"lorem","lenderNameInternal":"lorem","lenderType":"lorem","lenderPrograms":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"contacts":"63bd04b2342fde7a69846a5a","id":"6419ab348f08bb22b97103cc"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - lender > lendingInstitution
      summary: createLendingInstitution
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lenderNameVisible: lorem
                lenderNameInternal: lorem
                lenderType: lorem
                lenderPrograms:
                  - 63bd04b2342fde7a69846a5a
                  - 63bd04b2342fde7a69846a5a
                contacts: 63bd04b2342fde7a69846a5a
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lenderNameVisible":"lorem","lenderNameInternal":"lorem","lenderType":"lorem","lenderPrograms":["63bd04b2342fde7a69846a5a","63bd04b2342fde7a69846a5a"],"contacts":"63bd04b2342fde7a69846a5a","id":"6419ab348f08bb22b97103ce"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/lenderPlacement/:
    get:
      tags:
        - lender > lenderPlacement
      summary: getLenderPlacement
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lendingInstitution":"63bd04b2342fde7a69846a5a","lenderContact":"63bd04b2342fde7a69846a5a","notes":["lorem","ipsum"],"stage":"lorem","terms":"63bd04b2342fde7a69846a5a","termSheet":"lorem","id":"6419ab348f08bb22b97103d0"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - lender > lenderPlacement
      summary: createLenderPlacement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lendingInstitution: 63bd04b2342fde7a69846a5a
                lenderContact: 63bd04b2342fde7a69846a5a
                notes:
                  - lorem
                  - ipsum
                stage: lorem
                terms: 63bd04b2342fde7a69846a5a
                termSheet: lorem
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lendingInstitution":"63bd04b2342fde7a69846a5a","lenderContact":"63bd04b2342fde7a69846a5a","notes":["lorem","ipsum"],"stage":"lorem","terms":"63bd04b2342fde7a69846a5a","termSheet":"lorem","id":"6419ab348f08bb22b97103d3"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/lenderPlacement/{lenderPlacementId}:
    get:
      tags:
        - lender > lenderPlacement
      summary: getLenderPlacementById
      parameters:
        - name: lenderPlacementId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lendingInstitution":"63bd04b2342fde7a69846a5a","lenderContact":"63bd04b2342fde7a69846a5a","notes":["lorem","ipsum"],"stage":"lorem","terms":"63bd04b2342fde7a69846a5a","termSheet":"lorem","id":"6419ab348f08bb22b97103d1"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - lender > lenderPlacement
      summary: deleteLenderPlacementById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: lenderPlacementId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - lender > lenderPlacement
      summary: updateLenderPlacement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                lendingInstitution: 63bd04b2342fde7a69846a5a
                lenderContact: 63bd04b2342fde7a69846a5a
                notes:
                  - lorem
                  - ipsum
                stage: lorem
                terms: 63bd04b2342fde7a69846a5a
                termSheet: lorem
      parameters:
        - name: lenderPlacementId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lendingInstitution":"63bd04b2342fde7a69846a5a","lenderContact":"63bd04b2342fde7a69846a5a","notes":["lorem","ipsum"],"stage":"lorem","terms":"63bd04b2342fde7a69846a5a","termSheet":"lorem","id":"6419ab348f08bb22b97103d4"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/lenderPlacement/paginated:
    get:
      tags:
        - lender > lenderPlacement
      summary: getLenderPlacementPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"lendingInstitution":"63bd04b2342fde7a69846a5a","lenderContact":"63bd04b2342fde7a69846a5a","notes":["lorem","ipsum"],"stage":"lorem","terms":"63bd04b2342fde7a69846a5a","termSheet":"lorem","id":"6419ab348f08bb22b97103d2"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/terms/:
    get:
      tags:
        - lender > terms
      summary: getTerms
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"initialFunding":100,"futureFunding":100,"totalLoanAmount":100,"interestRateType":"lorem","interestRateIndexValue":"lorem","interestRateIndexDate":"YYYY-MM-DD","spread":100,"totalRate":"lorem","rateNotes":"lorem","initialTerm":"lorem","extensionOptionOne":"lorem","extensionFee":"lorem","interestRateIndex":"lorem","extensionOptionTwo":"lorem","LTC":"lorem","id":"6419ab348f08bb22b97103d5"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - lender > terms
      summary: createTerms
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                initialFunding: 100
                futureFunding: 100
                totalLoanAmount: 100
                interestRateType: lorem
                interestRateIndexValue: lorem
                interestRateIndexDate: YYYY-MM-DD
                spread: 100
                totalRate: lorem
                rateNotes: lorem
                initialTerm: lorem
                extensionOptionOne: lorem
                extensionFee: lorem
                interestRateIndex: lorem
                extensionOptionTwo: lorem
                LTC: lorem
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"initialFunding":100,"futureFunding":100,"totalLoanAmount":100,"interestRateType":"lorem","interestRateIndexValue":"lorem","interestRateIndexDate":"YYYY-MM-DD","spread":100,"totalRate":"lorem","rateNotes":"lorem","initialTerm":"lorem","extensionOptionOne":"lorem","extensionFee":"lorem","interestRateIndex":"lorem","extensionOptionTwo":"lorem","LTC":"lorem","id":"6419ab348f08bb22b97103d6"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/terms/{termsId}:
    delete:
      tags:
        - lender > terms
      summary: deleteTermsById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: termsId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - lender > terms
      summary: updateTerms
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                initialFunding: 100
                futureFunding: 100
                totalLoanAmount: 100
                interestRateType: lorem
                interestRateIndexValue: lorem
                interestRateIndexDate: YYYY-MM-DD
                spread: 100
                totalRate: lorem
                rateNotes: lorem
                initialTerm: lorem
                extensionOptionOne: lorem
                extensionFee: lorem
                interestRateIndex: lorem
                extensionOptionTwo: lorem
                LTC: lorem
      parameters:
        - name: termsId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"initialFunding":100,"futureFunding":100,"totalLoanAmount":100,"interestRateType":"lorem","interestRateIndexValue":"lorem","interestRateIndexDate":"YYYY-MM-DD","spread":100,"totalRate":"lorem","rateNotes":"lorem","initialTerm":"lorem","extensionOptionOne":"lorem","extensionFee":"lorem","interestRateIndex":"lorem","extensionOptionTwo":"lorem","LTC":"lorem","id":"6419ab348f08bb22b97103d7"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/lenderContact/:
    get:
      tags:
        - lender > lenderContact
      summary: getLenderContact
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"firstName":"lorem","lastName":"lorem","nickname":"lorem","phoneNumberDirect":"lorem","phoneNumberOffice":"lorem","phoneNumberCell":"lorem","title":"lorem","city":"lorem","note":"lorem","state":"lorem","id":"6419ab348f08bb22b97103d8"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - lender > lenderContact
      summary: createLenderContact
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: lorem
                lastName: lorem
                nickname: lorem
                phoneNumberDirect: lorem
                phoneNumberOffice: lorem
                phoneNumberCell: lorem
                title: lorem
                city: lorem
                note: lorem
                state: lorem
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"firstName":"lorem","lastName":"lorem","nickname":"lorem","phoneNumberDirect":"lorem","phoneNumberOffice":"lorem","phoneNumberCell":"lorem","title":"lorem","city":"lorem","note":"lorem","state":"lorem","id":"6419ab348f08bb22b97103da"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/lenderContact/{lenderContactId}:
    delete:
      tags:
        - lender > lenderContact
      summary: deleteLenderContactById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: lenderContactId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - lender > lenderContact
      summary: getLenderContactById
      parameters:
        - name: lenderContactId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"firstName":"lorem","lastName":"lorem","nickname":"lorem","phoneNumberDirect":"lorem","phoneNumberOffice":"lorem","phoneNumberCell":"lorem","title":"lorem","city":"lorem","note":"lorem","state":"lorem","id":"6419ab348f08bb22b97103d9"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - lender > lenderContact
      summary: updateLenderContact
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: lorem
                lastName: lorem
                nickname: lorem
                phoneNumberDirect: lorem
                phoneNumberOffice: lorem
                phoneNumberCell: lorem
                title: lorem
                city: lorem
                note: lorem
                state: lorem
      parameters:
        - name: lenderContactId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"firstName":"lorem","lastName":"lorem","nickname":"lorem","phoneNumberDirect":"lorem","phoneNumberOffice":"lorem","phoneNumberCell":"lorem","title":"lorem","city":"lorem","note":"lorem","state":"lorem","id":"6419ab348f08bb22b97103db"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/lenderContact/paginated:
    get:
      tags:
        - lender > lenderContact
      summary: getLenderContactPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"firstName":"lorem","lastName":"lorem","nickname":"lorem","phoneNumberDirect":"lorem","phoneNumberOffice":"lorem","phoneNumberCell":"lorem","title":"lorem","city":"lorem","note":"lorem","state":"lorem","id":"6419ab348f08bb22b97103dc"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/emailTemplate/:
    get:
      tags:
        - lender > emailTemplate
      summary: getEmailTemplate
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"subject":"lorem","ccList":["lorem","ipsum"],"textBox":"lorem","emailAttachments":"lorem","id":"6419ab348f08bb22b97103dd"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - lender > emailTemplate
      summary: createEmailTemplate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                subject: lorem
                ccList:
                  - lorem
                  - ipsum
                textBox: lorem
                emailAttachments: lorem
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"subject":"lorem","ccList":["lorem","ipsum"],"textBox":"lorem","emailAttachments":"lorem","id":"6419ab348f08bb22b97103de"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/emailTemplate/paginated:
    get:
      tags:
        - lender > emailTemplate
      summary: getEmailTemplatePaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"subject":"lorem","ccList":["lorem","ipsum"],"textBox":"lorem","emailAttachments":"lorem","id":"6419ab348f08bb22b97103df"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/emailTemplate/{emailTemplateId}:
    get:
      tags:
        - lender > emailTemplate
      summary: getEmailTemplateById
      parameters:
        - name: emailTemplateId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"subject":"lorem","ccList":["lorem","ipsum"],"textBox":"lorem","emailAttachments":"lorem","id":"6419ab348f08bb22b97103e0"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - lender > emailTemplate
      summary: deleteEmailTemplateById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: emailTemplateId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - lender > emailTemplate
      summary: updateEmailTemplate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                subject: lorem
                ccList:
                  - lorem
                  - ipsum
                textBox: lorem
                emailAttachments: lorem
      parameters:
        - name: emailTemplateId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"subject":"lorem","ccList":["lorem","ipsum"],"textBox":"lorem","emailAttachments":"lorem","id":"6419ab348f08bb22b97103e1"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/activityLog/{activityLogId}:
    delete:
      tags:
        - lender > activityLog
      summary: deleteActivityLogById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: activityLogId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - lender > activityLog
      summary: getActivityLogById
      parameters:
        - name: activityLogId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","update":"lorem","id":"6419ab348f08bb22b97103e3"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - lender > activityLog
      summary: updateActivityLog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deal: 63bd04b2342fde7a69846a5a
                update: lorem
      parameters:
        - name: activityLogId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","update":"lorem","id":"6419ab348f08bb22b97103e5"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/activityLog/paginated:
    get:
      tags:
        - lender > activityLog
      summary: getActivityLogPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","update":"lorem","id":"6419ab348f08bb22b97103e2"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/activityLog/:
    get:
      tags:
        - lender > activityLog
      summary: getActivityLog
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","update":"lorem","id":"6419ab348f08bb22b97103e4"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - lender > activityLog
      summary: createActivityLog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                deal: 63bd04b2342fde7a69846a5a
                update: lorem
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"deal":"63bd04b2342fde7a69846a5a","update":"lorem","id":"6419ab348f08bb22b97103e6"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/task/{taskId}:
    delete:
      tags:
        - lender > task
      summary: deleteTaskById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: taskId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - lender > task
      summary: getTaskById
      parameters:
        - name: taskId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"taskQuestion":"lorem","askingParty":"63bd04b2342fde7a69846a5a","taskAnswer":"lorem","taskDocuments":["lorem","ipsum"],"id":"6419ab348f08bb22b97103e7"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - lender > task
      summary: updateTask
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                taskQuestion: lorem
                askingParty: 63bd04b2342fde7a69846a5a
                taskAnswer: lorem
                taskDocuments:
                  - lorem
                  - ipsum
      parameters:
        - name: taskId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"taskQuestion":"lorem","askingParty":"63bd04b2342fde7a69846a5a","taskAnswer":"lorem","taskDocuments":["lorem","ipsum"],"id":"6419ab348f08bb22b97103eb"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/task/paginated:
    get:
      tags:
        - lender > task
      summary: getTaskPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"taskQuestion":"lorem","askingParty":"63bd04b2342fde7a69846a5a","taskAnswer":"lorem","taskDocuments":["lorem","ipsum"],"id":"6419ab348f08bb22b97103e8"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/task/:
    post:
      tags:
        - lender > task
      summary: createTask
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                taskQuestion: lorem
                askingParty: 63bd04b2342fde7a69846a5a
                taskAnswer: lorem
                taskDocuments:
                  - lorem
                  - ipsum
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"taskQuestion":"lorem","askingParty":"63bd04b2342fde7a69846a5a","taskAnswer":"lorem","taskDocuments":["lorem","ipsum"],"id":"6419ab348f08bb22b97103e9"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    get:
      tags:
        - lender > task
      summary: getTask
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"taskQuestion":"lorem","askingParty":"63bd04b2342fde7a69846a5a","taskAnswer":"lorem","taskDocuments":["lorem","ipsum"],"id":"6419ab348f08bb22b97103ea"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/dealDocument/paginated:
    get:
      tags:
        - lender > dealDocument
      summary: getDealDocumentPaginated
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"documentType":"lorem","file":"lorem","fileName":"lorem","id":"6419ab348f08bb22b97103ec"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/dealDocument/:
    get:
      tags:
        - lender > dealDocument
      summary: getDealDocument
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"documentType":"lorem","file":"lorem","fileName":"lorem","id":"6419ab348f08bb22b97103ed"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    post:
      tags:
        - lender > dealDocument
      summary: createDealDocument
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                documentType: lorem
                file: lorem
                fileName: lorem
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"documentType":"lorem","file":"lorem","fileName":"lorem","id":"6419ab348f08bb22b97103ef"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /v1/lender/dealDocument/{dealDocumentId}:
    get:
      tags:
        - lender > dealDocument
      summary: getDealDocumentById
      parameters:
        - name: dealDocumentId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"documentType":"lorem","file":"lorem","fileName":"lorem","id":"6419ab348f08bb22b97103ee"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    put:
      tags:
        - lender > dealDocument
      summary: updateDealDocument
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                documentType: lorem
                file: lorem
                fileName: lorem
      parameters:
        - name: dealDocumentId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: >-
                {"documentType":"lorem","file":"lorem","fileName":"lorem","id":"6419ab348f08bb22b97103f0"}
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
    delete:
      tags:
        - lender > dealDocument
      summary: deleteDealDocumentById
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: Bearer {{authToken}}
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: cache-control
          in: header
          schema:
            type: string
          example: no-cache
        - name: dealDocumentId
          in: path
          schema:
            type: string
          required: true
      responses:
        '404':
          description: Not Found
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer {{authToken}}
            Content-Type:
              schema:
                type: string
                example: application/json
            cache-control:
              schema:
                type: string
                example: no-cache
          content:
            text/plain:
              schema:
                type: string
              example: '{"code":"404","message":"no route found","stack":""}'
  /health:
    get:
      tags:
        - Health
      summary: Health check
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '15'
            ETag:
              schema:
                type: string
                example: W/"f-RQ8OySFd+KR+AvtJ7qImjtT0D/0"
            Date:
              schema:
                type: string
                example: Mon, 20 Feb 2023 12:21:40 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                status: UP
  /metrics:
    get:
      tags:
        - Health
      summary: Metrics check
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '132'
            ETag:
              schema:
                type: string
                example: W/"84-BLyLMLazZzjsd/9k2NOD4pb9yoI"
            Date:
              schema:
                type: string
                example: Mon, 20 Feb 2023 12:28:35 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                mem:
                  rss: 73568256
                  heapTotal: 91303936
                  heapUsed: 87017248
                  external: 19915183
                  arrayBuffers: 18328199
                uptime: 170.688891044
  /info:
    get:
      tags:
        - Health
      summary: info
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '75'
            ETag:
              schema:
                type: string
                example: W/"4b-DlEW7PWR4kNRj1OGxGFAuGxS4Ck"
            Date:
              schema:
                type: string
                example: Mon, 20 Feb 2023 12:28:40 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                build:
                  name: p1
                  description: Generated Project
                  version: 1.0.0
