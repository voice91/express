"use strict";

var _mongoose = _interopRequireDefault(require("mongoose"));
var _mongoosePaginateV = _interopRequireDefault(require("mongoose-paginate-v2"));
var _enum = _interopRequireDefault(require("./enum.model"));
var _plugins = require("./plugins");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
/**
 * This file is generated by Appinvento, also it can be overwritten by Appinvento.
 * If you want to add the new fields to your schema then go to the app.appinvento.io,
 * select your project then select model and click on + icon to add new fields.
 * For more checkout the docs at "docs.appinvento.io/product-guides/create-a-new-collection-field"
 */

var PhotosSchema = new _mongoose["default"].Schema({
  url: {
    type: String
  },
  fileName: {
    type: String
  }
});
var LendingInstitutionSchema = new _mongoose["default"].Schema({
  /**
   * created By
   * */
  createdBy: {
    type: _mongoose["default"].Schema.Types.ObjectId,
    ref: 'User'
  },
  /**
   * updated By
   * */
  updatedBy: {
    type: _mongoose["default"].Schema.Types.ObjectId,
    ref: 'User'
  },
  /**
   * The name of the bank (there are some banks with same name so will need another field to differentiate in the database)
   * */
  lenderNameVisible: {
    type: String,
    required: true
  },
  /**
   * The internal name in the database to avoid potential naming conflicts.
   * */
  lenderNameInternal: {
    type: String
  },
  /**
   * Type of lender
   * */
  lenderType: {
    type: String,
    "enum": Object.values(_enum["default"].EnumLenderTypeOfLendingInstitution),
    required: true
  },
  /**
   * logo of lender
   * */
  logo: {
    type: PhotosSchema
  },
  headquarter: {
    type: String
  },
  website: {
    type: String
  },
  description: {
    type: String
  },
  creRanking: {
    type: Number
  }
}, {
  timestamps: {
    createdAt: true,
    updatedAt: true
  },
  autoCreate: true
});
LendingInstitutionSchema.virtual('lenderProgram', {
  ref: 'LenderProgram',
  localField: '_id',
  foreignField: 'lenderInstitute'
});
LendingInstitutionSchema.plugin(_plugins.toJSON);
LendingInstitutionSchema.plugin(_mongoosePaginateV["default"]);
LendingInstitutionSchema.plugin(_plugins.softDelete, {
  isSoftDeleteAddon: true,
  overrideMethods: 'all',
  deleted: 'isDeleted',
  deletedBy: 'deletedBy',
  deletedAt: 'deletedAt'
});
var LendingInstitutionModel = _mongoose["default"].models.LendingInstitution || _mongoose["default"].model('LendingInstitution', LendingInstitutionSchema, 'LendingInstitution');
module.exports = LendingInstitutionModel;