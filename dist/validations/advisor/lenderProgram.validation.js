"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updateLenderProgram = exports.paginatedLenderProgram = exports.listLenderProgramByInstitute = exports.getLenderProgramById = exports.getLenderProgram = exports.editLender = exports.deleteLenderProgramById = exports.createLenderProgram = exports.addLender = void 0;
var _joi = _interopRequireDefault(require("joi"));
var _enum = _interopRequireDefault(require("../../models/enum.model"));
var _Joi$string, _Joi$string2, _Joi$string3, _Joi$string4, _Joi$string5, _Joi$string6, _Joi$string7, _Joi$string8, _Joi$string9, _Joi$string10, _Joi$string11, _Joi$string12, _Joi$string13, _Joi$string14, _Joi$string15, _Joi$string16, _Joi$string17, _Joi$string18;
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; } /**
 * This file is generated by Appinvento, also it can be overwritten by Appinvento.
 * Only fields name will be overwritten, if the field name will be changed.
 */
_joi["default"].objectId = require('joi-objectid')(_joi["default"]);
var createLenderProgram = exports.createLenderProgram = {
  body: _joi["default"].object().keys({
    lenderProgramType: _joi["default"].string().required(),
    statesArray: _joi["default"].array().items((_Joi$string = _joi["default"].string()).valid.apply(_Joi$string, _toConsumableArray(Object.values(_enum["default"].EnumStatesOfDeal)))),
    statesArrTag: _joi["default"].array().items(_joi["default"].number().integer()).allow('')["default"](1),
    minLoanSize: _joi["default"].number().integer().min(100000).max(1000000000).allow(null),
    minLoanTag: _joi["default"].number().integer()["default"](1),
    maxLoanSize: _joi["default"].number().integer().min(100000).max(1000000000).allow(null),
    maxLoanTag: _joi["default"].number().integer()["default"](1),
    propertyType: _joi["default"].array().items((_Joi$string2 = _joi["default"].string()).valid.apply(_Joi$string2, _toConsumableArray(Object.values(_enum["default"].EnumAssetTypeOfDeal)))),
    propTypeArrTag: _joi["default"].array().items(_joi["default"].number().integer()).allow('')["default"](1),
    doesNotLandOn: _joi["default"].array().items((_Joi$string3 = _joi["default"].string()).valid.apply(_Joi$string3, _toConsumableArray(Object.values(_enum["default"].EnumAssetTypeOfDeal)))),
    doesNotLandOnArrTag: _joi["default"].array().items(_joi["default"].number().integer()).allow('')["default"](1),
    loanType: _joi["default"].array().items((_Joi$string4 = _joi["default"].string()).valid.apply(_Joi$string4, _toConsumableArray(Object.values(_enum["default"].EnumLoanTypeOfDeal)))),
    loanTypeArrTag: _joi["default"].array().items(_joi["default"].number().integer()).allow('')["default"](1),
    lenderInstitute: _joi["default"].objectId().required(),
    indexUsed: _joi["default"].string().allow(''),
    spreadEstimate: _joi["default"].string().allow(''),
    counties: _joi["default"].array().items(_joi["default"].string()).allow(null),
    recourseRequired: _joi["default"].string()["default"]('No').allow(''),
    nonRecourseLTV: _joi["default"].string().allow('')
  })
};
var addLender = exports.addLender = {
  body: _joi["default"].object().keys({
    lender: _joi["default"].object().keys({
      lenderNameVisible: _joi["default"].string().required(),
      lenderType: (_Joi$string5 = _joi["default"].string()).valid.apply(_Joi$string5, _toConsumableArray(Object.values(_enum["default"].EnumLenderTypeOfLendingInstitution))).required()
    }),
    lenderProgram: _joi["default"].array().items(_joi["default"].object().keys({
      lenderProgramType: _joi["default"].string(),
      statesArray: _joi["default"].array().items((_Joi$string6 = _joi["default"].string()).valid.apply(_Joi$string6, _toConsumableArray(Object.values(_enum["default"].EnumStatesOfDeal)))),
      statesArrTag: _joi["default"].array().items(_joi["default"].number().integer()).allow('')["default"](1),
      minLoanSize: _joi["default"].number().integer().min(100000).max(1000000000).allow(null),
      minLoanTag: _joi["default"].number().integer().allow('')["default"](1),
      maxLoanSize: _joi["default"].number().integer().min(100000).max(1000000000).allow(null),
      maxLoanTag: _joi["default"].number().integer().allow('')["default"](1),
      propertyType: _joi["default"].array().items((_Joi$string7 = _joi["default"].string()).valid.apply(_Joi$string7, _toConsumableArray(Object.values(_enum["default"].EnumAssetTypeOfDeal)))),
      propTypeArrTag: _joi["default"].array().items(_joi["default"].number().integer()).allow('')["default"](1),
      doesNotLandOn: _joi["default"].array().items((_Joi$string8 = _joi["default"].string()).valid.apply(_Joi$string8, _toConsumableArray(Object.values(_enum["default"].EnumAssetTypeOfDeal)))),
      doesNotLandOnArrTag: _joi["default"].array().items(_joi["default"].number().integer()).allow('')["default"](1),
      loanType: _joi["default"].array().items((_Joi$string9 = _joi["default"].string()).valid.apply(_Joi$string9, _toConsumableArray(Object.values(_enum["default"].EnumLoanTypeOfDeal)))),
      loanTypeArrTag: _joi["default"].array().items(_joi["default"].number().integer()).allow('')["default"](1),
      indexUsed: _joi["default"].string().allow('').allow(null),
      spreadEstimate: _joi["default"].number().allow('').allow(null),
      counties: _joi["default"].array().items(_joi["default"].string()).allow(null),
      recourseRequired: _joi["default"].string()["default"]('No').allow('').allow(null),
      nonRecourseLTV: _joi["default"].string().allow('').allow(null)
    }))
  })
};
var editLender = exports.editLender = {
  body: _joi["default"].object().keys({
    lender: _joi["default"].object().keys({
      lenderNameVisible: _joi["default"].string(),
      lenderType: (_Joi$string10 = _joi["default"].string()).valid.apply(_Joi$string10, _toConsumableArray(Object.values(_enum["default"].EnumLenderTypeOfLendingInstitution)))
    }),
    lenderProgram: _joi["default"].array().items(_joi["default"].object().keys({
      id: _joi["default"].objectId().allow(''),
      lenderProgramType: _joi["default"].string(),
      statesArray: _joi["default"].array().items((_Joi$string11 = _joi["default"].string()).valid.apply(_Joi$string11, _toConsumableArray(Object.values(_enum["default"].EnumStatesOfDeal)))),
      statesArrTag: _joi["default"].array().items(_joi["default"].number().integer()).allow('')["default"](1),
      minLoanSize: _joi["default"].number().integer().min(100000).max(1000000000).allow(null),
      minLoanTag: _joi["default"].number().integer().allow('')["default"](1),
      maxLoanSize: _joi["default"].number().integer().min(100000).max(1000000000).allow(null),
      maxLoanTag: _joi["default"].number().integer().allow('')["default"](1),
      propertyType: _joi["default"].array().items((_Joi$string12 = _joi["default"].string()).valid.apply(_Joi$string12, _toConsumableArray(Object.values(_enum["default"].EnumAssetTypeOfDeal)))),
      propTypeArrTag: _joi["default"].array().items(_joi["default"].number().integer()).allow('')["default"](1),
      doesNotLandOn: _joi["default"].array().items((_Joi$string13 = _joi["default"].string()).valid.apply(_Joi$string13, _toConsumableArray(Object.values(_enum["default"].EnumAssetTypeOfDeal)))),
      doesNotLandOnArrTag: _joi["default"].array().items(_joi["default"].number().integer()).allow('')["default"](1),
      loanType: _joi["default"].array().items((_Joi$string14 = _joi["default"].string()).valid.apply(_Joi$string14, _toConsumableArray(Object.values(_enum["default"].EnumLoanTypeOfDeal)))),
      loanTypeArrTag: _joi["default"].array().items(_joi["default"].number().integer()).allow('')["default"](1),
      indexUsed: _joi["default"].string().allow('').allow(null),
      spreadEstimate: _joi["default"].number().allow('').allow(null),
      counties: _joi["default"].array().items(_joi["default"].string().allow(null)).allow(null),
      recourseRequired: _joi["default"].string()["default"]('No').allow('').allow(null),
      nonRecourseLTV: _joi["default"].string().allow('').allow(null),
      lenderInstitute: _joi["default"].objectId()
    }))
  }),
  params: _joi["default"].object().keys({
    lenderInstitute: _joi["default"].objectId().required()
  })
};
var updateLenderProgram = exports.updateLenderProgram = {
  body: _joi["default"].object().keys({
    lenderProgramType: _joi["default"].string(),
    statesArray: _joi["default"].array().items((_Joi$string15 = _joi["default"].string()).valid.apply(_Joi$string15, _toConsumableArray(Object.values(_enum["default"].EnumStatesOfDeal)))),
    statesArrTag: _joi["default"].array().items(_joi["default"].number().integer()).allow(''),
    minLoanSize: _joi["default"].number().integer(),
    minLoanTag: _joi["default"].number().integer(),
    maxLoanSize: _joi["default"].number().integer(),
    maxLoanTag: _joi["default"].number().integer(),
    propertyType: _joi["default"].array().items((_Joi$string16 = _joi["default"].string()).valid.apply(_Joi$string16, _toConsumableArray(Object.values(_enum["default"].EnumAssetTypeOfDeal)))),
    propTypeArrTag: _joi["default"].array().items(_joi["default"].number().integer()).allow(''),
    doesNotLandOn: _joi["default"].array().items((_Joi$string17 = _joi["default"].string()).valid.apply(_Joi$string17, _toConsumableArray(Object.values(_enum["default"].EnumAssetTypeOfDeal)))),
    doesNotLandOnArrTag: _joi["default"].array().items(_joi["default"].number().integer()).allow(''),
    loanType: _joi["default"].array().items((_Joi$string18 = _joi["default"].string()).valid.apply(_Joi$string18, _toConsumableArray(Object.values(_enum["default"].EnumLoanTypeOfDeal)))),
    loanTypeArrTag: _joi["default"].array().items(_joi["default"].number().integer()).allow(''),
    indexUsed: _joi["default"].string().allow(''),
    spreadEstimate: _joi["default"].string().allow(''),
    counties: _joi["default"].array().items(_joi["default"].string()).allow(null),
    recourseRequired: _joi["default"].string()["default"]('No').allow(''),
    nonRecourseLTV: _joi["default"].string().allow('')
  }),
  params: _joi["default"].object().keys({
    lenderProgramId: _joi["default"].objectId().required()
  })
};
var getLenderProgramById = exports.getLenderProgramById = {
  params: _joi["default"].object().keys({
    lenderProgramId: _joi["default"].objectId().required()
  })
};
var deleteLenderProgramById = exports.deleteLenderProgramById = {
  params: _joi["default"].object().keys({
    lenderProgramId: _joi["default"].objectId().required()
  })
};
var getLenderProgram = exports.getLenderProgram = {
  body: _joi["default"].object().keys({}).unknown(true)
};
var paginatedLenderProgram = exports.paginatedLenderProgram = {
  body: _joi["default"].object().keys({}).unknown(true),
  query: _joi["default"].object().keys({
    page: _joi["default"].number()["default"](1),
    limit: _joi["default"].number()["default"](10).max(100),
    loanType: _joi["default"].string(),
    propertyType: _joi["default"].string(),
    statesArray: _joi["default"].string(),
    lenderInstitute: _joi["default"].string(),
    loanSize: _joi["default"].number(),
    lenderType: _joi["default"].string(),
    lenderNameVisible: _joi["default"].string(),
    sort: _joi["default"].string().valid('loanType', 'propertyType', 'statesArray', 'lenderInstitute', 'loanSize', 'lenderType', 'lenderNameVisible')
  })
};
var listLenderProgramByInstitute = exports.listLenderProgramByInstitute = {
  params: _joi["default"].object().keys({
    lenderInstitute: _joi["default"].objectId().required()
  })
};