"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.verifyEmail = exports.sendVerifyEmail = exports.resetPassword = exports.register = exports.login = exports.forgotPassword = exports.enforcePassword = void 0;
var _joi = _interopRequireDefault(require("joi"));
var _enum = _interopRequireDefault(require("../../models/enum.model"));
var _config = _interopRequireDefault(require("../../config/config"));
var _Joi$string, _Joi$string2, _Joi$string3, _Joi$string4;
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; } /**
 * This file is generated by Appinvento, also it can be overwritten by Appinvento.
 * Only fields name will be overwritten, if the field name will be changed.
 */
var register = exports.register = {
  body: _joi["default"].object().keys({
    // Common fields for the registration process
    email: _joi["default"].string().email(),
    password: _joi["default"].string(),
    firstName: _joi["default"].string(),
    lastName: _joi["default"].string(),
    phoneNumber: _joi["default"].string(),
    companyName: _joi["default"].string(),
    companyAddress: _joi["default"].string(),
    role: (_Joi$string = _joi["default"].string()).valid.apply(_Joi$string, _toConsumableArray(Object.values(_enum["default"].EnumRoleOfUser))),
    city: _joi["default"].string(),
    state: (_Joi$string2 = _joi["default"].string()).valid.apply(_Joi$string2, _toConsumableArray(Object.values(_enum["default"].EnumStatesOfDeal))),
    zipcode: _joi["default"].number().integer().min(10000).max(99999),
    emailPresentingPostmark: _joi["default"].bool()["default"](false),
    isRedirectedFromSendDeal: _joi["default"].bool()
  })
  // Condition: Check if isRedirectedFromSendDeal exists in the request body
  .when(_joi["default"].object({
    isRedirectedFromSendDeal: _joi["default"].exist()
  }).unknown(), {
    // If the condition is met (isRedirectedFromSendDeal exists)
    then: _joi["default"].object({
      email: _joi["default"].string().required().email(),
      password: _joi["default"].string().required()
    }),
    // If the condition is not met (isRedirectedFromSendDeal doesn't exist)
    otherwise: _joi["default"].object({
      email: _joi["default"].string().required().email(),
      password: _joi["default"].string().required(),
      firstName: _joi["default"].string().required(),
      lastName: _joi["default"].string().required(),
      companyName: _joi["default"].string().required(),
      city: _joi["default"].string(),
      state: (_Joi$string3 = _joi["default"].string()).valid.apply(_Joi$string3, _toConsumableArray(Object.values(_enum["default"].EnumStatesOfDeal))),
      zipcode: _joi["default"].number().integer().min(10000).max(99999)
    })
  })
};
var login = exports.login = {
  body: _joi["default"].object().keys({
    email: _joi["default"].string().required(),
    password: _joi["default"].string().required(),
    deviceToken: _joi["default"].string().allow(''),
    platform: (_Joi$string4 = _joi["default"].string()).valid.apply(_Joi$string4, _toConsumableArray(Object.values(_enum["default"].EnumPlatformOfDeviceToken)))
  })
};

/**
 * When User is loggedIn using social login for the first time, then he can enforce his password
 * @type {{body: Joi.ObjectSchema<any>}}
 */
var enforcePassword = exports.enforcePassword = {
  body: _joi["default"].object().keys({
    password: _joi["default"].string().required()
  })
};
var verifyEmail = exports.verifyEmail = {
  query: _joi["default"].object().keys({
    token: _joi["default"].string().required()
  })
};
var sendVerifyEmail = exports.sendVerifyEmail = {
  body: _joi["default"].object().keys({
    email: _joi["default"].string().email().required()
  })
};

/**
 * validation for sending forgot password email to the user
 */
var forgotPassword = exports.forgotPassword = {
  body: _joi["default"].object().keys({
    email: _joi["default"].string().email().required()
  })
};

/**
 * validation for setting the new password
 */
var resetPassword = exports.resetPassword = {
  body: _joi["default"].object().keys({
    password: _joi["default"].string().required(),
    email: _joi["default"].string().email().required(),
    code: _joi["default"].string().length(_config["default"].jwt.resetPasswordCodeSize).required()
  })
};