"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updateDealSummary = exports.importFileForDealSummary = exports.getDealSummaryById = exports.exportFileForDealSummary = exports.createDealSummary = void 0;
var _joi = _interopRequireDefault(require("joi"));
var _enum = _interopRequireDefault(require("../../models/enum.model"));
var _Joi$string, _Joi$string2, _Joi$string3;
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; } /**
 * This file is generated by Appinvento, also it can be overwritten by Appinvento.
 * Only fields name will be overwritten, if the field name will be changed.
 */
_joi["default"].objectId = require('joi-objectid')(_joi["default"]);
var PhotosSchema = _joi["default"].object().keys({
  url: _joi["default"].string(),
  fileName: _joi["default"].string()
});

// dynamic field schema for repetitive code in create and update deal summary
var dealSummaryDynamicFieldSchema = _joi["default"].object().keys({
  key: _joi["default"].string(),
  value: _joi["default"].any(),
  type: (_Joi$string = _joi["default"].string()).valid.apply(_Joi$string, _toConsumableArray(Object.values(_enum["default"].EnumOfTypeOfValue)))
});

// dynamic field schema for repetitive code in create and update financial summary in deal summary
var financialSummaryDynamicFieldSchema = _joi["default"].object().keys({
  key: _joi["default"].string(),
  stabilizedValue: _joi["default"].string(),
  inPlaceValue: _joi["default"].string(),
  stabilizedType: (_Joi$string2 = _joi["default"].string()).valid.apply(_Joi$string2, _toConsumableArray(Object.values(_enum["default"].EnumOfTypeOfValue))),
  inPlaceType: (_Joi$string3 = _joi["default"].string()).valid.apply(_Joi$string3, _toConsumableArray(Object.values(_enum["default"].EnumOfTypeOfValue)))
});

// eslint-disable-next-line import/prefer-default-export
var importFileForDealSummary = exports.importFileForDealSummary = {
  query: _joi["default"].object().keys({
    url: _joi["default"].string().required(),
    deal: _joi["default"].objectId().required()
  })
};
var exportFileForDealSummary = exports.exportFileForDealSummary = {
  body: _joi["default"].object().keys({
    url: _joi["default"].string().required(),
    dealSummary: _joi["default"].objectId().required()
  })
};
var getDealSummaryById = exports.getDealSummaryById = {
  params: _joi["default"].object().keys({
    dealSummaryId: _joi["default"].objectId().required()
  })
};
var createDealSummary = exports.createDealSummary = {
  body: _joi["default"].object().keys({
    propertySummary: _joi["default"].array().items(dealSummaryDynamicFieldSchema),
    dealMetrics: _joi["default"].array().items(dealSummaryDynamicFieldSchema),
    financingRequest: _joi["default"].array().items(dealSummaryDynamicFieldSchema),
    sourcesAndUses: _joi["default"].object().keys({
      sources: _joi["default"].array().items(dealSummaryDynamicFieldSchema),
      uses: _joi["default"].array().items(dealSummaryDynamicFieldSchema)
    }),
    rentRollSummary: _joi["default"].array().items(_joi["default"].array().items(dealSummaryDynamicFieldSchema)),
    financialSummary: _joi["default"].object().keys({
      revenue: _joi["default"].array().items(financialSummaryDynamicFieldSchema),
      expenses: _joi["default"].array().items(financialSummaryDynamicFieldSchema)
    }),
    executiveSummary: _joi["default"].string(),
    url: _joi["default"].string(),
    dealHighLights: _joi["default"].array().items(_joi["default"].string()),
    marketSummary: _joi["default"].string(),
    sponserOverview: _joi["default"].string(),
    deal: _joi["default"].objectId().required(),
    mainPhoto: PhotosSchema,
    otherPhotos: _joi["default"].array().items(PhotosSchema),
    map: _joi["default"].object().keys({
      lat: _joi["default"].number(),
      lng: _joi["default"].number()
    }),
    documents: _joi["default"].array().items(PhotosSchema)
  })
};
var updateDealSummary = exports.updateDealSummary = {
  body: _joi["default"].object().keys({
    propertySummary: _joi["default"].array().items(dealSummaryDynamicFieldSchema).allow(''),
    dealMetrics: _joi["default"].array().items(dealSummaryDynamicFieldSchema).allow(''),
    financingRequest: _joi["default"].array().items(dealSummaryDynamicFieldSchema).allow(''),
    sourcesAndUses: _joi["default"].object().keys({
      sources: _joi["default"].array().items(dealSummaryDynamicFieldSchema),
      uses: _joi["default"].array().items(dealSummaryDynamicFieldSchema)
    }).allow(''),
    rentRollSummary: _joi["default"].array().items(_joi["default"].array().items(dealSummaryDynamicFieldSchema)).allow(''),
    financialSummary: _joi["default"].object().keys({
      revenue: _joi["default"].array().items(financialSummaryDynamicFieldSchema),
      expenses: _joi["default"].array().items(financialSummaryDynamicFieldSchema)
    }).allow(''),
    executiveSummary: _joi["default"].string().allow(''),
    dealHighLights: _joi["default"].array().items(_joi["default"].string()).allow(''),
    marketSummary: _joi["default"].string().allow(''),
    sponserOverview: _joi["default"].string(),
    url: _joi["default"].string(),
    mainPhoto: PhotosSchema,
    otherPhotos: _joi["default"].array().items(PhotosSchema),
    map: _joi["default"].object().keys({
      lat: _joi["default"].number(),
      lng: _joi["default"].number()
    }),
    documents: _joi["default"].array().items(PhotosSchema)
    // TODO: Need to implement this for custom field
    // dynamicField: Joi.array().items(
    //   Joi.object().keys({
    //     name: Joi.string(),
    //     type: Joi.string().valid(...Object.values(enumFields.EnumOfDynamicFieldType)),
    //     options: Joi.array().items(
    //       Joi.object().keys({
    //         name: Joi.string(),
    //         value: Joi.any(),
    //       })
    //     ),
    //   })
    // ),
    // dynamicResponseField: Joi.array().items(
    //   Joi.object().keys({
    //     dynamicFieldId: Joi.objectId(),
    //     response: Joi.any(),
    //   })
    // ),
  }),
  params: _joi["default"].object().keys({
    dealSummaryId: _joi["default"].objectId().required()
  })
};