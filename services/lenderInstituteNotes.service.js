/**
 * This file is generated by Appinvento, also it can be overwritten by Appinvento.
 * Only fields name will be overwritten, if the field name will be changed.
 */
import ApiError from 'utils/ApiError';
import httpStatus from 'http-status';
import { LenderInstituteNotes, LendingInstitution } from 'models';

export async function getLenderInstituteNotesList(filter, options = {}) {
  const lenderInstitute = await LendingInstitution.findOne({ _id: filter.lenderInstitute });
  if (!lenderInstitute) {
    throw new ApiError(httpStatus.BAD_REQUEST, 'lenderInstitute is not valid');
  }
  const lenderInstituteNotes = await LenderInstituteNotes.find(filter, options.projection, options);
  return lenderInstituteNotes;
}

export async function createLenderInstituteNotes(body) {
  if (body.lenderInstitute) {
    const lenderInstitute = await LendingInstitution.findOne({ _id: body.lenderInstitute });
    if (!lenderInstitute) {
      throw new ApiError(httpStatus.BAD_REQUEST, 'Field lenderInstitute is not valid');
    }
  }
  const lenderInstituteNotes = await LenderInstituteNotes.create(body);
  return lenderInstituteNotes;
}
