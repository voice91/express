/**
 * This file is generated by Appinvento, also it can be overwritten by Appinvento.
 * Only fields name will be overwritten, if the field name will be changed.
 */
import ApiError from 'utils/ApiError';
import httpStatus from 'http-status';
import { ActivityLog, Deal } from 'models';

export async function getActivityLogById(id, options = {}) {
  const activityLog = await ActivityLog.findById(id, options.projection, options);
  return activityLog;
}

export async function getOne(query, options = {}) {
  const activityLog = await ActivityLog.findOne(query, options.projection, options);
  return activityLog;
}

export async function getActivityLogList(filter, options = {}) {
  const activityLog = await ActivityLog.find(filter, options.projection, options);
  return activityLog;
}

export async function getActivityLogListWithPagination(filter, options = {}) {
  const activityLog = await ActivityLog.paginate(filter, options);
  return activityLog;
}

export async function createActivityLog(body) {
  const deal = await Deal.findOne({ _id: body.deal });
  if (!deal) {
    throw new ApiError(httpStatus.BAD_REQUEST, 'This Deal is Not Exist');
  }
  const activityLog = await ActivityLog.create(body);
  return activityLog;
}

export async function updateActivityLog(filter, body, options = {}) {
  const deal = await Deal.findOne({ _id: body.deal });
  if (!deal) {
    throw new ApiError(httpStatus.BAD_REQUEST, 'This Deal is Not Exist');
  }
  const activityLog = await ActivityLog.findOneAndUpdate(filter, body, options);
  return activityLog;
}

export async function updateManyActivityLog(filter, body, options = {}) {
  const activityLog = await ActivityLog.updateMany(filter, body, options);
  return activityLog;
}

export async function removeActivityLog(filter) {
  const activityLog = await ActivityLog.findOneAndRemove(filter);
  return activityLog;
}

export async function removeManyActivityLog(filter) {
  const activityLog = await ActivityLog.deleteMany(filter);
  return activityLog;
}
