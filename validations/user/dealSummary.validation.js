/**
 * This file is generated by Appinvento, also it can be overwritten by Appinvento.
 * Only fields name will be overwritten, if the field name will be changed.
 */
import Joi from 'joi';
import enumFields from '../../models/enum.model';

Joi.objectId = require('joi-objectid')(Joi);

const PhotosSchema = Joi.object().keys({
  url: Joi.string(),
  fileName: Joi.string(),
});

// dynamic field schema for repetitive code in create and update deal summary
const dealSummaryDynamicFieldSchema = Joi.object().keys({
  key: Joi.string(),
  value: Joi.any(),
  type: Joi.string().valid(...Object.values(enumFields.EnumOfTypeOfValue)),
});

// dynamic field schema for repetitive code in create and update financial summary in deal summary
const financialSummaryDynamicFieldSchema = Joi.object().keys({
  key: Joi.string(),
  stabilizedValue: Joi.string(),
  inPlaceValue: Joi.string(),
  stabilizedType: Joi.string().valid(...Object.values(enumFields.EnumOfTypeOfValue)),
  inPlaceType: Joi.string().valid(...Object.values(enumFields.EnumOfTypeOfValue)),
});

// eslint-disable-next-line import/prefer-default-export
export const importFileForDealSummary = {
  query: Joi.object().keys({
    url: Joi.string().required(),
    deal: Joi.objectId().required(),
  }),
};

export const exportFileForDealSummary = {
  body: Joi.object().keys({
    url: Joi.string().required(),
    dealSummary: Joi.objectId().required(),
  }),
};

export const getDealSummaryById = {
  params: Joi.object().keys({
    dealSummaryId: Joi.objectId().required(),
  }),
};

export const createDealSummary = {
  body: Joi.object().keys({
    propertySummary: Joi.array().items(dealSummaryDynamicFieldSchema),
    dealMetrics: Joi.array().items(dealSummaryDynamicFieldSchema),
    financingRequest: Joi.array().items(dealSummaryDynamicFieldSchema),
    sourcesAndUses: Joi.object().keys({
      sources: Joi.array().items(dealSummaryDynamicFieldSchema),
      uses: Joi.array().items(dealSummaryDynamicFieldSchema),
    }),
    rentRollSummary: Joi.array().items(Joi.array().items(dealSummaryDynamicFieldSchema)),
    financialSummary: Joi.object().keys({
      revenue: Joi.array().items(financialSummaryDynamicFieldSchema),
      expenses: Joi.array().items(financialSummaryDynamicFieldSchema),
    }),
    executiveSummary: Joi.string(),
    url: Joi.string(),
    dealHighLights: Joi.array().items(Joi.string()),
    marketSummary: Joi.string(),
    sponserOverview: Joi.string(),
    deal: Joi.objectId().required(),
    mainPhoto: PhotosSchema,
    otherPhotos: Joi.array().items(PhotosSchema),
    map: Joi.object().keys({
      lat: Joi.number(),
      lng: Joi.number(),
    }),
    documents: Joi.array().items(PhotosSchema),
  }),
};

export const updateDealSummary = {
  body: Joi.object().keys({
    propertySummary: Joi.array().items(dealSummaryDynamicFieldSchema).allow(''),
    dealMetrics: Joi.array().items(dealSummaryDynamicFieldSchema).allow(''),
    financingRequest: Joi.array().items(dealSummaryDynamicFieldSchema).allow(''),
    sourcesAndUses: Joi.object()
      .keys({
        sources: Joi.array().items(dealSummaryDynamicFieldSchema),
        uses: Joi.array().items(dealSummaryDynamicFieldSchema),
      })
      .allow(''),
    rentRollSummary: Joi.array().items(Joi.array().items(dealSummaryDynamicFieldSchema)).allow(''),
    financialSummary: Joi.object()
      .keys({
        revenue: Joi.array().items(financialSummaryDynamicFieldSchema),
        expenses: Joi.array().items(financialSummaryDynamicFieldSchema),
      })
      .allow(''),
    executiveSummary: Joi.string().allow(''),
    dealHighLights: Joi.array().items(Joi.string()).allow(''),
    marketSummary: Joi.string().allow(''),
    sponserOverview: Joi.string(),
    url: Joi.string(),
    mainPhoto: PhotosSchema,
    otherPhotos: Joi.array().items(PhotosSchema),
    map: Joi.object().keys({
      lat: Joi.number(),
      lng: Joi.number(),
    }),
    documents: Joi.array().items(PhotosSchema),
    // TODO: Need to implement this for custom field
    // dynamicField: Joi.array().items(
    //   Joi.object().keys({
    //     name: Joi.string(),
    //     type: Joi.string().valid(...Object.values(enumFields.EnumOfDynamicFieldType)),
    //     options: Joi.array().items(
    //       Joi.object().keys({
    //         name: Joi.string(),
    //         value: Joi.any(),
    //       })
    //     ),
    //   })
    // ),
    // dynamicResponseField: Joi.array().items(
    //   Joi.object().keys({
    //     dynamicFieldId: Joi.objectId(),
    //     response: Joi.any(),
    //   })
    // ),
  }),
  params: Joi.object().keys({
    dealSummaryId: Joi.objectId().required(),
  }),
};
